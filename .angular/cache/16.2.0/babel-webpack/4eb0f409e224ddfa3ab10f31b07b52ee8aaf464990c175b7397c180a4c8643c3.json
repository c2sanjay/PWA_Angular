{"ast":null,"code":"import { extend, isFunction } from \"./utils\";\nconst defaultOptions = {\n  events: {}\n};\nexport class Observable {\n  constructor(options) {\n    this.options = extend({}, defaultOptions, options);\n  }\n  destroy() {\n    this.options = {};\n  }\n  /**\n   * @hidden\n   */\n  trigger(eventName, args = {}) {\n    const eventData = {\n      defaultPrevented: false,\n      preventDefault: () => {\n        eventData.defaultPrevented = true;\n      }\n    };\n    if (isFunction(this.options.events[eventName])) {\n      this.options.events[eventName](extend(eventData, args, {\n        sender: this\n      }));\n      return eventData.defaultPrevented;\n    }\n    return false;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}