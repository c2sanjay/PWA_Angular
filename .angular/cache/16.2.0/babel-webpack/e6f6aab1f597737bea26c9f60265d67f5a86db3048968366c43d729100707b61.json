{"ast":null,"code":"import _defineProperty from \"C:/Users/Mobile programming/Documents/angular-pwa-boilerplate/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n/**-----------------------------------------------------------------------------------------\n* Copyright © 2025 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Input, isDevMode, Component, Output, ChangeDetectionStrategy, HostListener, HostBinding, forwardRef, ElementRef, ContentChild, ViewChild, InjectionToken, Inject, NgZone, Optional, ViewContainerRef, ViewChildren, TemplateRef, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, NgControl } from '@angular/forms';\nimport * as i1$1 from '@progress/kendo-angular-l10n';\nimport { ComponentMessages, LocalizationService, L10N_PREFIX, RTL } from '@progress/kendo-angular-l10n';\nimport { cloneDate, MS_PER_HOUR, MS_PER_MINUTE, addDays, getDate, isEqual, addDecades, addCenturies, firstDecadeOfCentury, lastDecadeOfCentury, lastYearOfDecade, firstYearOfDecade, createDate, lastMonthOfYear, lastDayOfMonth, durationInCenturies, addYears, durationInDecades, addWeeks, addMonths, firstDayOfMonth, dayOfWeek, durationInMonths, firstMonthOfYear, durationInYears, weekInYear } from '@progress/kendo-date-math';\nimport * as i19 from '@progress/kendo-angular-common';\nimport { isDocumentAvailable, EventsOutsideAngularDirective, guid, Keys as Keys$1, hasObservers, isObject, KendoInput, ResizeSensorComponent, isObjectPresent, removeHTMLAttributes, parseAttributes, anyChanged, isControlRequired, setHTMLAttributes, MultiTabStop, ToggleButtonTabStopDirective, ResizeBatchService, KENDO_TOGGLEBUTTONTABSTOP } from '@progress/kendo-angular-common';\nexport { ToggleButtonTabStopDirective } from '@progress/kendo-angular-common';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport * as i1 from '@progress/kendo-angular-intl';\nimport { localeData } from '@progress/kendo-angular-intl';\nimport { Subject, Subscription, ReplaySubject, Observable, combineLatest, of, interval, animationFrameScheduler, fromEvent, EMPTY, from, BehaviorSubject, merge } from 'rxjs';\nimport { NgIf, NgTemplateOutlet, NgClass, NgFor, NgStyle } from '@angular/common';\nimport { chevronRightIcon, chevronLeftIcon, caretAltUpIcon, xIcon, caretAltDownIcon, calendarIcon, clockIcon } from '@progress/kendo-svg-icons';\nimport { ButtonComponent } from '@progress/kendo-angular-buttons';\nimport { map, scan, takeWhile, debounceTime, tap, filter } from 'rxjs/operators';\nimport { DateInput } from '@progress/kendo-dateinputs-common';\nimport { IconWrapperComponent, IconsService } from '@progress/kendo-angular-icons';\nimport * as i1$2 from '@progress/kendo-angular-popup';\nimport { PopupService } from '@progress/kendo-angular-popup';\nimport { ActionSheetComponent, ActionSheetTemplateDirective } from '@progress/kendo-angular-navigation';\nimport { touchEnabled } from '@progress/kendo-common';\nimport * as i6 from '@progress/kendo-angular-utils';\nimport { AdaptiveService } from '@progress/kendo-angular-utils';\n\n/**\n * @hidden\n */\nconst _c0 = [\"kendoCalendarView\", \"\"];\nfunction _class9_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 3);\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class9_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 4)(1, \"th\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"aria-hidden\", ctx_r2.ariaHidden);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"colSpan\", ctx_r2.colSpan);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.title);\n  }\n}\nfunction _class9_tr_3_ng_template_1_td_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const row_r4 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.getWeekNumber(ctx_r9.firstDate(row_r4)), \" \");\n  }\n}\nfunction _class9_tr_3_ng_template_1_td_0_ng_template_2_Template(rf, ctx) {}\nconst _c1 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    cellContext: a1\n  };\n};\nfunction _class9_tr_3_ng_template_1_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 9);\n    i0.ɵɵlistener(\"click\", function _class9_tr_3_ng_template_1_td_0_Template_td_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const row_r4 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.handleWeekNumberClick(row_r4));\n    });\n    i0.ɵɵtemplate(1, _class9_tr_3_ng_template_1_td_0_ng_template_1_Template, 1, 1, \"ng-template\", 6);\n    i0.ɵɵtemplate(2, _class9_tr_3_ng_template_1_td_0_ng_template_2_Template, 0, 0, \"ng-template\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r4 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.weekNumberTemplateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.weekNumberTemplateRef)(\"ngTemplateOutlet\", ctx_r8.weekNumberTemplateRef)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c1, ctx_r8.firstDate(row_r4), ctx_r8.getWeekNumberContext(row_r4)));\n  }\n}\nfunction _class9_tr_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class9_tr_3_ng_template_1_td_0_Template, 3, 7, \"td\", 8);\n  }\n  if (rf & 2) {\n    const row_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.firstDate(row_r4))(\"ngIfElse\", _r0);\n  }\n}\nfunction _class9_tr_3_ng_container_2_td_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const cell_r17 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵtextInterpolate(cell_r17.formattedValue);\n  }\n}\nfunction _class9_tr_3_ng_container_2_td_1_3_ng_template_0_Template(rf, ctx) {}\nfunction _class9_tr_3_ng_container_2_td_1_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class9_tr_3_ng_container_2_td_1_3_ng_template_0_Template, 0, 0, \"ng-template\", 15);\n  }\n  if (rf & 2) {\n    const cell_r17 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r21.templateRef)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c1, cell_r17.value, cell_r17));\n  }\n}\nfunction _class9_tr_3_ng_container_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12)(1, \"span\", 13);\n    i0.ɵɵtemplate(2, _class9_tr_3_ng_container_2_td_1_ng_template_2_Template, 1, 1, \"ng-template\", 6);\n    i0.ɵɵtemplate(3, _class9_tr_3_ng_container_2_td_1_3_Template, 1, 5, null, 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext();\n    const cell_r17 = ctx_r25.$implicit;\n    const cellIndex_r18 = ctx_r25.index;\n    const rowIndex_r5 = i0.ɵɵnextContext().index;\n    const ctx_r19 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r19.getStyles(cell_r17))(\"title\", cell_r17.title);\n    i0.ɵɵattribute(\"id\", cell_r17.id)(\"data-cell-index\", ctx_r19.tableCellIndex(rowIndex_r5, cellIndex_r18))(\"aria-selected\", cell_r17.isSelected || cell_r17.isRangeStart || cell_r17.isRangeMid || cell_r17.isRangeEnd)(\"aria-disabled\", cell_r17.isDisabled)(\"aria-label\", ctx_r19.getMonthLabel(cell_r17.value));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r19.templateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.templateRef);\n  }\n}\nfunction _class9_tr_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class9_tr_3_ng_container_2_td_1_Template, 4, 9, \"td\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const cell_r17 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.shouldRenderCellContent(cell_r17))(\"ngIfElse\", _r0);\n  }\n}\nfunction _class9_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵtemplate(1, _class9_tr_3_ng_template_1_Template, 1, 2, \"ng-template\", 6);\n    i0.ɵɵtemplate(2, _class9_tr_3_ng_container_2_Template, 2, 2, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.weekNumber);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"kForOf\", row_r4);\n  }\n}\nfunction _class10_ng_template_0_caption_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"caption\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const date_r5 = i0.ɵɵnextContext().date;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.getCaptionTitle(date_r5));\n  }\n}\nfunction _class10_ng_template_0_thead_2_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const name_r11 = ctx.$implicit;\n    const i_r12 = ctx.index;\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"aria-label\", ctx_r10.wideWeekNames[i_r12]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(name_r11);\n  }\n}\nfunction _class10_ng_template_0_thead_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\", 8)(1, \"tr\", 9);\n    i0.ɵɵtemplate(2, _class10_ng_template_0_thead_2_th_2_Template, 2, 2, \"th\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.weekNames);\n  }\n}\nfunction _class10_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 3);\n    i0.ɵɵlistener(\"focus\", function _class10_ng_template_0_Template_table_focus_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.handleClassicCalendarFocus());\n    })(\"blur\", function _class10_ng_template_0_Template_table_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.handleClassicCalendarBlur($event));\n    });\n    i0.ɵɵtemplate(1, _class10_ng_template_0_caption_1_Template, 2, 1, \"caption\", 4);\n    i0.ɵɵtemplate(2, _class10_ng_template_0_thead_2_Template, 3, 1, \"thead\", 5);\n    i0.ɵɵelementStart(3, \"tbody\", 6);\n    i0.ɵɵlistener(\"cellClick\", function _class10_ng_template_0_Template_tbody_cellClick_3_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.cellClick.emit($event));\n    })(\"weekNumberCellClick\", function _class10_ng_template_0_Template_tbody_weekNumberCellClick_3_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.weekNumberCellClick.emit($event));\n    })(\"cellEnter\", function _class10_ng_template_0_Template_tbody_cellEnter_3_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.cellEnter.emit($event));\n    })(\"cellLeave\", function _class10_ng_template_0_Template_tbody_cellLeave_3_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.cellLeave.emit($event));\n    })(\"focusedCellId\", function _class10_ng_template_0_Template_tbody_focusedCellId_3_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.focusedCellChange.emit($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const date_r5 = ctx.date;\n    const class_r6 = ctx.className;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", class_r6);\n    i0.ɵɵattribute(\"role\", ctx_r1.views >= 2 ? \"none\" : \"grid\")(\"aria-labelledby\", ctx_r1.id)(\"aria-activedescendant\", ctx_r1.getActiveDescendant)(\"tabindex\", ctx_r1.getTabIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showViewHeader);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isMonthView());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowReverse\", ctx_r1.allowReverse)(\"showOtherMonthDays\", ctx_r1.showOtherMonthDays)(\"activeView\", ctx_r1.activeView)(\"isActive\", ctx_r1.isActive)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"cellUID\", ctx_r1.cellUID)(\"focusedDate\", ctx_r1.focusedDate)(\"selectedDates\", ctx_r1.selectedDates)(\"selectionRange\", ctx_r1.selectionRange)(\"activeRangeEnd\", ctx_r1.activeRangeEnd)(\"weekNumber\", ctx_r1.weekNumber)(\"templateRef\", ctx_r1.cellTemplateRef)(\"weekNumberTemplateRef\", ctx_r1.weekNumberTemplateRef)(\"viewDate\", date_r5);\n  }\n}\nfunction _class10_2_ng_template_0_Template(rf, ctx) {}\nconst _c2 = function (a0) {\n  return {\n    date: a0,\n    className: \"k-pointer-events-none\"\n  };\n};\nfunction _class10_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class10_2_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r0)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c2, ctx_r2.nextAnimationDate));\n  }\n}\nfunction _class10_3_ng_template_0_Template(rf, ctx) {}\nconst _c3 = function (a0) {\n  return {\n    date: a0\n  };\n};\nfunction _class10_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class10_3_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n  if (rf & 2) {\n    const date_r22 = ctx.$implicit;\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r0)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, date_r22));\n  }\n}\nfunction _class10_4_ng_template_0_Template(rf, ctx) {}\nfunction _class10_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class10_4_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r0)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c2, ctx_r4.prevAnimationDate));\n  }\n}\nfunction _class11_0_ng_template_0_Template(rf, ctx) {}\nconst _c4 = function (a0, a1, a2) {\n  return {\n    title: a0,\n    activeView: a1,\n    date: a2\n  };\n};\nfunction _class11_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class11_0_ng_template_0_Template, 0, 0, \"ng-template\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerTemplateRef)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(2, _c4, ctx_r0.title, ctx_r0.activeViewValue, ctx_r0.currentDate));\n  }\n}\nfunction _class11_ng_template_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate(ctx_r4.title);\n  }\n}\nfunction _class11_ng_template_1_ng_template_2_Template(rf, ctx) {}\nfunction _class11_ng_template_1_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function _class11_ng_template_1_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.prevButtonClick.emit());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"size\", ctx_r6.size)(\"svgIcon\", ctx_r6.chevronLeftIcon)(\"disabled\", ctx_r6.isPrevDisabled)(\"title\", ctx_r6.prevButtonTitle);\n    i0.ɵɵattribute(\"aria-disabled\", ctx_r6.isPrevDisabled);\n  }\n}\nfunction _class11_ng_template_1_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function _class11_ng_template_1_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.nextButtonClick.emit());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"size\", ctx_r7.size)(\"svgIcon\", ctx_r7.chevronRightIcon)(\"disabled\", ctx_r7.isNextDisabled)(\"title\", ctx_r7.nextButtonTitle);\n    i0.ɵɵattribute(\"aria-disabled\", ctx_r7.isNextDisabled);\n  }\n}\nconst _c5 = function (a0) {\n  return {\n    click: a0\n  };\n};\nconst _c6 = function (a0, a1, a2) {\n  return {\n    $implicit: a0,\n    activeView: a1,\n    date: a2\n  };\n};\nfunction _class11_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵtemplate(1, _class11_ng_template_1_ng_template_1_Template, 1, 1, \"ng-template\", 4);\n    i0.ɵɵtemplate(2, _class11_ng_template_1_ng_template_2_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"span\", 6);\n    i0.ɵɵelementStart(4, \"span\", 7);\n    i0.ɵɵtemplate(5, _class11_ng_template_1_button_5_Template, 1, 5, \"button\", 8);\n    i0.ɵɵelementStart(6, \"button\", 9);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, _class11_ng_template_1_button_8_Template, 1, 5, \"button\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r2.id)(\"size\", ctx_r2.size)(\"disabled\", !ctx_r2.navigate)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(17, _c5, ctx_r2.handleNavigation))(\"title\", ctx_r2.parentViewButtonTitle)(\"scope\", ctx_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.titleTemplateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.titleTemplateRef)(\"ngTemplateOutlet\", ctx_r2.titleTemplateRef)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(19, _c6, ctx_r2.title, ctx_r2.activeViewValue, ctx_r2.currentDate));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showNavigationButtons);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"size\", ctx_r2.size)(\"disabled\", !ctx_r2.todayAvailable)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(23, _c5, ctx_r2.handleTodayClick))(\"scope\", ctx_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.todayMessage, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showNavigationButtons);\n  }\n}\nfunction _class23_0_ng_template_0_Template(rf, ctx) {}\nconst _c7 = function (a0, a1) {\n  return {\n    activeView: a0,\n    date: a1\n  };\n};\nfunction _class23_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class23_0_ng_template_0_Template, 0, 0, \"ng-template\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.footerTemplateRef)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c7, ctx_r0.activeViewValue, ctx_r0.currentDate));\n  }\n}\nfunction _class23_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.intl.formatDate(ctx_r2.getToday(), \"D\"), \" \");\n  }\n}\nfunction _class26_kendo_calendar_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"kendo-calendar-header\", 4);\n    i0.ɵɵlistener(\"todayButtonClick\", function _class26_kendo_calendar_header_1_Template_kendo_calendar_header_todayButtonClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.handleTodayButtonClick({\n        selectedDates: [$event],\n        focusedDate: $event\n      }));\n    })(\"prevButtonClick\", function _class26_kendo_calendar_header_1_Template_kendo_calendar_header_prevButtonClick_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.navigateView(ctx_r4.prevView));\n    })(\"nextButtonClick\", function _class26_kendo_calendar_header_1_Template_kendo_calendar_header_nextButtonClick_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.navigateView(ctx_r5.nextView));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activeView\", ctx_r0.activeViewEnum)(\"currentDate\", ctx_r0.activeDate)(\"size\", ctx_r0.size)(\"min\", ctx_r0.min)(\"max\", ctx_r0.max)(\"id\", ctx_r0.headerId)(\"rangeLength\", ctx_r0.views)(\"titleTemplateRef\", ctx_r0.headerTitleTemplateRef == null ? null : ctx_r0.headerTitleTemplateRef.templateRef)(\"headerTemplateRef\", ctx_r0.headerTemplateRef == null ? null : ctx_r0.headerTemplateRef.templateRef)(\"isPrevDisabled\", ctx_r0.isPrevDisabled)(\"isNextDisabled\", ctx_r0.isNextDisabled)(\"showNavigationButtons\", true)(\"orientation\", ctx_r0.orientation);\n  }\n}\nfunction _class26_kendo_calendar_footer_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-calendar-footer\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"footerTemplateRef\", ctx_r1.footerTemplateRef == null ? null : ctx_r1.footerTemplateRef.templateRef)(\"activeViewValue\", ctx_r1.activeView)(\"currentDate\", ctx_r1.activeDate);\n  }\n}\nconst _c16 = [\"*\"];\nconst _c17 = [\"list\"];\nfunction _class33_li_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const date_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r4.service.navigationTitle(date_r2));\n  }\n}\nfunction _class33_li_4_ng_template_3_Template(rf, ctx) {}\nfunction _class33_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\");\n    i0.ɵɵtemplate(2, _class33_li_4_ng_template_2_Template, 1, 1, \"ng-template\", 5);\n    i0.ɵɵtemplate(3, _class33_li_4_ng_template_3_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const date_r2 = ctx.$implicit;\n    const index_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"data-date-index\", index_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"k-calendar-navigation-marker\", ctx_r1.service.isRangeStart(date_r2));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.templateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.templateRef)(\"ngTemplateOutlet\", ctx_r1.templateRef)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(7, _c6, ctx_r1.service.navigationTitle(date_r2), ctx_r1.activeViewValue, date_r2));\n  }\n}\nfunction _class34_table_1_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const name_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"aria-label\", ctx_r5.wideWeekNames[i_r7]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(name_r6);\n  }\n}\nfunction _class34_table_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 8)(1, \"thead\", 9)(2, \"tr\", 10);\n    i0.ɵɵtemplate(3, _class34_table_1_th_3_Template, 2, 2, \"th\", 11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"table-layout\", \"auto\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.weekNames);\n  }\n}\nfunction _class34_col_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"col\");\n  }\n}\nfunction _class34_tbody_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tbody\", 13);\n    i0.ɵɵlistener(\"cellClick\", function _class34_tbody_7_Template_tbody_cellClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.cellClick.emit($event));\n    })(\"weekNumberCellClick\", function _class34_tbody_7_Template_tbody_weekNumberCellClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.weekNumberCellClick.emit($event));\n    })(\"focusedCellId\", function _class34_tbody_7_Template_tbody_focusedCellId_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.focusedCellChange.emit($event));\n    })(\"cellEnter\", function _class34_tbody_7_Template_tbody_cellEnter_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.cellEnter.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const date_r9 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"allowReverse\", ctx_r3.allowReverse)(\"activeRangeEnd\", ctx_r3.activeRangeEnd)(\"selectionRange\", ctx_r3.selectionRange)(\"showOtherMonthDays\", ctx_r3.showOtherMonthDays)(\"headerTitle\", ctx_r3.headerTitle)(\"activeView\", ctx_r3.activeView)(\"isActive\", ctx_r3.isActive)(\"min\", ctx_r3.min)(\"max\", ctx_r3.max)(\"cellUID\", ctx_r3.cellUID)(\"focusedDate\", ctx_r3.focusedDate)(\"selectedDates\", ctx_r3.selectedDates)(\"weekNumber\", ctx_r3.weekNumber)(\"templateRef\", ctx_r3.cellTemplateRef)(\"weekNumberTemplateRef\", ctx_r3.weekNumberTemplateRef)(\"viewDate\", date_r9);\n  }\n}\nfunction _class34_kendo_calendar_footer_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-calendar-footer\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"footerTemplateRef\", ctx_r4.footerTemplateRef)(\"activeViewValue\", ctx_r4.activeViewValue)(\"currentDate\", ctx_r4.activeDate);\n  }\n}\nfunction _class41_ng_container_1_kendo_calendar_navigation_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"kendo-calendar-navigation\", 5);\n    i0.ɵɵlistener(\"valueChange\", function _class41_ng_container_1_kendo_calendar_navigation_1_Template_kendo_calendar_navigation_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.handleNavigation($event));\n    })(\"pageChange\", function _class41_ng_container_1_kendo_calendar_navigation_1_Template_kendo_calendar_navigation_pageChange_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onPageChange());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"activeView\", ctx_r2.activeViewEnum)(\"focusedDate\", ctx_r2.focusedDate)(\"min\", ctx_r2.min)(\"max\", ctx_r2.max)(\"templateRef\", ctx_r2.navigationItemTemplateRef == null ? null : ctx_r2.navigationItemTemplateRef.templateRef);\n  }\n}\nfunction _class41_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class41_ng_container_1_kendo_calendar_navigation_1_Template, 1, 5, \"kendo-calendar-navigation\", 2);\n    i0.ɵɵelementStart(2, \"kendo-calendar-viewlist\", 3);\n    i0.ɵɵlistener(\"todayButtonClick\", function _class41_ng_container_1_Template_kendo_calendar_viewlist_todayButtonClick_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.handleDateChange({\n        selectedDates: [$event],\n        focusedDate: $event\n      }));\n    })(\"cellClick\", function _class41_ng_container_1_Template_kendo_calendar_viewlist_cellClick_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.handleCellClick($event));\n    })(\"weekNumberCellClick\", function _class41_ng_container_1_Template_kendo_calendar_viewlist_weekNumberCellClick_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.handleWeekNumberClick($event));\n    })(\"activeDateChange\", function _class41_ng_container_1_Template_kendo_calendar_viewlist_activeDateChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.handleActiveDateChange($event));\n    })(\"pageChange\", function _class41_ng_container_1_Template_kendo_calendar_viewlist_pageChange_2_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onPageChange());\n    })(\"focusCalendar\", function _class41_ng_container_1_Template_kendo_calendar_viewlist_focusCalendar_2_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.handleFocus());\n    })(\"blurCalendar\", function _class41_ng_container_1_Template_kendo_calendar_viewlist_blurCalendar_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.handleBlur($event));\n    })(\"cellEnter\", function _class41_ng_container_1_Template_kendo_calendar_viewlist_cellEnter_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onCellEnter($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"kendo-resize-sensor\", 4);\n    i0.ɵɵlistener(\"resize\", function _class41_ng_container_1_Template_kendo_resize_sensor_resize_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onResize());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_10_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.navigation);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"activeView\", ctx_r0.activeViewEnum)(\"allowReverse\", ctx_r0.allowReverse)(\"showOtherMonthDays\", ctx_r0.showOtherMonthDays)(\"activeRangeEnd\", ctx_r0.activeRangeEnd)(\"selectionRange\", ctx_r0.selectionRange)(\"size\", ctx_r0.size)(\"isActive\", ctx_r0.isActive)(\"id\", ctx_r0.headerId)(\"weekDaysFormat\", ctx_r0.weekDaysFormat)(\"cellTemplateRef\", (tmp_10_0 = ctx_r0.activeCellTemplate()) == null ? null : tmp_10_0.templateRef)(\"headerTitleTemplateRef\", ctx_r0.headerTitleTemplateRef == null ? null : ctx_r0.headerTitleTemplateRef.templateRef)(\"headerTemplateRef\", ctx_r0.headerTemplateRef == null ? null : ctx_r0.headerTemplateRef.templateRef)(\"showFooter\", ctx_r0.footer)(\"footerTemplateRef\", ctx_r0.footerTemplateRef == null ? null : ctx_r0.footerTemplateRef.templateRef)(\"weekNumberTemplateRef\", ctx_r0.weekNumberTemplateRef == null ? null : ctx_r0.weekNumberTemplateRef.templateRef)(\"cellUID\", ctx_r0.cellUID)(\"min\", ctx_r0.min)(\"max\", ctx_r0.max)(\"focusedDate\", ctx_r0.focusedDate)(\"weekNumber\", ctx_r0.weekNumber)(\"selectedDates\", ctx_r0.selectedDates)(\"tabIndex\", ctx_r0.tabIndex)(\"disabled\", ctx_r0.disabled);\n  }\n}\nfunction _class41_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"kendo-multiviewcalendar\", 6, 7);\n    i0.ɵɵlistener(\"activeViewChange\", function _class41_ng_container_2_Template_kendo_multiviewcalendar_activeViewChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.handleActiveViewChange($event));\n    })(\"navigate\", function _class41_ng_container_2_Template_kendo_multiviewcalendar_navigate_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.handleNavigate($event));\n    })(\"valueChange\", function _class41_ng_container_2_Template_kendo_multiviewcalendar_valueChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const _r16 = i0.ɵɵreference(2);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.handleMultiViewCalendarValueChange($event, _r16.focusedDate));\n    })(\"focusCalendar\", function _class41_ng_container_2_Template_kendo_multiviewcalendar_focusCalendar_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.handleFocus());\n    })(\"blur\", function _class41_ng_container_2_Template_kendo_multiviewcalendar_blur_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.handleBlur($event));\n    })(\"blurEvent\", function _class41_ng_container_2_Template_kendo_multiviewcalendar_blurEvent_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.handleBlur($event));\n    })(\"keydown\", function _class41_ng_container_2_Template_kendo_multiviewcalendar_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.handleMultiViewCalendarKeydown($event));\n    });\n    i0.ɵɵelement(3, \"kendo-multiviewcalendar-messages\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"views\", 1)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"size\", ctx_r1.size)(\"id\", ctx_r1.id)(\"activeRangeEnd\", ctx_r1.activeRangeEnd)(\"selectionRange\", ctx_r1.selectionRange)(\"allowReverse\", ctx_r1.allowReverse)(\"disabled\", ctx_r1.disabled)(\"isActive\", ctx_r1.isActive)(\"showOtherMonthDays\", ctx_r1.showOtherMonthDays)(\"tabIndex\", ctx_r1.tabIndex)(\"activeView\", ctx_r1.activeView)(\"bottomView\", ctx_r1.bottomView)(\"topView\", ctx_r1.topView)(\"weekDaysFormat\", ctx_r1.weekDaysFormat)(\"weekNumber\", ctx_r1.weekNumber)(\"animateNavigation\", ctx_r1.animateNavigation)(\"cellTemplate\", ctx_r1.activeCellTemplate())(\"monthCellTemplate\", ctx_r1.monthCellTemplateRef)(\"yearCellTemplate\", ctx_r1.yearCellTemplateRef)(\"decadeCellTemplate\", ctx_r1.decadeCellTemplateRef)(\"centuryCellTemplate\", ctx_r1.centuryCellTemplateRef)(\"headerTitleTemplate\", ctx_r1.headerTitleTemplateRef)(\"headerTemplate\", ctx_r1.headerTemplateRef)(\"footerTemplate\", ctx_r1.footerTemplateRef)(\"footer\", ctx_r1.footer)(\"weekNumberTemplate\", ctx_r1.weekNumberTemplateRef)(\"focusedDate\", ctx_r1.focusedDate)(\"selection\", ctx_r1.selection)(\"value\", ctx_r1.value)(\"disabledDates\", ctx_r1.disabledDates);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"today\", ctx_r1.localization.get(\"today\"))(\"prevButtonTitle\", ctx_r1.localization.get(\"prevButtonTitle\"))(\"nextButtonTitle\", ctx_r1.localization.get(\"nextButtonTitle\"))(\"parentViewButtonTitle\", ctx_r1.localization.get(\"parentViewButtonTitle\"));\n  }\n}\nconst _c26 = [\"dateInput\"];\nconst _c27 = [\"spinup\"];\nconst _c28 = [\"spindown\"];\nfunction _class45_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵlistener(\"click\", function _class45_span_3_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.resetInput());\n    })(\"mousedown\", function _class45_span_3_Template_span_mousedown_0_listener($event) {\n      return $event.preventDefault();\n    });\n    i0.ɵɵelement(1, \"kendo-icon-wrapper\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"title\", ctx_r1.localization.get(\"clearTitle\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r1.xIcon);\n  }\n}\nfunction _class45_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵlistener(\"mousedown\", function _class45_span_4_Template_span_mousedown_0_listener($event) {\n      return $event.preventDefault();\n    });\n    i0.ɵɵelementStart(1, \"button\", 8, 9);\n    i0.ɵɵlistener(\"mousedown\", function _class45_span_4_Template_button_mousedown_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.arrowDirection = ctx_r9.arrow.Up);\n    })(\"mouseleave\", function _class45_span_4_Template_button_mouseleave_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.arrowDirection = ctx_r11.arrow.None);\n    })(\"click\", function _class45_span_4_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.handleButtonClick(1));\n    });\n    i0.ɵɵelement(3, \"kendo-icon-wrapper\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 11, 12);\n    i0.ɵɵlistener(\"click\", function _class45_span_4_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.handleButtonClick(-1));\n    })(\"mousedown\", function _class45_span_4_Template_button_mousedown_4_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.arrowDirection = ctx_r14.arrow.Down);\n    })(\"mouseleave\", function _class45_span_4_Template_button_mouseleave_4_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.arrowDirection = ctx_r15.arrow.None);\n    });\n    i0.ɵɵelement(6, \"kendo-icon-wrapper\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"k-active\", ctx_r2.arrowDirection === ctx_r2.arrow.Up);\n    i0.ɵɵproperty(\"title\", ctx_r2.localization.get(\"increment\"));\n    i0.ɵɵattribute(\"aria-label\", ctx_r2.localization.get(\"increment\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r2.caretAltUpIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"k-active\", ctx_r2.arrowDirection === ctx_r2.arrow.Down);\n    i0.ɵɵproperty(\"title\", ctx_r2.localization.get(\"decrement\"));\n    i0.ɵɵattribute(\"aria-label\", ctx_r2.localization.get(\"decrement\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r2.caretAltDownIcon);\n  }\n}\nconst _c35 = function (a0, a1) {\n  return {\n    dragstart: a0,\n    drop: a1\n  };\n};\nconst _c36 = [\"container\"];\nconst _c37 = [\"popupTemplate\"];\nconst _c38 = [\"toggleButton\"];\nconst _c39 = [\"actionSheet\"];\nfunction _class51_ng_template_9_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class51_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class51_ng_template_9_ng_container_0_Template, 1, 0, \"ng-container\", 14);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r8 = i0.ɵɵreference(16);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r8);\n  }\n}\nfunction _class51_kendo_resize_sensor_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"kendo-resize-sensor\", 15);\n    i0.ɵɵlistener(\"resize\", function _class51_kendo_resize_sensor_11_Template_kendo_resize_sensor_resize_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onResize());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class51_ng_template_14_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class51_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"div\", 18)(3, \"div\", 19);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 20);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 21)(8, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function _class51_ng_template_14_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.show = false);\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"div\", 23);\n    i0.ɵɵtemplate(10, _class51_ng_template_14_ng_container_10_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    const _r8 = i0.ɵɵreference(16);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r7.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r7.subtitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r7.xIcon)(\"tabIndex\", -1);\n    i0.ɵɵattribute(\"title\", ctx_r7.localization.get(\"clearTitle\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r8);\n  }\n}\nconst _c52 = function (a0) {\n  return {\n    keydown: a0\n  };\n};\nfunction _class51_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"kendo-calendar\", 24, 25);\n    i0.ɵɵlistener(\"valueChange\", function _class51_ng_template_15_Template_kendo_calendar_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.handleChange(ctx_r17.mergeTime($event)));\n    });\n    i0.ɵɵelement(2, \"kendo-calendar-messages\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"type\", ctx_r9.calendarType)(\"size\", ctx_r9.isAdaptive ? \"large\" : ctx_r9.size)(\"min\", ctx_r9.min)(\"max\", ctx_r9.max)(\"weekDaysFormat\", ctx_r9.weekDaysFormat)(\"navigation\", ctx_r9.navigation)(\"animateNavigation\", ctx_r9.animateCalendarNavigation)(\"activeView\", ctx_r9.activeView)(\"bottomView\", ctx_r9.bottomView)(\"showOtherMonthDays\", ctx_r9.showOtherMonthDays)(\"topView\", ctx_r9.topView)(\"weekNumber\", ctx_r9.weekNumber)(\"cellTemplate\", ctx_r9.cellTemplate)(\"monthCellTemplate\", ctx_r9.monthCellTemplate)(\"yearCellTemplate\", ctx_r9.yearCellTemplate)(\"decadeCellTemplate\", ctx_r9.decadeCellTemplate)(\"centuryCellTemplate\", ctx_r9.centuryCellTemplate)(\"weekNumberTemplate\", ctx_r9.weekNumberTemplate)(\"headerTitleTemplate\", ctx_r9.headerTitleTemplate)(\"headerTemplate\", ctx_r9.headerTemplate)(\"footerTemplate\", ctx_r9.footerTemplate)(\"footer\", ctx_r9.footer)(\"navigationItemTemplate\", ctx_r9.navigationItemTemplate)(\"focusedDate\", ctx_r9.focusedDate)(\"value\", ctx_r9.value)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(32, _c52, ctx_r9.handleKeydown))(\"scope\", ctx_r9)(\"disabledDates\", ctx_r9.disabledDates);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"today\", ctx_r9.localization.get(\"today\"))(\"prevButtonTitle\", ctx_r9.localization.get(\"prevButtonTitle\"))(\"nextButtonTitle\", ctx_r9.localization.get(\"nextButtonTitle\"))(\"parentViewButtonTitle\", ctx_r9.localization.get(\"parentViewButtonTitle\"));\n  }\n}\nconst _c53 = function (a0, a1) {\n  return {\n    click: a0,\n    mousedown: a1\n  };\n};\nfunction _class58_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 3)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const index_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"data-timelist-item-index\", index_r2)(\"role\", \"option\")(\"aria-selected\", index_r2 === ctx_r0.currentSelectedIndex);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.text);\n  }\n}\nconst _c54 = [\"accept\"];\nconst _c55 = [\"cancel\"];\nconst _c56 = [\"now\"];\nconst _c57 = [\"listWrapper\"];\nconst _c70 = function (a0, a1, a2, a3) {\n  return {\n    click: a0,\n    focus: a1,\n    blur: a2,\n    keydown: a3\n  };\n};\nfunction _class61_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 8, 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction4(6, _c70, ctx_r0.handleNow, ctx_r0.handleFocus, ctx_r0.handleBlur, ctx_r0.handleTabOut))(\"scope\", ctx_r0)(\"disabled\", ctx_r0.disabled);\n    i0.ɵɵattribute(\"title\", ctx_r0.localization.get(\"nowLabel\"))(\"aria-label\", ctx_r0.localization.get(\"nowLabel\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.localization.get(\"now\"));\n  }\n}\nconst _c71 = function (a0, a1) {\n  return {\n    focus: a0,\n    blur: a1\n  };\n};\nfunction _class61_ng_template_7_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12, 13)(2, \"span\", 2);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"kendo-timelist\", 14);\n    i0.ɵɵlistener(\"valueChange\", function _class61_ng_template_7_div_0_Template_kendo_timelist_valueChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.current = $event);\n    })(\"tabOutLastPart\", function _class61_ng_template_7_div_0_Template_kendo_timelist_tabOutLastPart_4_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.tabOutLastPart.emit());\n    })(\"tabOutFirstPart\", function _class61_ng_template_7_div_0_Template_kendo_timelist_tabOutFirstPart_4_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.tabOutFirstPart.emit());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    const part_r4 = ctx_r13.$implicit;\n    const idx_r5 = ctx_r13.index;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r6.intl.dateFieldName(part_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"isLast\", idx_r5 === ctx_r6.dateFormatParts.length - 1)(\"isFirst\", idx_r5 === 0)(\"min\", ctx_r6.min)(\"max\", ctx_r6.max)(\"part\", part_r4)(\"step\", ctx_r6.partStep(part_r4))(\"disabled\", ctx_r6.disabled)(\"value\", ctx_r6.current)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(12, _c71, ctx_r6.handleListFocus, ctx_r6.handleBlur))(\"scope\", ctx_r6);\n    i0.ɵɵattribute(\"data-timelist-index\", idx_r5);\n  }\n}\nfunction _class61_ng_template_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const part_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", part_r4.pattern, \" \");\n  }\n}\nfunction _class61_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class61_ng_template_7_div_0_Template, 5, 15, \"div\", 10);\n    i0.ɵɵtemplate(1, _class61_ng_template_7_div_1_Template, 2, 1, \"div\", 11);\n  }\n  if (rf & 2) {\n    const part_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", part_r4.type !== \"literal\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", part_r4.type === \"literal\");\n  }\n}\nfunction _class61_div_8_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 19, 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction4(6, _c70, ctx_r15.handleAccept, ctx_r15.handleFocus, ctx_r15.handleBlur, ctx_r15.handleTabOut))(\"scope\", ctx_r15)(\"disabled\", ctx_r15.disabled);\n    i0.ɵɵattribute(\"title\", ctx_r15.localization.get(\"acceptLabel\"))(\"aria-label\", ctx_r15.localization.get(\"acceptLabel\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r15.localization.get(\"accept\"));\n  }\n}\nfunction _class61_div_8_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 21, 22);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction4(6, _c70, ctx_r16.handleReject, ctx_r16.handleFocus, ctx_r16.handleBlur, ctx_r16.handleTabOut))(\"scope\", ctx_r16)(\"disabled\", ctx_r16.disabled);\n    i0.ɵɵattribute(\"title\", ctx_r16.localization.get(\"cancelLabel\"))(\"aria-label\", ctx_r16.localization.get(\"cancelLabel\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r16.localization.get(\"cancel\"));\n  }\n}\nfunction _class61_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, _class61_div_8_button_1_Template, 3, 11, \"button\", 17);\n    i0.ɵɵtemplate(2, _class61_div_8_button_2_Template, 3, 11, \"button\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.setButton);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.cancelButton);\n  }\n}\nfunction _class64_ng_template_7_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class64_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class64_ng_template_7_ng_container_0_Template, 1, 0, \"ng-container\", 14);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r8 = i0.ɵɵreference(16);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r8);\n  }\n}\nfunction _class64_kendo_resize_sensor_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"kendo-resize-sensor\", 15);\n    i0.ɵɵlistener(\"resize\", function _class64_kendo_resize_sensor_11_Template_kendo_resize_sensor_resize_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onResize());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class64_ng_template_14_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class64_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"div\", 18)(3, \"div\", 19);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 20);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 21)(8, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function _class64_ng_template_14_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.show = false);\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"div\", 23);\n    i0.ɵɵtemplate(10, _class64_ng_template_14_ng_container_10_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 24)(12, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function _class64_ng_template_14_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.handleReject());\n    });\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function _class64_ng_template_14_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.handleActionSheetAccept());\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    const _r8 = i0.ɵɵreference(16);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r7.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r7.subtitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r7.xIcon)(\"tabIndex\", -1);\n    i0.ɵɵattribute(\"title\", ctx_r7.localization.get(\"clearTitle\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"title\", ctx_r7.localization.get(\"cancelLabel\"))(\"aria-label\", ctx_r7.localization.get(\"cancelLabel\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.localization.get(\"cancel\"), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"title\", ctx_r7.localization.get(\"acceptLabel\"))(\"aria-label\", ctx_r7.localization.get(\"acceptLabel\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.localization.get(\"accept\"), \" \");\n  }\n}\nconst _c98 = function (a0, a1) {\n  return {\n    keydown: a0,\n    mousedown: a1\n  };\n};\nfunction _class64_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"kendo-timeselector\", 27, 28);\n    i0.ɵɵlistener(\"valueChange\", function _class64_ng_template_15_Template_kendo_timeselector_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.handleChange($event));\n    })(\"valueReject\", function _class64_ng_template_15_Template_kendo_timeselector_valueReject_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.handleReject());\n    })(\"tabOutLastPart\", function _class64_ng_template_15_Template_kendo_timeselector_tabOutLastPart_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onTabOutLastPart());\n    })(\"tabOutFirstPart\", function _class64_ng_template_15_Template_kendo_timeselector_tabOutFirstPart_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.onTabOutFirstPart());\n    })(\"tabOutNow\", function _class64_ng_template_15_Template_kendo_timeselector_tabOutNow_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.onTabOutNow());\n    });\n    i0.ɵɵelement(2, \"kendo-timeselector-messages\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-timeselector-lg\", ctx_r9.isAdaptive);\n    i0.ɵɵproperty(\"cancelButton\", ctx_r9.cancelButton && !ctx_r9.isAdaptive)(\"setButton\", !ctx_r9.isAdaptive)(\"nowButton\", ctx_r9.nowButton)(\"format\", ctx_r9.format)(\"min\", ctx_r9.min)(\"max\", ctx_r9.max)(\"steps\", ctx_r9.steps)(\"value\", ctx_r9.value)(\"isAdaptiveEnabled\", ctx_r9.isAdaptiveModeEnabled)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(24, _c98, ctx_r9.handleKeydown, ctx_r9.handleMousedown))(\"scope\", ctx_r9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"acceptLabel\", ctx_r9.localization.get(\"acceptLabel\"))(\"accept\", ctx_r9.localization.get(\"accept\"))(\"cancelLabel\", ctx_r9.localization.get(\"cancelLabel\"))(\"cancel\", ctx_r9.localization.get(\"cancel\"))(\"nowLabel\", ctx_r9.localization.get(\"nowLabel\"))(\"now\", ctx_r9.localization.get(\"now\"))(\"hour\", ctx_r9.localization.get(\"hour\"))(\"minute\", ctx_r9.localization.get(\"minute\"))(\"second\", ctx_r9.localization.get(\"second\"))(\"millisecond\", ctx_r9.localization.get(\"millisecond\"))(\"dayperiod\", ctx_r9.localization.get(\"dayperiod\"));\n  }\n}\nfunction _class67_kendo_icon_wrapper_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-icon-wrapper\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"svgIcon\", ctx_r1.calendarIcon);\n  }\n}\nfunction _class67_kendo_icon_wrapper_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-icon-wrapper\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"svgIcon\", ctx_r2.clockIcon);\n  }\n}\nfunction _class67_ng_template_9_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class67_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class67_ng_template_9_ng_container_0_Template, 1, 0, \"ng-container\", 16);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r9 = i0.ɵɵreference(16);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r9);\n  }\n}\nfunction _class67_kendo_resize_sensor_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"kendo-resize-sensor\", 17);\n    i0.ɵɵlistener(\"resize\", function _class67_kendo_resize_sensor_11_Template_kendo_resize_sensor_resize_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onResize());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class67_ng_template_14_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class67_ng_template_14_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function _class67_ng_template_14_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.handleCancel());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"title\", ctx_r15.localization.get(\"cancelLabel\"))(\"aria-label\", ctx_r15.localization.get(\"cancelLabel\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r15.localization.get(\"cancel\"), \" \");\n  }\n}\nfunction _class67_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19)(2, \"div\", 20)(3, \"div\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 22);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 23)(8, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function _class67_ng_template_14_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.toggleDateTime(false));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"div\", 25);\n    i0.ɵɵtemplate(10, _class67_ng_template_14_ng_container_10_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 26);\n    i0.ɵɵtemplate(12, _class67_ng_template_14_button_12_Template, 2, 3, \"button\", 27);\n    i0.ɵɵelementStart(13, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function _class67_ng_template_14_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.handleAccept());\n    });\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    const _r9 = i0.ɵɵreference(16);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r8.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.subtitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r8.xIcon)(\"tabIndex\", -1);\n    i0.ɵɵattribute(\"title\", ctx_r8.localization.get(\"clearTitle\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.cancelButton);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r8.calendarValue);\n    i0.ɵɵattribute(\"title\", ctx_r8.localization.get(\"acceptLabel\"))(\"aria-label\", ctx_r8.localization.get(\"acceptLabel\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.localization.get(\"accept\"), \" \");\n  }\n}\nconst _c141 = function (a0, a1, a2) {\n  return {\n    click: a0,\n    \"keydown.tab\": a1,\n    \"keydown.shift.tab\": a2\n  };\n};\nfunction _class67_ng_template_15_div_16_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 48);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r24.popupButtonsClasses())(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction3(6, _c141, ctx_r24.handleCancel, ctx_r24.handleTab, ctx_r24.handleTab))(\"scope\", ctx_r24);\n    i0.ɵɵattribute(\"title\", ctx_r24.localization.get(\"cancelLabel\"))(\"aria-label\", ctx_r24.localization.get(\"cancelLabel\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r24.localization.get(\"cancel\"), \" \");\n  }\n}\nconst _c142 = function (a0, a1) {\n  return {\n    focusin: a0,\n    focusout: a1\n  };\n};\nfunction _class67_ng_template_15_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 45)(1, \"button\", 46);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, _class67_ng_template_15_div_16_button_3_Template, 2, 10, \"button\", 47);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(10, _c142, ctx_r23.handleFocus, ctx_r23.handleBlur))(\"scope\", ctx_r23);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r23.popupButtonsClasses(\"primary\"))(\"disabled\", !ctx_r23.calendarValue)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction3(13, _c141, ctx_r23.handleAccept, ctx_r23.handleTab, ctx_r23.handleTab))(\"scope\", ctx_r23);\n    i0.ɵɵattribute(\"title\", ctx_r23.localization.get(\"acceptLabel\"))(\"aria-label\", ctx_r23.localization.get(\"acceptLabel\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r23.localization.get(\"accept\"), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r23.cancelButton);\n  }\n}\nconst _c143 = function (a0, a1) {\n  return {\n    \"k-datetime-wrap-md\": a0,\n    \"k-datetime-wrap-lg\": a1\n  };\n};\nconst _c144 = function (a0, a1) {\n  return {\n    mousedown: a0,\n    keydown: a1\n  };\n};\nconst _c145 = function (a0, a1) {\n  return {\n    click: a0,\n    \"keydown.shift.tab\": a1\n  };\n};\nconst _c146 = function (a0, a1) {\n  return {\n    click: a0,\n    \"keydown.tab\": a1\n  };\n};\nconst _c147 = function (a0) {\n  return {\n    transitionend: a0\n  };\n};\nconst _c148 = function (a0) {\n  return {\n    \"k-timeselector-lg\": a0\n  };\n};\nfunction _class67_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"div\", 31)(2, \"div\", 32)(3, \"button\", 33);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 34);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 35, 36)(9, \"div\", 37)(10, \"kendo-calendar\", 38, 39);\n    i0.ɵɵlistener(\"valueChange\", function _class67_ng_template_15_Template_kendo_calendar_valueChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.calendarValue = $event);\n    })(\"valueChange\", function _class67_ng_template_15_Template_kendo_calendar_valueChange_10_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.handleCalendarValueChange());\n    });\n    i0.ɵɵelement(12, \"kendo-calendar-messages\", 40);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 41)(14, \"kendo-timeselector\", 42);\n    i0.ɵɵlistener(\"tabOutLastPart\", function _class67_ng_template_15_Template_kendo_timeselector_tabOutLastPart_14_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.onTabOutLastPart());\n    })(\"tabOutFirstPart\", function _class67_ng_template_15_Template_kendo_timeselector_tabOutFirstPart_14_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.onTabOutFirstPart());\n    })(\"tabOutNow\", function _class67_ng_template_15_Template_kendo_timeselector_tabOutNow_14_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.onTabOutNow());\n    });\n    i0.ɵɵelement(15, \"kendo-timeselector-messages\", 43);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(16, _class67_ng_template_15_div_16_Template, 4, 17, \"div\", 44);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r21 = i0.ɵɵreference(8);\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"k-datetime-wrap k-\", ctx_r10.activeTab, \"-tab\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(79, _c143, !ctx_r10.isAdaptive, ctx_r10.isAdaptive))(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(82, _c144, ctx_r10.preventMouseDown, ctx_r10.handleKeyDown))(\"scope\", ctx_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(85, _c142, ctx_r10.handleFocus, ctx_r10.handleBlur))(\"scope\", ctx_r10);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"k-selected\", ctx_r10.activeTab === \"date\");\n    i0.ɵɵproperty(\"ngClass\", ctx_r10.popupButtonsClasses())(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(88, _c145, ctx_r10.changeActiveTab.bind(ctx_r10, \"date\"), ctx_r10.handleTab))(\"scope\", ctx_r10);\n    i0.ɵɵattribute(\"aria-pressed\", ctx_r10.activeTab === \"date\" ? \"true\" : \"false\")(\"title\", ctx_r10.localization.get(\"dateTabLabel\"))(\"aria-label\", ctx_r10.localization.get(\"dateTabLabel\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.localization.get(\"dateTab\"), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"k-selected\", ctx_r10.activeTab === \"time\");\n    i0.ɵɵproperty(\"ngClass\", ctx_r10.popupButtonsClasses())(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(91, _c146, ctx_r10.changeActiveTab.bind(ctx_r10, \"time\"), ctx_r10.handleTab))(\"scope\", ctx_r10);\n    i0.ɵɵattribute(\"aria-pressed\", ctx_r10.activeTab === \"time\" ? \"true\" : \"false\")(\"title\", ctx_r10.localization.get(\"timeTabLabel\"))(\"aria-label\", ctx_r10.localization.get(\"timeTabLabel\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.localization.get(\"timeTab\"), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"transition\", ctx_r10.tabSwitchTransition);\n    i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(94, _c147, ctx_r10.handleTabChangeTransitionEnd.bind(ctx_r10, _r21)));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"focusedDate\", ctx_r10.focusedDate)(\"size\", ctx_r10.isAdaptive ? \"large\" : ctx_r10.size)(\"value\", ctx_r10.calendarValue)(\"type\", ctx_r10.calendarType)(\"min\", ctx_r10.calendarMin)(\"max\", ctx_r10.calendarMax)(\"weekDaysFormat\", ctx_r10.weekDaysFormat)(\"weekNumber\", ctx_r10.weekNumber)(\"navigation\", false)(\"animateNavigation\", ctx_r10.animateCalendarNavigation)(\"showOtherMonthDays\", ctx_r10.showOtherMonthDays)(\"cellTemplate\", ctx_r10.cellTemplate)(\"monthCellTemplate\", ctx_r10.monthCellTemplate)(\"yearCellTemplate\", ctx_r10.yearCellTemplate)(\"decadeCellTemplate\", ctx_r10.decadeCellTemplate)(\"centuryCellTemplate\", ctx_r10.centuryCellTemplate)(\"weekNumberTemplate\", ctx_r10.weekNumberTemplate)(\"headerTitleTemplate\", ctx_r10.headerTitleTemplate)(\"headerTemplate\", ctx_r10.headerTemplate)(\"footerTemplate\", ctx_r10.footerTemplate)(\"footer\", ctx_r10.footer)(\"disabled\", ctx_r10.disableCalendar)(\"disabledDates\", ctx_r10.disabledDates);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"today\", ctx_r10.localization.get(\"today\"))(\"prevButtonTitle\", ctx_r10.localization.get(\"prevButtonTitle\"))(\"nextButtonTitle\", ctx_r10.localization.get(\"nextButtonTitle\"))(\"parentViewButtonTitle\", ctx_r10.localization.get(\"parentViewButtonTitle\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(96, _c148, ctx_r10.isAdaptive))(\"value\", ctx_r10.value)(\"format\", ctx_r10.timeSelectorFormat)(\"min\", ctx_r10.timeSelectorMin)(\"max\", ctx_r10.timeSelectorMax)(\"setButton\", false)(\"cancelButton\", false)(\"steps\", ctx_r10.steps)(\"disabled\", ctx_r10.disableTimeSelector)(\"isAdaptiveEnabled\", ctx_r10.isAdaptiveModeEnabled)(\"isDateTimePicker\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"acceptLabel\", ctx_r10.localization.get(\"acceptLabel\"))(\"accept\", ctx_r10.localization.get(\"accept\"))(\"cancelLabel\", ctx_r10.localization.get(\"cancelLabel\"))(\"cancel\", ctx_r10.localization.get(\"cancel\"))(\"nowLabel\", ctx_r10.localization.get(\"nowLabel\"))(\"now\", ctx_r10.localization.get(\"now\"))(\"hour\", ctx_r10.localization.get(\"hour\"))(\"minute\", ctx_r10.localization.get(\"minute\"))(\"second\", ctx_r10.localization.get(\"second\"))(\"millisecond\", ctx_r10.localization.get(\"millisecond\"))(\"dayperiod\", ctx_r10.localization.get(\"dayperiod\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r10.isAdaptive);\n  }\n}\nconst _c149 = function (a0, a1) {\n  return {\n    mousedown: a0,\n    click: a1\n  };\n};\nconst _c150 = [\"defaultTemplate\"];\nfunction _class74_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"kendo-multiviewcalendar\", 6);\n    i0.ɵɵlistener(\"onClosePopup\", function _class74_ng_template_3_Template_kendo_multiviewcalendar_onClosePopup_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.closePopup($event));\n    })(\"onTabPress\", function _class74_ng_template_3_Template_kendo_multiviewcalendar_onTabPress_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.handleTab($event));\n    })(\"onShiftTabPress\", function _class74_ng_template_3_Template_kendo_multiviewcalendar_onShiftTabPress_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.handleShiftTab($event));\n    })(\"rangeSelectionChange\", function _class74_ng_template_3_Template_kendo_multiviewcalendar_rangeSelectionChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onRangeSelectionChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activeView\", ctx_r2.activeView)(\"bottomView\", ctx_r2.bottomView)(\"animateNavigation\", ctx_r2.animateNavigation)(\"disabled\", ctx_r2.disabled)(\"views\", ctx_r2.views)(\"weekNumber\", ctx_r2.weekNumber)(\"topView\", ctx_r2.topView)(\"disabledDates\", ctx_r2.disabledDates)(\"min\", ctx_r2.min)(\"max\", ctx_r2.max)(\"showCalendarHeader\", ctx_r2.showCalendarHeader)(\"focusedDate\", ctx_r2.focusedDate)(\"allowReverse\", ctx_r2.allowReverse)(\"showViewHeader\", ctx_r2.showViewHeader)(\"showOtherMonthDays\", ctx_r2.showOtherMonthDays)(\"size\", ctx_r2.size)(\"value\", ctx_r2.dateRangeService.selectionRange);\n  }\n}\nfunction _class74_ng_template_7_kendo_resize_sensor_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"kendo-resize-sensor\", 21);\n    i0.ɵɵlistener(\"resize\", function _class74_ng_template_7_kendo_resize_sensor_0_Template_kendo_resize_sensor_resize_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onResize());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction _class74_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtemplate(0, _class74_ng_template_7_kendo_resize_sensor_0_Template, 1, 0, \"kendo-resize-sensor\", 7);\n    i0.ɵɵelementStart(1, \"div\", 8)(2, \"div\", 9)(3, \"div\", 10)(4, \"div\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 13)(9, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function _class74_ng_template_7_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.show = false);\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(10, \"div\", 15)(11, \"div\", 16)(12, \"kendo-multiviewcalendar\", 17);\n    i0.ɵɵlistener(\"rangeSelectionChange\", function _class74_ng_template_7_Template_kendo_multiviewcalendar_rangeSelectionChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onRangeSelectionChange($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"div\", 18)(14, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function _class74_ng_template_7_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.show = false);\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function _class74_ng_template_7_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.handleAccept());\n    });\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.isAdaptiveModeEnabled);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r4.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.subtitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r4.xIcon)(\"tabIndex\", -1);\n    i0.ɵɵattribute(\"title\", ctx_r4.localization.get(\"clearTitle\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"animateNavigation\", ctx_r4.animateNavigation)(\"disabled\", ctx_r4.disabled)(\"views\", ctx_r4.views)(\"weekNumber\", ctx_r4.weekNumber)(\"disabledDates\", ctx_r4.disabledDates)(\"activeView\", ctx_r4.activeView)(\"bottomView\", ctx_r4.bottomView)(\"topView\", ctx_r4.topView)(\"min\", ctx_r4.min)(\"max\", ctx_r4.max)(\"showCalendarHeader\", ctx_r4.showCalendarHeader)(\"focusedDate\", ctx_r4.focusedDate)(\"allowReverse\", ctx_r4.allowReverse)(\"showViewHeader\", ctx_r4.showViewHeader)(\"showOtherMonthDays\", ctx_r4.showOtherMonthDays)(\"focusedDate\", ctx_r4.dateRangeService.focusedDate)(\"value\", ctx_r4.dateRangeService.selectionRange);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"title\", ctx_r4.localization.get(\"cancelLabel\"))(\"aria-label\", ctx_r4.localization.get(\"cancelLabel\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.localization.get(\"cancel\"), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"title\", ctx_r4.localization.get(\"acceptLabel\"))(\"aria-label\", ctx_r4.localization.get(\"acceptLabel\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.localization.get(\"accept\"), \" \");\n  }\n}\nfunction _class75_kendo_daterange_popup_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-daterange-popup\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"size\", ctx_r0.size);\n  }\n}\nconst packageMetadata = {\n  name: '@progress/kendo-angular-dateinputs',\n  productName: 'Kendo UI for Angular',\n  productCode: 'KENDOUIANGULAR',\n  productCodes: ['KENDOUIANGULAR'],\n  publishDate: 1741163684,\n  version: '18.1.1',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/'\n};\n\n/**\n * @hidden\n */\nvar Action = /*#__PURE__*/function (Action) {\n  Action[Action[\"Left\"] = 0] = \"Left\";\n  Action[Action[\"Right\"] = 1] = \"Right\";\n  Action[Action[\"Up\"] = 2] = \"Up\";\n  Action[Action[\"Down\"] = 3] = \"Down\";\n  Action[Action[\"PrevView\"] = 4] = \"PrevView\";\n  Action[Action[\"NextView\"] = 5] = \"NextView\";\n  Action[Action[\"FirstInView\"] = 6] = \"FirstInView\";\n  Action[Action[\"LastInView\"] = 7] = \"LastInView\";\n  Action[Action[\"LowerView\"] = 8] = \"LowerView\";\n  Action[Action[\"UpperView\"] = 9] = \"UpperView\";\n  return Action;\n}(Action || {});\n/**\n * @hidden\n */\nconst EMPTY_SELECTIONRANGE = {\n  start: null,\n  end: null\n};\n\n/**\n * @hidden\n */\nconst MIDNIGHT_DATE = new Date(1980, 0, 1);\n/**\n * @hidden\n */\nconst MIN_DATE = new Date(1900, 0, 1);\n/**\n * @hidden\n */\nconst MAX_DATE = new Date(2099, 11, 31);\n/**\n * @hidden\n */\nconst MIN_TIME = new Date(1980, 0, 1);\n/**\n * @hidden\n */\nconst MAX_TIME = new Date(1980, 0, 1, 23, 59, 59);\n\n/**\n * @hidden\n */\nconst requiresZoneOnBlur = ngControl => ngControl && (!ngControl.touched || ngControl.control && ngControl.control.updateOn === 'blur');\n/**\n * @hidden\n */\nconst preventDefault = args => args.preventDefault();\n/**\n * @hidden\n */\nconst currentFocusTarget = blurArgs => blurArgs.relatedTarget || document.activeElement;\n/**\n * @hidden\n */\nconst isPresent = value => value !== undefined && value !== null;\n/**\n * @hidden\n */\nconst isNullOrDate = value => value === null || value instanceof Date;\n/**\n * @hidden\n */\nconst isTruthy = value => !!value;\n/**\n * @hidden\n *\n * If the provided parameter is an array with at least one item\n * and all items in the array are numbers, returns `true.\n */\nconst isNumberArray = value => Array.isArray(value) && value.length > 0 && value.every(item => typeof item === 'number');\n/**\n * @hidden\n *\n * If the provided parameter is an array with at least one item\n * and all items in the array are dates, returns `true`.\n */\nconst isDateArray = value => Array.isArray(value) && value.length > 0 && value.every(item => item instanceof Date);\n/**\n * @hidden\n */\nconst isArrowWithShiftPressed = args => args.shiftKey && (args.keyCode === Keys.ArrowRight || args.keyCode === Keys.ArrowLeft || args.keyCode === Keys.ArrowDown || args.keyCode === Keys.ArrowUp);\n/**\n * @hidden\n * Enum with key codes.\n */\nvar Keys = /*#__PURE__*/function (Keys) {\n  Keys[Keys[\"ArrowDown\"] = 40] = \"ArrowDown\";\n  Keys[Keys[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n  Keys[Keys[\"ArrowRight\"] = 39] = \"ArrowRight\";\n  Keys[Keys[\"ArrowUp\"] = 38] = \"ArrowUp\";\n  return Keys;\n}(Keys || {});\n/**\n * @hidden\n */\nconst selectors = {\n  infiniteCalendarTable: '.k-content .k-calendar-table',\n  multiViewCalendarTable: '.k-calendar-table'\n};\n/**\n * @hidden\n */\nconst attributeNames = {\n  ariaActiveDescendant: 'aria-activedescendant',\n  ariaControls: 'aria-controls',\n  ariaExpanded: 'aria-expanded',\n  ariaHasPopup: 'aria-haspopup',\n  valueNow: 'aria-valuenow',\n  valuetext: 'aria-valuetext',\n  ariaInvalid: 'aria-invalid'\n};\nconst isSet = value => value !== null && value !== undefined;\nconst setter = method => (date, value) => {\n  const clone = cloneDate(date);\n  clone[method](value);\n  return clone;\n};\n/**\n * @hidden\n */\nconst setTime = (origin, candidate) => {\n  const date = cloneDate(origin);\n  date.setHours(candidate.getHours(), candidate.getMinutes(), candidate.getSeconds(), candidate.getMilliseconds());\n  return date;\n};\n/**\n * @hidden\n */\nconst getTimeInMilliseconds = candidate => {\n  const hoursInMilliseconds = candidate.getHours() * MS_PER_HOUR;\n  const minutesInMilliseconds = candidate.getMinutes() * MS_PER_MINUTE;\n  const secondsInMilliseconds = candidate.getSeconds() * 1000;\n  return hoursInMilliseconds + minutesInMilliseconds + secondsInMilliseconds + candidate.getMilliseconds();\n};\nconst normalizeTimes = (candidate, min, max) => {\n  return {\n    candidateValue: setTime(MIDNIGHT_DATE, candidate),\n    maxValue: addDays(setTime(MIDNIGHT_DATE, max), getTimeInMilliseconds(min) < getTimeInMilliseconds(max) ? 0 : 1),\n    minValue: setTime(MIDNIGHT_DATE, min)\n  };\n};\n/**\n * @hidden\n */\nconst setYears = setter('setFullYear');\n/**\n * @hidden\n */\nconst setHours$1 = setter('setHours');\n/**\n * @hidden\n */\nconst setMinutes = setter('setMinutes');\n/**\n * @hidden\n */\nconst setSeconds = setter('setSeconds');\n/**\n * @hidden\n */\nconst setMilliseconds = setter('setMilliseconds');\n/**\n * @hidden\n */\nconst range = (start, end, step = 1) => {\n  const result = [];\n  for (let i = start; i < end; i = i + step) {\n    result.push(i);\n  }\n  return result;\n};\n/**\n * @hidden\n */\nconst isInRange = (candidate, min, max) => !candidate || !(min && min > candidate || max && max < candidate);\n/**\n * @hidden\n */\nconst isInTimeRange = (candidate, min, max) => {\n  if (!candidate || !min || !max) {\n    return true;\n  }\n  const {\n    candidateValue,\n    minValue,\n    maxValue\n  } = normalizeTimes(candidate, min, max);\n  return minValue <= candidateValue && candidateValue <= maxValue;\n};\n/**\n * @hidden\n */\nconst isValidRange = (min, max) => !isSet(min) || !isSet(max) || min <= max;\n/**\n * @hidden\n */\nconst dateInRange = (candidate, min, max) => {\n  if (!candidate) {\n    return candidate;\n  }\n  if (min && candidate < min) {\n    return cloneDate(min);\n  }\n  if (max && candidate > max) {\n    return cloneDate(max);\n  }\n  return candidate;\n};\n/**\n * @hidden\n */\nconst timeInRange = (candidate, min, max) => {\n  if (!candidate || !min || !max) {\n    return candidate;\n  }\n  const {\n    candidateValue,\n    minValue,\n    maxValue\n  } = normalizeTimes(candidate, min, max);\n  if (candidateValue < minValue) {\n    return setTime(candidate, min);\n  }\n  if (candidateValue > maxValue) {\n    return setTime(candidate, max);\n  }\n  return candidate;\n};\n/**\n * @hidden\n */\nconst getNow = () => new Date();\n/**\n * @hidden\n */\nconst getToday = () => getDate(new Date());\n/**\n * @hidden\n */\nconst noop$2 = _ => {}; // eslint-disable-line no-empty\n/**\n * @hidden\n */\nconst isWindowAvailable = () => {\n  return typeof window !== 'undefined';\n};\n/**\n * @hidden\n */\nconst stringifyClassObject = classes => {\n  const pushToAcc = (acc, cls) => classes[cls] ? acc.concat(cls) : acc;\n  return Object.keys(classes).reduce(pushToAcc, []).join(' ');\n};\n/**\n * @hidden\n */\nconst shiftWeekNames = (names, offset) => names.slice(offset).concat(names.slice(0, offset));\n/**\n * @hidden\n */\nconst approximateStringMatching = (oldTextOrigin, oldFormat, newTextOrigin, caret) => {\n  // Remove the right part of the cursor.\n  //oldFormat = oldFormat.substring(0, caret + oldText.length - newText.length);\n  const oldIndex = caret + oldTextOrigin.length - newTextOrigin.length;\n  const oldTextSeparator = oldTextOrigin[oldIndex];\n  const oldText = oldTextOrigin.substring(0, caret + oldTextOrigin.length - newTextOrigin.length);\n  const newText = newTextOrigin.substring(0, caret);\n  const diff = [];\n  // Handle typing a single character over the same selection.\n  if (oldText === newText && caret > 0) {\n    diff.push([oldFormat[caret - 1], newText[caret - 1]]);\n    return diff;\n  }\n  if (oldText.indexOf(newText) === 0 && (newText.length === 0 || oldFormat[newText.length - 1] !== oldFormat[newText.length])) {\n    // Handle Delete/Backspace.\n    let deletedSymbol = \"\";\n    //XXX:\n    // Whole text is replaced with a same char\n    // Nasty patch required to keep the selection in the first segment\n    if (newText.length === 1) {\n      diff.push([oldFormat[0], newText[0]]);\n    }\n    for (let i = newText.length; i < oldText.length; i++) {\n      if (oldFormat[i] !== deletedSymbol && oldFormat[i] !== \"_\") {\n        deletedSymbol = oldFormat[i];\n        diff.push([deletedSymbol, \"\"]);\n      }\n    }\n    return diff;\n  }\n  // Handle inserting text (the new text is longer than the previous one).\n  // Handle typing over a literal as well.\n  if (newText.indexOf(oldText) === 0 || oldFormat[caret - 1] === \"_\") {\n    let symbol = oldFormat[0];\n    for (let i = Math.max(0, oldText.length - 1); i < oldFormat.length; i++) {\n      if (oldFormat[i] !== \"_\") {\n        symbol = oldFormat[i];\n        break;\n      }\n    }\n    return [[symbol, newText[caret - 1]]];\n  }\n  // Handle entering a space or a separator, for navigation to the next item.\n  if (newText[newText.length - 1] === \" \" || newText[newText.length - 1] === oldTextSeparator && oldFormat[oldIndex] === '_') {\n    return [[oldFormat[caret - 1], \"_\"]];\n  }\n  // Handle typing over a correctly selected part.\n  return [[oldFormat[caret - 1], newText[caret - 1]]];\n};\n/**\n * @hidden\n */\nconst domContainerFactory = type => (children, classes = \"\", styles = {}) => {\n  const container = document.createElement(type);\n  container.className = classes;\n  Object.keys(styles).map(key => container.style[key] = styles[key]);\n  if (typeof children === 'string') {\n    container.innerHTML = children || '';\n  } else {\n    (children || []).forEach(child => child && container.appendChild(child));\n  }\n  return container;\n};\n/**\n * @hidden\n */\nconst hasChange = (changes, field) => changes[field] !== undefined;\n/**\n * @hidden\n */\nconst hasExistingValue = (changes, field) => changes[field] && changes[field].currentValue !== undefined && changes[field].currentValue !== null;\n/**\n * @hidden\n */\nconst last = (list = []) => list && list[list.length - 1];\n/**\n * @hidden\n */\nconst isInSelectionRange = (value, selectionRange) => {\n  const {\n    start,\n    end\n  } = selectionRange || EMPTY_SELECTIONRANGE;\n  if (!start || !end) {\n    return false;\n  }\n  return start < value && value < end;\n};\n/**\n * @hidden\n */\nconst either = (value1, value2) => value1 || value2;\n/**\n * @hidden\n */\nconst clampRange = value => ({\n  start: value,\n  end: value\n});\n/**\n * @hidden\n */\nconst isEqualRange = (initial, updated) => {\n  const {\n    start: initialStart,\n    end: initialEnd\n  } = initial || EMPTY_SELECTIONRANGE;\n  const {\n    start: updatedStart,\n    end: updatedEnd\n  } = updated || EMPTY_SELECTIONRANGE;\n  return isEqual(initialStart, updatedStart) && isEqual(initialEnd, updatedEnd);\n};\n/**\n * @hidden\n */\nconst areDatesEqual = (first, second) => {\n  first = first || [];\n  second = second || [];\n  return first.length === second.length && first.every((date, index) => isEqual(date, second[index]));\n};\n/**\n * @hidden\n */\nconst sortDates = dates => {\n  return dates.filter(date => isPresent(date)).sort((a, b) => a.getTime() - b.getTime());\n};\n/**\n * @hidden\n *\n * Creates a new date based on the date information from the specified date portion\n * and the time information from the time portion.\n * If a parameter is not provided, returns `null`.\n */\nconst mergeDateAndTime = (date, time) => {\n  if (!(date && time)) {\n    return null;\n  }\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds());\n};\n/**\n * @hidden\n */\nconst lastMillisecondOfDate = date => {\n  if (!date) {\n    return null;\n  }\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59, 999);\n};\n/**\n * @hidden\n *\n * Returns an array with dates ranging between and including the specified start and\n * end dates that are evaluated as disabled.\n */\nconst disabledDatesInRange = (start, end, isDateDisabled) => {\n  if (!(start && end && isDateDisabled) || start > end) {\n    return [];\n  }\n  const dates = [];\n  let current = start;\n  while (current <= end) {\n    if (isDateDisabled(current)) {\n      dates.push(current);\n    }\n    current = addDays(current, 1);\n  }\n  return dates;\n};\n/**\n * @hidden\n *\n * Crops the last two digits from the year of the provided date value.\n */\nconst cropTwoDigitYear = date => {\n  if (!isPresent(date) || isNaN(date.getTime())) {\n    return 0;\n  }\n  return Number(date.getFullYear().toString().slice(-2));\n};\n/**\n * @hidden\n *\n * Used when resetting millisecond segment value in the DateInput\n */\nconst msPaddingFromFormat = format => {\n  return Array(format.match(/S+(\\1)/)[0].length).join(\"0\"); // eslint-disable-line no-useless-backreference\n};\n/**\n * @hidden\n */\nconst millisecondDigitsInFormat = format => {\n  const result = format && format.match(/S+(\\1)/); // eslint-disable-line no-useless-backreference\n  return result ? result[0].length : 0;\n};\n/**\n * @hidden\n */\nconst millisecondStepFor = digits => {\n  return Math.pow(10, 3 - digits);\n};\n/**\n * @hidden\n *\n * Checks if a tab keydown would would move the focus outside of the calendar.\n */\nconst isTabExitingCalendar = (calendarType, focusedElement, shiftKey) => {\n  if (!isPresent(focusedElement)) {\n    return false;\n  }\n  return calendarType === 'infinite' ||\n  // infinte calendar is always exited on first tab keydown\n  calendarType === 'classic' && shiftKey && focusedElement.classList.contains('k-calendar-table') ||\n  // exited on main calendar element focused and back-tab\n  !shiftKey && focusedElement.classList.contains('k-calendar-table') // exited on next button focused and regular tab\n  ;\n};\n/**\n * @hidden\n * Returns the size class based on the component and size input.\n */\nconst getSizeClass = (component, size) => {\n  const SIZE_CLASSES = {\n    'small': `k-${component}-sm`,\n    'medium': `k-${component}-md`,\n    'large': `k-${component}-lg`\n  };\n  return SIZE_CLASSES[size];\n};\n/**\n * @hidden\n * Returns the rounded class based on the rounded input.\n */\nconst getRoundedClass = rounded => {\n  const ROUNDED_CLASSES = {\n    'small': 'k-rounded-sm',\n    'medium': 'k-rounded-md',\n    'large': 'k-rounded-lg',\n    'full': 'k-rounded-full'\n  };\n  return ROUNDED_CLASSES[rounded];\n};\n/**\n * @hidden\n * Return the fillMode class based on the component and fillMode input.\n */\nconst getFillModeClass = (component, fillMode) => {\n  const FILLMODE_CLASSES = {\n    'solid': `k-${component}-solid`,\n    'flat': `k-${component}-flat`,\n    'outline': `k-${component}-outline`\n  };\n  return FILLMODE_CLASSES[fillMode];\n};\n/**\n * @hidden\n */\nconst DEFAULT_ROUNDED = 'medium';\n/**\n * @hidden\n */\nconst DEFAULT_SIZE = 'medium';\n/**\n * @hidden\n */\nconst DEFAULT_FILL_MODE = 'solid';\nconst EMPTY_DATA$3 = [[]];\nconst CELLS_LENGTH$3 = 4;\nconst ROWS_LENGTH$3 = 3;\nconst upStep$1 = year => {\n  const decadeOfCentury = Number(year.toString().slice(-2, -1));\n  if (decadeOfCentury < 2) {\n    return -2;\n  }\n  if (decadeOfCentury < 4) {\n    return -6;\n  }\n  return -4;\n};\nconst downStep$1 = year => {\n  const decadeOfCentury = Number(year.toString().slice(-2, -1));\n  if (decadeOfCentury > 7) {\n    return 2;\n  }\n  if (decadeOfCentury > 5) {\n    return 6;\n  }\n  return 4;\n};\nconst ACTIONS$3 = {\n  [Action.Left]: date => addDecades(date, -1),\n  [Action.Up]: date => addDecades(date, upStep$1(date.getFullYear())),\n  [Action.Right]: date => addDecades(date, 1),\n  [Action.Down]: date => addDecades(date, downStep$1(date.getFullYear())),\n  [Action.PrevView]: date => addCenturies(date, -1),\n  [Action.NextView]: date => addCenturies(date, 1),\n  [Action.FirstInView]: date => firstDecadeOfCentury(date),\n  [Action.LastInView]: date => lastDecadeOfCentury(date)\n};\n/**\n * @hidden\n */\nlet CenturyViewService = /*#__PURE__*/(() => {\n  var _class;\n  class CenturyViewService {\n    constructor() {\n      _defineProperty(this, \"dateRange\", (start, end) => {\n        if (!isPresent(start) || !isPresent(end)) {\n          return [];\n        }\n        const result = [];\n        let current = start;\n        while (current <= end) {\n          result.push(current);\n          current = addDecades(current, 1);\n        }\n        return result;\n      });\n    }\n    addToDate(min, skip) {\n      return addCenturies(min, skip);\n    }\n    datesList(start, count) {\n      return range(0, count).map(i => addCenturies(start, i));\n    }\n    data(options) {\n      const {\n        cellUID,\n        focusedDate,\n        isActiveView,\n        max,\n        min,\n        selectedDates,\n        selectionRange = EMPTY_SELECTIONRANGE,\n        viewDate,\n        allowReverse\n      } = options;\n      if (!viewDate) {\n        return EMPTY_DATA$3;\n      }\n      const cells = range(0, CELLS_LENGTH$3);\n      const firstDate = firstDecadeOfCentury(viewDate);\n      const lastDate = lastDecadeOfCentury(viewDate);\n      const lastYearOfCentury = lastYearOfDecade(lastDate).getFullYear() + 1;\n      const today = getToday();\n      return range(0, ROWS_LENGTH$3).map(rowOffset => {\n        const baseDate = addDecades(firstDate, rowOffset * CELLS_LENGTH$3);\n        return cells.map(cellOffset => {\n          const cellDate = this.normalize(addDecades(baseDate, cellOffset), min, max);\n          const nextCentury = cellDate.getFullYear() >= lastYearOfCentury;\n          if (!this.isInRange(cellDate, min, max) || nextCentury) {\n            return null;\n          }\n          let isRangeStart = false;\n          let isRangeEnd = false;\n          if (allowReverse) {\n            if (this.isEqual(cellDate, selectionRange.start) && selectionRange.start <= selectionRange.end || this.isEqual(cellDate, selectionRange.end) && selectionRange.end <= selectionRange.start) {\n              isRangeStart = true;\n            }\n            if (this.isEqual(cellDate, selectionRange.start) && selectionRange.start >= selectionRange.end || this.isEqual(cellDate, selectionRange.end) && selectionRange.end >= selectionRange.start) {\n              isRangeEnd = true;\n            }\n          } else {\n            isRangeStart = this.isEqual(cellDate, selectionRange.start);\n            isRangeEnd = this.isEqual(cellDate, selectionRange.end);\n          }\n          const isInMiddle = !isRangeStart && !isRangeEnd;\n          let isRangeMid;\n          if (allowReverse) {\n            isRangeMid = isInMiddle && (isInSelectionRange(cellDate, selectionRange) || isInSelectionRange(cellDate, {\n              start: selectionRange.end,\n              end: selectionRange.start\n            }));\n          } else {\n            isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n          }\n          return {\n            formattedValue: this.value(cellDate),\n            id: `${cellUID}${cellDate.getTime()}`,\n            isFocused: this.isEqual(cellDate, focusedDate),\n            isSelected: isActiveView && selectedDates.some(date => this.isEqual(cellDate, date)),\n            isWeekend: false,\n            isRangeStart: isRangeStart,\n            isRangeMid: isRangeMid,\n            isRangeEnd: isRangeEnd,\n            isRangeSplitEnd: isRangeMid && this.isEqual(cellDate, lastDate),\n            isRangeSplitStart: isRangeMid && this.isEqual(cellDate, firstDate),\n            isToday: this.isEqual(cellDate, today),\n            title: this.cellTitle(cellDate),\n            value: cellDate,\n            allowReverse: allowReverse\n          };\n        });\n      });\n    }\n    isEqual(candidate, expected) {\n      if (!candidate || !expected) {\n        return false;\n      }\n      return firstYearOfDecade(candidate).getFullYear() === firstYearOfDecade(expected).getFullYear();\n    }\n    isInArray(date, dates) {\n      if (!dates.length) {\n        return false;\n      }\n      const year = date.getFullYear();\n      return dates[0].getFullYear() <= year && year <= dates[dates.length - 1].getFullYear() + 99;\n    }\n    isInRange(candidate, min, max) {\n      const year = firstYearOfDecade(candidate).getFullYear();\n      const aboveMin = !min || firstYearOfDecade(min).getFullYear() <= year;\n      const belowMax = !max || year <= firstYearOfDecade(max).getFullYear();\n      return aboveMin && belowMax;\n    }\n    beginningOfPeriod(date) {\n      if (!date) {\n        return date;\n      }\n      const firstYear = firstYearOfDecade(firstDecadeOfCentury(date));\n      return createDate(firstYear.getFullYear(), 0, 1);\n    }\n    lastDayOfPeriod(date) {\n      const decade = lastDecadeOfCentury(date);\n      const year = lastYearOfDecade(decade);\n      const month = lastMonthOfYear(year);\n      return lastDayOfMonth(month);\n    }\n    isRangeStart(value) {\n      return value.getFullYear() % 1000 === 0;\n    }\n    move(value, action) {\n      const modifier = ACTIONS$3[action];\n      if (!modifier) {\n        return value;\n      }\n      return modifier(value);\n    }\n    cellTitle(value) {\n      return firstYearOfDecade(value).getFullYear().toString();\n    }\n    navigationTitle(value) {\n      return value ? firstDecadeOfCentury(value).getFullYear().toString() : '';\n    }\n    title(value) {\n      if (!value) {\n        return '';\n      }\n      return `${firstDecadeOfCentury(value).getFullYear()} - ${lastDecadeOfCentury(value).getFullYear()}`;\n    }\n    rowLength() {\n      return CELLS_LENGTH$3;\n    }\n    skip(value, min) {\n      return durationInCenturies(min, value);\n    }\n    total(min, max) {\n      return durationInCenturies(min, max) + 1;\n    }\n    value(current) {\n      return current ? firstYearOfDecade(current).getFullYear().toString() : '';\n    }\n    viewDate(date, max, viewsCount = 1) {\n      const viewsInRange = this.total(date, max);\n      if (viewsInRange < viewsCount) {\n        const centuriesToSubtract = viewsCount - viewsInRange;\n        return addCenturies(date, -1 * centuriesToSubtract);\n      }\n      return date;\n    }\n    normalize(cellDate, min, max) {\n      if (cellDate < min && this.isEqual(cellDate, min)) {\n        return cloneDate(min);\n      }\n      if (cellDate > max && this.isEqual(cellDate, max)) {\n        return cloneDate(max);\n      }\n      return cellDate;\n    }\n  }\n  _class = CenturyViewService;\n  _defineProperty(CenturyViewService, \"\\u0275fac\", function _class_Factory(t) {\n    return new (t || _class)();\n  });\n  _defineProperty(CenturyViewService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  }));\n  return CenturyViewService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst EMPTY_DATA$2 = [[]];\nconst CELLS_LENGTH$2 = 4;\nconst ROWS_LENGTH$2 = 3;\nconst upStep = year => {\n  const yearOfDecade = Number(year.toString().slice(-1));\n  if (yearOfDecade < 2) {\n    return -2;\n  }\n  if (yearOfDecade < 4) {\n    return -6;\n  }\n  return -4;\n};\nconst downStep = year => {\n  const yearOfDecade = Number(year.toString().slice(-1));\n  if (yearOfDecade > 7) {\n    return 2;\n  }\n  if (yearOfDecade > 5) {\n    return 6;\n  }\n  return 4;\n};\nconst ACTIONS$2 = {\n  [Action.Left]: date => addYears(date, -1),\n  [Action.Up]: date => addYears(date, upStep(date.getFullYear())),\n  [Action.Right]: date => addYears(date, 1),\n  [Action.Down]: date => addYears(date, downStep(date.getFullYear())),\n  [Action.PrevView]: date => addDecades(date, -1),\n  [Action.NextView]: date => addDecades(date, 1),\n  [Action.FirstInView]: date => firstYearOfDecade(date),\n  [Action.LastInView]: date => lastYearOfDecade(date)\n};\n/**\n * @hidden\n */\nlet DecadeViewService = /*#__PURE__*/(() => {\n  var _class2;\n  class DecadeViewService {\n    constructor() {\n      _defineProperty(this, \"dateRange\", (start, end) => {\n        if (!isPresent(start) || !isPresent(end)) {\n          return [];\n        }\n        const result = [];\n        let current = start;\n        while (current <= end) {\n          result.push(current);\n          current = addYears(current, 1);\n        }\n        return result;\n      });\n    }\n    addToDate(min, skip) {\n      return addDecades(min, skip);\n    }\n    datesList(start, count) {\n      return range(0, count).map(i => addDecades(start, i));\n    }\n    data(options) {\n      const {\n        cellUID,\n        focusedDate,\n        isActiveView,\n        max,\n        min,\n        selectedDates,\n        selectionRange = EMPTY_SELECTIONRANGE,\n        viewDate,\n        allowReverse\n      } = options;\n      if (!viewDate) {\n        return EMPTY_DATA$2;\n      }\n      const cells = range(0, CELLS_LENGTH$2);\n      const firstDate = firstYearOfDecade(viewDate);\n      const lastDate = lastYearOfDecade(viewDate);\n      const today = getToday();\n      return range(0, ROWS_LENGTH$2).map(rowOffset => {\n        const baseDate = addYears(firstDate, rowOffset * CELLS_LENGTH$2);\n        return cells.map(cellOffset => {\n          const cellDate = this.normalize(addYears(baseDate, cellOffset), min, max);\n          const nextDecade = cellDate.getFullYear() > lastDate.getFullYear();\n          if (!this.isInRange(cellDate, min, max) || nextDecade) {\n            return null;\n          }\n          let isRangeStart = false;\n          let isRangeEnd = false;\n          if (allowReverse) {\n            if (this.isEqual(cellDate, selectionRange.start) && selectionRange.start <= selectionRange.end || this.isEqual(cellDate, selectionRange.end) && selectionRange.end <= selectionRange.start) {\n              isRangeStart = true;\n            }\n            if (this.isEqual(cellDate, selectionRange.start) && selectionRange.start >= selectionRange.end || this.isEqual(cellDate, selectionRange.end) && selectionRange.end >= selectionRange.start) {\n              isRangeEnd = true;\n            }\n          } else {\n            isRangeStart = this.isEqual(cellDate, selectionRange.start);\n            isRangeEnd = this.isEqual(cellDate, selectionRange.end);\n          }\n          const isInMiddle = !isRangeStart && !isRangeEnd;\n          let isRangeMid;\n          if (allowReverse) {\n            isRangeMid = isInMiddle && (isInSelectionRange(cellDate, selectionRange) || isInSelectionRange(cellDate, {\n              start: selectionRange.end,\n              end: selectionRange.start\n            }));\n          } else {\n            isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n          }\n          return {\n            formattedValue: this.value(cellDate),\n            id: `${cellUID}${cellDate.getTime()}`,\n            isFocused: this.isEqual(cellDate, focusedDate),\n            isSelected: isActiveView && selectedDates.some(date => this.isEqual(cellDate, date)),\n            isWeekend: false,\n            isRangeStart: isRangeStart,\n            isRangeMid: isRangeMid,\n            isRangeEnd: isRangeEnd,\n            isRangeSplitEnd: isRangeMid && this.isEqual(cellDate, lastDate),\n            isRangeSplitStart: isRangeMid && this.isEqual(cellDate, firstDate),\n            isToday: this.isEqual(cellDate, today),\n            title: this.cellTitle(cellDate),\n            value: cellDate,\n            allowReverse: allowReverse\n          };\n        });\n      });\n    }\n    isEqual(candidate, expected) {\n      if (!candidate || !expected) {\n        return false;\n      }\n      return candidate.getFullYear() === expected.getFullYear();\n    }\n    isInArray(date, dates) {\n      if (!dates.length) {\n        return false;\n      }\n      const year = date.getFullYear();\n      return dates[0].getFullYear() <= year && year <= dates[dates.length - 1].getFullYear() + 9;\n    }\n    isInRange(candidate, min, max) {\n      const year = candidate.getFullYear();\n      const aboveMin = !min || min.getFullYear() <= year;\n      const belowMax = !max || year <= max.getFullYear();\n      return aboveMin && belowMax;\n    }\n    beginningOfPeriod(date) {\n      if (!date) {\n        return date;\n      }\n      const firstYear = firstYearOfDecade(date);\n      return createDate(firstYear.getFullYear(), 0, 1);\n    }\n    lastDayOfPeriod(date) {\n      const year = lastYearOfDecade(date);\n      const month = lastMonthOfYear(year);\n      return lastDayOfMonth(month);\n    }\n    isRangeStart(value) {\n      return value.getFullYear() % 100 === 0;\n    }\n    move(value, action) {\n      const modifier = ACTIONS$2[action];\n      if (!modifier) {\n        return value;\n      }\n      return modifier(value);\n    }\n    cellTitle(value) {\n      return value.getFullYear().toString();\n    }\n    navigationTitle(value) {\n      return value ? firstYearOfDecade(value).getFullYear().toString() : '';\n    }\n    title(value) {\n      if (!value) {\n        return '';\n      }\n      return `${firstYearOfDecade(value).getFullYear()} - ${lastYearOfDecade(value).getFullYear()}`;\n    }\n    rowLength() {\n      return CELLS_LENGTH$2;\n    }\n    skip(value, min) {\n      return durationInDecades(min, value);\n    }\n    total(min, max) {\n      return durationInDecades(min, max) + 1;\n    }\n    value(current) {\n      return current ? current.getFullYear().toString() : '';\n    }\n    viewDate(date, max, viewsCount = 1) {\n      const viewsInRange = this.total(date, max);\n      if (viewsInRange < viewsCount) {\n        const decadesToSubtract = viewsCount - viewsInRange;\n        return addDecades(date, -1 * decadesToSubtract);\n      }\n      return date;\n    }\n    normalize(cellDate, min, max) {\n      if (cellDate < min && this.isEqual(cellDate, min)) {\n        return cloneDate(min);\n      }\n      if (cellDate > max && this.isEqual(cellDate, max)) {\n        return cloneDate(max);\n      }\n      return cellDate;\n    }\n  }\n  _class2 = DecadeViewService;\n  _defineProperty(DecadeViewService, \"\\u0275fac\", function _class2_Factory(t) {\n    return new (t || _class2)();\n  });\n  _defineProperty(DecadeViewService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class2,\n    factory: _class2.ɵfac,\n    providedIn: 'root'\n  }));\n  return DecadeViewService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst EMPTY_DATA$1 = [[]];\nconst CELLS_LENGTH$1 = 7;\nconst ROWS_LENGTH$1 = 6;\nconst ACTIONS$1 = {\n  [Action.Left]: date => addDays(date, -1),\n  [Action.Up]: date => addWeeks(date, -1),\n  [Action.Right]: date => addDays(date, 1),\n  [Action.Down]: date => addWeeks(date, 1),\n  [Action.PrevView]: date => addMonths(date, -1),\n  [Action.NextView]: date => addMonths(date, 1),\n  [Action.FirstInView]: date => firstDayOfMonth(date),\n  [Action.LastInView]: date => lastDayOfMonth(date)\n};\n/**\n * @hidden\n */\nlet MonthViewService = /*#__PURE__*/(() => {\n  var _class3;\n  class MonthViewService {\n    constructor(_intlService) {\n      _defineProperty(this, \"_intlService\", void 0);\n      _defineProperty(this, \"dateRange\", (start, end) => {\n        if (!isPresent(start) || !isPresent(end)) {\n          return [];\n        }\n        const result = [];\n        let current = start;\n        while (current <= end) {\n          result.push(current);\n          current = addDays(current, 1);\n        }\n        return result;\n      });\n      this._intlService = _intlService;\n    }\n    addToDate(min, skip) {\n      return addMonths(min, skip);\n    }\n    datesList(start, count) {\n      return range(0, count).map(i => addMonths(start, i));\n    }\n    data(options) {\n      const {\n        cellUID,\n        focusedDate,\n        isActiveView,\n        max,\n        min,\n        selectedDates,\n        selectionRange = EMPTY_SELECTIONRANGE,\n        viewDate,\n        isDateDisabled = () => false,\n        allowReverse\n      } = options;\n      if (!viewDate) {\n        return EMPTY_DATA$1;\n      }\n      const firstMonthDate = firstDayOfMonth(viewDate);\n      const firstMonthDay = getDate(firstMonthDate);\n      const lastMonthDate = lastDayOfMonth(viewDate);\n      const lastMonthDay = getDate(lastMonthDate);\n      const backward = -1;\n      const date = dayOfWeek(firstMonthDate, this._intlService.firstDay(), backward);\n      const cells = range(0, CELLS_LENGTH$1);\n      const today = getToday();\n      return range(0, ROWS_LENGTH$1).map(rowOffset => {\n        const baseDate = addDays(date, rowOffset * CELLS_LENGTH$1);\n        return cells.map(cellOffset => {\n          const cellDate = this.normalize(addDays(baseDate, cellOffset), min, max);\n          const cellDay = getDate(cellDate);\n          const otherMonth = cellDay < firstMonthDay || cellDay > lastMonthDay;\n          const outOfRange = cellDate < min || cellDate > max;\n          if (outOfRange) {\n            return null;\n          }\n          let isRangeStart = false;\n          let isRangeEnd = false;\n          if (allowReverse) {\n            if (this.isEqual(cellDate, selectionRange.start) && selectionRange.start <= selectionRange.end || this.isEqual(cellDate, selectionRange.end) && selectionRange.end <= selectionRange.start) {\n              isRangeStart = true;\n            }\n            if (this.isEqual(cellDate, selectionRange.start) && selectionRange.start >= selectionRange.end || this.isEqual(cellDate, selectionRange.end) && selectionRange.end >= selectionRange.start) {\n              isRangeEnd = true;\n            }\n          } else {\n            isRangeStart = this.isEqual(cellDate, selectionRange.start);\n            isRangeEnd = this.isEqual(cellDate, selectionRange.end);\n          }\n          const isInMiddle = !isRangeStart && !isRangeEnd;\n          let isRangeMid;\n          if (allowReverse) {\n            isRangeMid = isInMiddle && (isInSelectionRange(cellDate, selectionRange) || isInSelectionRange(cellDate, {\n              start: selectionRange.end,\n              end: selectionRange.start\n            }));\n          } else {\n            isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n          }\n          return {\n            formattedValue: this.value(cellDate),\n            id: `${cellUID}${otherMonth ? cellDate.getTime() + '1' : cellDate.getTime()}`,\n            isFocused: this.isEqual(cellDate, focusedDate),\n            isSelected: isActiveView && selectedDates.some(date => this.isEqual(cellDate, date)),\n            isWeekend: this.isWeekend(cellDate),\n            isRangeStart: isRangeStart,\n            isRangeMid: isRangeMid,\n            isRangeEnd: isRangeEnd,\n            isRangeSplitStart: isRangeMid && this.isEqual(cellDate, firstMonthDate),\n            isRangeSplitEnd: isRangeMid && this.isEqual(cellDate, lastMonthDate),\n            isToday: this.isEqual(cellDate, today),\n            title: this.cellTitle(cellDate),\n            value: cellDate,\n            isDisabled: isDateDisabled(cellDate),\n            isOtherMonth: otherMonth,\n            allowReverse: allowReverse\n          };\n        });\n      });\n    }\n    isEqual(candidate, expected) {\n      if (!candidate || !expected) {\n        return false;\n      }\n      return getDate(candidate).getTime() === getDate(expected).getTime();\n    }\n    isInArray(date, dates) {\n      if (dates.length === 0) {\n        return false;\n      }\n      const lowerBound = this.beginningOfPeriod(dates[0]);\n      const upperBound = this.beginningOfPeriod(addMonths(dates[dates.length - 1], 1));\n      return lowerBound <= date && date < upperBound;\n    }\n    isInRange(candidate, min, max) {\n      const value = getDate(candidate);\n      const aboveMin = !min || getDate(min) <= value;\n      const belowMax = !max || value <= getDate(max);\n      return aboveMin && belowMax;\n    }\n    beginningOfPeriod(date) {\n      if (!date) {\n        return date;\n      }\n      return createDate(date.getFullYear(), date.getMonth(), 1);\n    }\n    lastDayOfPeriod(date) {\n      return lastDayOfMonth(date);\n    }\n    isRangeStart(value) {\n      return !value.getMonth();\n    }\n    move(value, action) {\n      const modifier = ACTIONS$1[action];\n      if (!modifier) {\n        return value;\n      }\n      return modifier(value);\n    }\n    cellTitle(value) {\n      return this._intlService.formatDate(value, 'D');\n    }\n    navigationTitle(value) {\n      if (!value) {\n        return '';\n      }\n      return this.isRangeStart(value) ? value.getFullYear().toString() : this.abbrMonthNames()[value.getMonth()];\n    }\n    title(current) {\n      return `${this.wideMonthNames()[current.getMonth()]} ${current.getFullYear()}`;\n    }\n    rowLength(options = {}) {\n      return CELLS_LENGTH$1 + (options.prependCell ? 1 : 0);\n    }\n    skip(value, min) {\n      return durationInMonths(min, value);\n    }\n    total(min, max) {\n      return durationInMonths(min, max) + 1;\n    }\n    value(current) {\n      return current ? current.getDate().toString() : \"\";\n    }\n    viewDate(date, max, viewsCount = 1) {\n      const viewsInRange = this.total(date, max);\n      if (viewsInRange < viewsCount) {\n        const monthsToSubtract = viewsCount - viewsInRange;\n        return addMonths(date, -1 * monthsToSubtract);\n      }\n      return date;\n    }\n    isWeekend(date) {\n      const {\n        start,\n        end\n      } = this._intlService.weekendRange();\n      const day = date.getDay();\n      if (end < start) {\n        return day <= end || start <= day;\n      }\n      return start <= day && day <= end;\n    }\n    abbrMonthNames() {\n      return this._intlService.dateFormatNames({\n        nameType: 'abbreviated',\n        type: 'months'\n      });\n    }\n    normalize(cellDate, min, max) {\n      if (cellDate < min && this.isEqual(cellDate, min)) {\n        return cloneDate(min);\n      }\n      if (cellDate > max && this.isEqual(cellDate, max)) {\n        return cloneDate(max);\n      }\n      return cellDate;\n    }\n    wideMonthNames() {\n      return this._intlService.dateFormatNames({\n        nameType: 'wide',\n        type: 'months'\n      });\n    }\n  }\n  _class3 = MonthViewService;\n  _defineProperty(MonthViewService, \"\\u0275fac\", function _class3_Factory(t) {\n    return new (t || _class3)(i0.ɵɵinject(i1.IntlService));\n  });\n  _defineProperty(MonthViewService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class3,\n    factory: _class3.ɵfac,\n    providedIn: 'root'\n  }));\n  return MonthViewService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst EMPTY_DATA = [[]];\nconst CELLS_LENGTH = 4;\nconst ROWS_LENGTH = 3;\nconst ACTIONS = {\n  [Action.Left]: date => addMonths(date, -1),\n  [Action.Up]: date => addMonths(date, -4),\n  [Action.Right]: date => addMonths(date, 1),\n  [Action.Down]: date => addMonths(date, 4),\n  [Action.PrevView]: date => addYears(date, -1),\n  [Action.NextView]: date => addYears(date, 1),\n  [Action.FirstInView]: date => firstMonthOfYear(date),\n  [Action.LastInView]: date => lastMonthOfYear(date)\n};\n/**\n * @hidden\n */\nlet YearViewService = /*#__PURE__*/(() => {\n  var _class4;\n  class YearViewService {\n    constructor(_intlService) {\n      _defineProperty(this, \"_intlService\", void 0);\n      _defineProperty(this, \"dateRange\", (start, end) => {\n        if (!isPresent(start) || !isPresent(end)) {\n          return [];\n        }\n        const result = [];\n        let current = start;\n        while (current <= end) {\n          result.push(current);\n          current = addMonths(current, 1);\n        }\n        return result;\n      });\n      this._intlService = _intlService;\n    }\n    addToDate(min, skip) {\n      return addYears(min, skip);\n    }\n    datesList(start, count) {\n      return range(0, count).map(i => addYears(start, i));\n    }\n    data(options) {\n      const {\n        cellUID,\n        focusedDate,\n        isActiveView,\n        max,\n        min,\n        selectedDates,\n        selectionRange = EMPTY_SELECTIONRANGE,\n        viewDate,\n        allowReverse\n      } = options;\n      if (!viewDate) {\n        return EMPTY_DATA;\n      }\n      const months = this.abbrMonthNames();\n      const firstDate = firstMonthOfYear(viewDate);\n      const lastDate = lastMonthOfYear(viewDate);\n      const currentYear = firstDate.getFullYear();\n      const cells = range(0, CELLS_LENGTH);\n      const today = getToday();\n      return range(0, ROWS_LENGTH).map(rowOffset => {\n        const baseDate = addMonths(firstDate, rowOffset * CELLS_LENGTH);\n        return cells.map(cellOffset => {\n          const cellDate = this.normalize(addMonths(baseDate, cellOffset), min, max);\n          const changedYear = currentYear < cellDate.getFullYear();\n          if (!this.isInRange(cellDate, min, max) || changedYear) {\n            return null;\n          }\n          let isRangeStart = false;\n          let isRangeEnd = false;\n          if (allowReverse) {\n            if (this.isEqual(cellDate, selectionRange.start) && selectionRange.start <= selectionRange.end || this.isEqual(cellDate, selectionRange.end) && selectionRange.end <= selectionRange.start) {\n              isRangeStart = true;\n            }\n            if (this.isEqual(cellDate, selectionRange.start) && selectionRange.start >= selectionRange.end || this.isEqual(cellDate, selectionRange.end) && selectionRange.end >= selectionRange.start) {\n              isRangeEnd = true;\n            }\n          } else {\n            isRangeStart = this.isEqual(cellDate, selectionRange.start);\n            isRangeEnd = this.isEqual(cellDate, selectionRange.end);\n          }\n          const isInMiddle = !isRangeStart && !isRangeEnd;\n          let isRangeMid;\n          if (allowReverse) {\n            isRangeMid = isInMiddle && (isInSelectionRange(cellDate, selectionRange) || isInSelectionRange(cellDate, {\n              start: selectionRange.end,\n              end: selectionRange.start\n            }));\n          } else {\n            isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n          }\n          return {\n            formattedValue: months[cellDate.getMonth()],\n            id: `${cellUID}${cellDate.getTime()}`,\n            isFocused: this.isEqual(cellDate, focusedDate),\n            isSelected: isActiveView && selectedDates.some(date => this.isEqual(cellDate, date)),\n            isWeekend: false,\n            isRangeStart: isRangeStart,\n            isRangeMid: isRangeMid,\n            isRangeEnd: isRangeEnd,\n            isRangeSplitEnd: isRangeMid && this.isEqual(cellDate, lastDate),\n            isRangeSplitStart: isRangeMid && this.isEqual(cellDate, firstDate),\n            isToday: this.isEqual(cellDate, today),\n            title: this.cellTitle(cellDate),\n            value: cellDate,\n            allowReverse: allowReverse\n          };\n        });\n      });\n    }\n    isEqual(candidate, expected) {\n      if (!candidate || !expected) {\n        return false;\n      }\n      return candidate.getFullYear() === expected.getFullYear() && candidate.getMonth() === expected.getMonth();\n    }\n    isInArray(date, dates) {\n      if (!dates.length) {\n        return false;\n      }\n      const year = date.getFullYear();\n      return dates[0].getFullYear() <= year && year <= dates[dates.length - 1].getFullYear();\n    }\n    isInRange(candidate, min, max) {\n      const candidateValue = createDate(candidate.getFullYear(), candidate.getMonth(), 1);\n      const aboveMin = !min || createDate(min.getFullYear(), min.getMonth(), 1) <= candidateValue;\n      const belowMax = !max || candidateValue <= createDate(max.getFullYear(), max.getMonth(), 1);\n      return aboveMin && belowMax;\n    }\n    beginningOfPeriod(date) {\n      if (!date) {\n        return date;\n      }\n      return createDate(date.getFullYear(), 0, 1);\n    }\n    lastDayOfPeriod(date) {\n      const month = lastMonthOfYear(date);\n      return lastDayOfMonth(month);\n    }\n    isRangeStart(value) {\n      return value.getFullYear() % 10 === 0;\n    }\n    move(value, action) {\n      const modifier = ACTIONS[action];\n      if (!modifier) {\n        return value;\n      }\n      return modifier(value);\n    }\n    cellTitle(value) {\n      return `${value.getFullYear()} ${this.value(value)}`;\n    }\n    navigationTitle(value) {\n      return this.title(value);\n    }\n    title(current) {\n      return current ? current.getFullYear().toString() : '';\n    }\n    rowLength() {\n      return CELLS_LENGTH;\n    }\n    skip(value, min) {\n      return durationInYears(min, value);\n    }\n    total(min, max) {\n      return durationInYears(min, max) + 1;\n    }\n    value(current) {\n      return current ? this.abbrMonthNames()[current.getMonth()] : '';\n    }\n    viewDate(date, max, viewsCount = 1) {\n      const viewsInRange = this.total(date, max);\n      if (viewsInRange < viewsCount) {\n        const yearsToSubtract = viewsCount - viewsInRange;\n        return addYears(date, -1 * yearsToSubtract);\n      }\n      return date;\n    }\n    abbrMonthNames() {\n      return this._intlService.dateFormatNames({\n        nameType: 'abbreviated',\n        type: 'months'\n      });\n    }\n    normalize(cellDate, min, max) {\n      if (cellDate < min && this.isEqual(cellDate, min)) {\n        return cloneDate(min);\n      }\n      if (cellDate > max && this.isEqual(cellDate, max)) {\n        return cloneDate(max);\n      }\n      return cellDate;\n    }\n  }\n  _class4 = YearViewService;\n  _defineProperty(YearViewService, \"\\u0275fac\", function _class4_Factory(t) {\n    return new (t || _class4)(i0.ɵɵinject(i1.IntlService));\n  });\n  _defineProperty(YearViewService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class4,\n    factory: _class4.ɵfac,\n    providedIn: 'root'\n  }));\n  return YearViewService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n *\n * The Enum which defines all possible Calendar view types.\n */\nvar CalendarViewEnum = /*#__PURE__*/function (CalendarViewEnum) {\n  CalendarViewEnum[CalendarViewEnum[\"month\"] = 0] = \"month\";\n  CalendarViewEnum[CalendarViewEnum[\"year\"] = 1] = \"year\";\n  CalendarViewEnum[CalendarViewEnum[\"decade\"] = 2] = \"decade\";\n  CalendarViewEnum[CalendarViewEnum[\"century\"] = 3] = \"century\";\n  return CalendarViewEnum;\n}(CalendarViewEnum || {});\nconst services$1 = {\n  [CalendarViewEnum.month]: MonthViewService,\n  [CalendarViewEnum.year]: YearViewService,\n  [CalendarViewEnum.decade]: DecadeViewService,\n  [CalendarViewEnum.century]: CenturyViewService\n};\nconst viewOffset = (view, offset) => {\n  const candidate = CalendarViewEnum[CalendarViewEnum[view + offset]];\n  return candidate !== undefined ? candidate : view;\n};\nlet nextCalendarId = 0;\n/**\n * @hidden\n */\nlet BusViewService = /*#__PURE__*/(() => {\n  var _class5;\n  class BusViewService {\n    constructor(injector) {\n      _defineProperty(this, \"injector\", void 0);\n      _defineProperty(this, \"viewChanged\", new EventEmitter());\n      _defineProperty(this, \"bottom\", CalendarViewEnum.month);\n      _defineProperty(this, \"top\", CalendarViewEnum.century);\n      _defineProperty(this, \"calendarId\", void 0);\n      this.injector = injector;\n      this.calendarId = nextCalendarId++;\n    }\n    configure(bottom, top) {\n      this.bottom = bottom;\n      this.top = top;\n    }\n    service(view) {\n      const serviceType = services$1[view];\n      return serviceType ? this.injector.get(serviceType) : null;\n    }\n    moveDown(view) {\n      this.move(view, -1);\n    }\n    moveUp(view) {\n      this.move(view, 1);\n    }\n    moveToBottom(activeView) {\n      if (activeView === this.bottom) {\n        return;\n      }\n      this.viewChanged.emit({\n        view: this.bottom\n      });\n    }\n    canMoveDown(view) {\n      return this.bottom < view;\n    }\n    canMoveUp(view) {\n      return view < this.top;\n    }\n    clamp(view) {\n      if (view < this.bottom) {\n        return this.bottom;\n      }\n      if (view > this.top) {\n        return this.top;\n      }\n      return view;\n    }\n    move(view, offset) {\n      const candidate = this.clamp(viewOffset(view, offset));\n      if (candidate === view) {\n        return;\n      }\n      this.viewChanged.emit({\n        view: candidate\n      });\n    }\n  }\n  _class5 = BusViewService;\n  _defineProperty(BusViewService, \"\\u0275fac\", function _class5_Factory(t) {\n    return new (t || _class5)(i0.ɵɵinject(i0.Injector));\n  });\n  _defineProperty(BusViewService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class5,\n    factory: _class5.ɵfac\n  }));\n  return BusViewService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nclass KForOfContext {\n  constructor($implicit, kForOf, index, count) {\n    _defineProperty(this, \"$implicit\", void 0);\n    _defineProperty(this, \"kForOf\", void 0);\n    _defineProperty(this, \"index\", void 0);\n    _defineProperty(this, \"count\", void 0);\n    this.$implicit = $implicit;\n    this.kForOf = kForOf;\n    this.index = index;\n    this.count = count;\n  }\n  get first() {\n    return this.index === 0;\n  }\n  get last() {\n    return this.index === this.count - 1;\n  }\n  get even() {\n    return this.index % 2 === 0;\n  }\n  get odd() {\n    return !this.even;\n  }\n}\n/**\n * @hidden\n */\n// eslint-disable-next-line\nlet KForOf = /*#__PURE__*/(() => {\n  var _class7;\n  class KForOf {\n    constructor(_viewContainer, _template, _differs) {\n      _defineProperty(this, \"_viewContainer\", void 0);\n      _defineProperty(this, \"_template\", void 0);\n      _defineProperty(this, \"_differs\", void 0);\n      _defineProperty(this, \"kForOf\", void 0);\n      _defineProperty(this, \"kForTrackBy\", void 0);\n      _defineProperty(this, \"_differ\", null);\n      this._viewContainer = _viewContainer;\n      this._template = _template;\n      this._differs = _differs;\n    }\n    set kForTemplate(value) {\n      if (value) {\n        this._template = value;\n      }\n    }\n    ngOnChanges(changes) {\n      if ('kForOf' in changes) {\n        const value = changes['kForOf'].currentValue;\n        if (this._differ || !value) {\n          return;\n        }\n        try {\n          this._differ = this._differs.find(value).create(this.kForTrackBy);\n        } catch (e) {\n          throw new Error(`Cannot find a differ supporting object '${value}' of type '${getTypeNameForDebugging(value)}'.`);\n        }\n      }\n    }\n    ngDoCheck() {\n      if (this._differ) {\n        const changes = this._differ.diff(this.kForOf);\n        if (changes) {\n          this._applyChanges(changes);\n        }\n      }\n    }\n    _applyChanges(changes) {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n      const viewContainerLength = this._viewContainer.length;\n      const dataLength = this.kForOf.length;\n      const tuples = {};\n      changes.forEachOperation((record, _, currentIndex) => {\n        if (currentIndex !== null) {\n          tuples[currentIndex] = record.item;\n        }\n      });\n      for (let i = viewContainerLength; i < dataLength; i++) {\n        this._viewContainer.createEmbeddedView(this._template, new KForOfContext(null, this.kForOf, -1, -1), i);\n      }\n      for (let i = this._viewContainer.length; i > dataLength; i--) {\n        this._viewContainer.remove(i - 1);\n      }\n      for (let i = 0; i < this._viewContainer.length; i++) {\n        const view = this._viewContainer.get(i);\n        view.context.index = i;\n        view.context.count = length;\n        view.context.$implicit = tuples[i] || null;\n      }\n    }\n  }\n  _class7 = KForOf;\n  _defineProperty(KForOf, \"\\u0275fac\", function _class7_Factory(t) {\n    return new (t || _class7)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers));\n  });\n  _defineProperty(KForOf, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class7,\n    selectors: [[\"\", \"kFor\", \"\", \"kForOf\", \"\"]],\n    inputs: {\n      kForOf: \"kForOf\",\n      kForTrackBy: \"kForTrackBy\",\n      kForTemplate: \"kForTemplate\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  }));\n  return KForOf;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @hidden\n */\nfunction getTypeNameForDebugging(type) {\n  return type.name || typeof type;\n}\nconst noop$1 = () => false;\nconst DISABLED_DATES_DOC_LINK = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/calendar/disabled-dates/';\n/**\n * @hidden\n */\nlet DisabledDatesService = /*#__PURE__*/(() => {\n  var _class8;\n  class DisabledDatesService {\n    constructor() {\n      /**\n       * Emits every time the `isDateDisabled` method changes.\n       */\n      _defineProperty(this, \"changes\", new Subject());\n      /**\n       * Based on the user-defined `disabledDates` input evaluates if the date is disabled.\n       * If not set, returns `false`.\n       */\n      _defineProperty(this, \"isDateDisabled\", noop$1);\n    }\n    /**\n     * Configures the `isDateDisabled` function.\n     *\n     * * If a function is provided, uses it as-is and passes each date to it for evaluation.\n     * The time part is set to `midnight`.\n     * * If a `Date[]` is provided, creates a function that checks the targeted date against\n     * the listed dates and, if the targeted date is listed, marks it as disabled.\n     * * If a `Day[]` is provided, creates a function that evaluates the provided days of the\n     * week as disabled.\n     */\n    initialize(disabledDates) {\n      if (typeof disabledDates === 'function') {\n        this.isDateDisabled = date => disabledDates(getDate(date));\n      } else if (isNumberArray(disabledDates)) {\n        const disabledWeekDays = new Set(disabledDates);\n        this.isDateDisabled = date => disabledWeekDays.has(date.getDay());\n      } else if (isDateArray(disabledDates)) {\n        const normalizedDisabledDates = new Set(disabledDates.map(date => getDate(date).getTime()));\n        this.isDateDisabled = date => normalizedDisabledDates.has(getDate(date).getTime());\n      } else {\n        this.isDateDisabled = noop$1;\n        this.notifyInvalidInput(disabledDates);\n      }\n      this.notifyServiceChange();\n    }\n    notifyInvalidInput(disabledDates) {\n      if (isPresent(disabledDates) && isDevMode()) {\n        throw new Error(`The 'disabledDates' value should be a function, a Day array or a Date array. Check ${DISABLED_DATES_DOC_LINK} for more information.`);\n      }\n    }\n    notifyServiceChange() {\n      this.changes.next();\n    }\n  }\n  _class8 = DisabledDatesService;\n  _defineProperty(DisabledDatesService, \"\\u0275fac\", function _class8_Factory(t) {\n    return new (t || _class8)();\n  });\n  _defineProperty(DisabledDatesService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class8,\n    factory: _class8.ɵfac\n  }));\n  return DisabledDatesService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nconst closestInScope = (node, predicate, scope) => {\n  while (node && node !== scope && !predicate(node)) {\n    node = node.parentNode;\n  }\n  if (node !== scope) {\n    return node;\n  }\n};\n/**\n * @hidden\n */\nconst closest = (node, predicate) => {\n  while (node && !predicate(node)) {\n    node = node.parentNode;\n  }\n  return node;\n};\n\n/**\n * @hidden\n */\nlet ViewComponent = /*#__PURE__*/(() => {\n  var _class9;\n  class ViewComponent {\n    get weekNumber() {\n      return this.showWeekNumbers && this.activeView === CalendarViewEnum.month;\n    }\n    set weekNumber(showWeekNumbers) {\n      this.showWeekNumbers = showWeekNumbers;\n    }\n    get ariaHidden() {\n      return this.headerTitle === this.title ? null : true;\n    }\n    constructor(bus, intl, cdr, element, zone, renderer, disabledDatesService) {\n      _defineProperty(this, \"bus\", void 0);\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"zone\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"disabledDatesService\", void 0);\n      _defineProperty(this, \"allowReverse\", void 0);\n      _defineProperty(this, \"showOtherMonthDays\", void 0);\n      _defineProperty(this, \"direction\", 'vertical');\n      _defineProperty(this, \"isActive\", true);\n      _defineProperty(this, \"activeView\", void 0);\n      _defineProperty(this, \"cellUID\", void 0);\n      _defineProperty(this, \"focusedDate\", void 0);\n      _defineProperty(this, \"viewDate\", void 0);\n      _defineProperty(this, \"activeRangeEnd\", void 0);\n      _defineProperty(this, \"selectionRange\", void 0);\n      _defineProperty(this, \"min\", void 0);\n      _defineProperty(this, \"max\", void 0);\n      _defineProperty(this, \"selectedDates\", []);\n      _defineProperty(this, \"viewIndex\", void 0);\n      _defineProperty(this, \"templateRef\", void 0);\n      _defineProperty(this, \"weekNumberTemplateRef\", void 0);\n      _defineProperty(this, \"headerTitle\", void 0);\n      _defineProperty(this, \"cellClick\", new EventEmitter());\n      _defineProperty(this, \"weekNumberCellClick\", new EventEmitter());\n      _defineProperty(this, \"cellEnter\", new EventEmitter());\n      _defineProperty(this, \"cellLeave\", new EventEmitter());\n      _defineProperty(this, \"focusedCellId\", new EventEmitter());\n      _defineProperty(this, \"colSpan\", 0);\n      _defineProperty(this, \"data\", void 0);\n      _defineProperty(this, \"service\", void 0);\n      _defineProperty(this, \"title\", void 0);\n      _defineProperty(this, \"subscriptions\", new Subscription());\n      _defineProperty(this, \"showWeekNumbers\", void 0);\n      _defineProperty(this, \"domEvents\", []);\n      _defineProperty(this, \"currentCellIndex\", void 0);\n      this.bus = bus;\n      this.intl = intl;\n      this.cdr = cdr;\n      this.element = element;\n      this.zone = zone;\n      this.renderer = renderer;\n      this.disabledDatesService = disabledDatesService;\n      this.subscriptions.add(this.intl.changes.subscribe(this.intlChange.bind(this)));\n      this.subscriptions.add(this.disabledDatesService.changes.subscribe(this.disabledDatesChange.bind(this)));\n    }\n    ngOnInit() {\n      if (this.element) {\n        this.zone.runOutsideAngular(() => {\n          this.bindEvents();\n        });\n      }\n    }\n    ngOnChanges(changes) {\n      this.service = this.bus.service(this.activeView);\n      if (!this.service) {\n        return;\n      }\n      this.colSpan = this.service.rowLength({\n        prependCell: this.weekNumber\n      });\n      this.title = this.service.title(this.viewDate);\n      this.updateData();\n      if (changes.activeView) {\n        this.currentCellIndex = null;\n      }\n    }\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n      this.domEvents.forEach(unsubscribeCallback => unsubscribeCallback());\n    }\n    isHorizontal() {\n      return this.direction === 'horizontal';\n    }\n    isMonthView() {\n      return this.activeView === CalendarViewEnum.month;\n    }\n    shouldRenderCellContent(cellCtx) {\n      return isPresent(cellCtx) && (!cellCtx.isOtherMonth || cellCtx.isOtherMonth && this.showOtherMonthDays);\n    }\n    firstDate(rowCtx) {\n      const ctx = this.firstWeekDateContext(rowCtx);\n      return ctx ? ctx.value : null;\n    }\n    getWeekNumber(date) {\n      if (!this.weekNumber) {\n        return null;\n      }\n      return weekInYear(date, this.intl.firstDay());\n    }\n    getWeekNumberContext(rowCtx) {\n      const ctx = this.firstWeekDateContext(rowCtx);\n      if (!this.weekNumber || !ctx) {\n        return null;\n      }\n      const weekNumber = weekInYear(ctx.value, this.intl.firstDay()).toString();\n      return {\n        formattedValue: weekNumber,\n        id: null,\n        isFocused: false,\n        isSelected: false,\n        isWeekend: false,\n        title: weekNumber,\n        value: cloneDate(ctx.value)\n      };\n    }\n    getStyles(context) {\n      if (!context.isOtherMonth && this.isActive && context.isFocused) {\n        this.focusedCellId.emit(context.id);\n      }\n      const {\n        isRangeEnd,\n        isRangeStart\n      } = context;\n      const isEndActive = this.activeRangeEnd === 'end' && isRangeEnd;\n      const isStartActive = this.activeRangeEnd === 'start' && isRangeStart;\n      return stringifyClassObject({\n        'k-range-end': !context.isOtherMonth && isRangeEnd,\n        'k-range-mid': !context.isOtherMonth && context.isRangeMid,\n        'k-range-split-end': !context.isOtherMonth && context.isRangeSplitEnd,\n        'k-range-split-start': !context.isOtherMonth && context.isRangeSplitStart,\n        'k-range-start': !context.isOtherMonth && isRangeStart,\n        'k-active': isStartActive || isEndActive,\n        'k-focus': !context.isOtherMonth && this.isActive && context.isFocused,\n        'k-selected': !context.isOtherMonth && (context.isSelected || isRangeStart || isRangeEnd),\n        'k-today': !context.isOtherMonth && context.isToday,\n        'k-weekend': context.isWeekend,\n        'k-disabled': context.isDisabled,\n        'k-other-month': context.isOtherMonth\n      });\n    }\n    tableCellIndex(rowIndex, cellIndex) {\n      return `${rowIndex}:${cellIndex}`;\n    }\n    handleWeekNumberClick(week) {\n      const availableDates = week.filter(day => day).map(item => item.value).filter(date => !this.disabledDatesService.isDateDisabled(date));\n      this.weekNumberCellClick.emit(availableDates);\n    }\n    getMonthLabel(date) {\n      return this.activeView === 1 ? this.intl.formatDate(date, 'MMMM') : null;\n    }\n    firstWeekDateContext(rowCtx) {\n      if (!this.weekNumber) {\n        return null;\n      }\n      let idx = 0;\n      let ctx = this.shouldRenderCellContent(rowCtx[idx]) ? rowCtx[idx] : null;\n      while (!ctx && idx < rowCtx.length) {\n        const cellCtx = rowCtx[++idx];\n        ctx = this.shouldRenderCellContent(cellCtx) ? cellCtx : null;\n      }\n      return ctx;\n    }\n    updateData() {\n      const time = last(this.selectedDates) || getToday();\n      const viewDate = setTime(this.viewDate, time);\n      this.data = this.service.data({\n        cellUID: this.cellUID,\n        focusedDate: this.focusedDate,\n        isActiveView: !this.bus.canMoveDown(this.activeView),\n        max: this.max,\n        min: this.min,\n        selectedDates: this.selectedDates,\n        selectionRange: this.selectionRange,\n        viewDate: viewDate,\n        isDateDisabled: this.disabledDatesService.isDateDisabled,\n        direction: this.direction,\n        allowReverse: this.allowReverse\n      });\n    }\n    intlChange() {\n      this.updateData();\n      this.cdr.markForCheck();\n    }\n    disabledDatesChange() {\n      this.updateData();\n      this.cdr.markForCheck();\n    }\n    bindEvents() {\n      const element = this.element.nativeElement;\n      this.domEvents.push(this.renderer.listen(element, 'mouseover', this.cellMouseoverHandler.bind(this)), this.renderer.listen(element, 'mouseleave', this.mouseLeaveHandler.bind(this)), this.renderer.listen(element, 'click', this.clickHandler.bind(this)));\n    }\n    clickHandler(args) {\n      const cell = this.closestCell(args);\n      if (!cell) {\n        return;\n      }\n      const index = cell.getAttribute('data-cell-index');\n      const cellContext = this.cellByIndex(index);\n      if (!cellContext.isDisabled) {\n        const {\n          ctrlKey,\n          metaKey,\n          shiftKey\n        } = args;\n        this.cellClick.emit({\n          date: cellContext.value,\n          modifiers: {\n            ctrlKey,\n            metaKey,\n            shiftKey\n          }\n        });\n      }\n    }\n    mouseLeaveHandler() {\n      if (this.currentCellIndex) {\n        this.emitCellLeave();\n      }\n    }\n    cellMouseoverHandler(args) {\n      const cell = this.closestCell(args);\n      if (cell) {\n        const index = cell.getAttribute('data-cell-index');\n        if (this.currentCellIndex && this.currentCellIndex !== index) {\n          this.emitCellLeave();\n        }\n        const value = this.cellByIndex(index).value;\n        this.cellEnter.emit(value);\n        this.currentCellIndex = index;\n      } else if (this.currentCellIndex) {\n        this.emitCellLeave();\n      }\n    }\n    closestCell(eventArgs) {\n      return closestInScope(eventArgs.target, node => node.hasAttribute('data-cell-index'), this.element.nativeElement);\n    }\n    emitCellLeave() {\n      const item = this.cellByIndex(this.currentCellIndex);\n      if (item) {\n        this.cellLeave.emit(item.value);\n      }\n      this.currentCellIndex = null;\n    }\n    cellByIndex(index) {\n      const [rowIndex, cellIndex] = index.split(':');\n      return this.data[rowIndex][cellIndex];\n    }\n  }\n  _class9 = ViewComponent;\n  _defineProperty(ViewComponent, \"\\u0275fac\", function _class9_Factory(t) {\n    return new (t || _class9)(i0.ɵɵdirectiveInject(BusViewService), i0.ɵɵdirectiveInject(i1.IntlService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(DisabledDatesService));\n  });\n  _defineProperty(ViewComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class9,\n    selectors: [[\"\", \"kendoCalendarView\", \"\"]],\n    inputs: {\n      allowReverse: \"allowReverse\",\n      showOtherMonthDays: \"showOtherMonthDays\",\n      direction: \"direction\",\n      isActive: \"isActive\",\n      activeView: \"activeView\",\n      cellUID: \"cellUID\",\n      focusedDate: \"focusedDate\",\n      viewDate: \"viewDate\",\n      activeRangeEnd: \"activeRangeEnd\",\n      selectionRange: \"selectionRange\",\n      min: \"min\",\n      max: \"max\",\n      selectedDates: \"selectedDates\",\n      weekNumber: \"weekNumber\",\n      viewIndex: \"viewIndex\",\n      templateRef: \"templateRef\",\n      weekNumberTemplateRef: \"weekNumberTemplateRef\",\n      headerTitle: \"headerTitle\"\n    },\n    outputs: {\n      cellClick: \"cellClick\",\n      weekNumberCellClick: \"weekNumberCellClick\",\n      cellEnter: \"cellEnter\",\n      cellLeave: \"cellLeave\",\n      focusedCellId: \"focusedCellId\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    attrs: _c0,\n    decls: 4,\n    vars: 2,\n    consts: [[\"emptyCell\", \"\"], [\"class\", \"k-calendar-tr\", \"role\", \"row\", 4, \"ngIf\"], [\"class\", \"k-calendar-tr\", \"role\", \"row\", 4, \"kFor\", \"kForOf\"], [\"role\", \"gridcell\", 1, \"k-empty\", \"k-calendar-td\"], [\"role\", \"row\", 1, \"k-calendar-tr\"], [\"scope\", \"col\", 1, \"k-calendar-caption\", 3, \"colSpan\"], [3, \"ngIf\"], [4, \"kFor\", \"kForOf\"], [\"class\", \"k-alt k-calendar-td\", \"role\", \"gridcell\", 3, \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"role\", \"gridcell\", 1, \"k-alt\", \"k-calendar-td\", 3, \"click\"], [3, \"ngIf\", \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"k-calendar-td\", \"role\", \"gridcell\", 3, \"ngClass\", \"title\", 4, \"ngIf\", \"ngIfElse\"], [\"role\", \"gridcell\", 1, \"k-calendar-td\", 3, \"ngClass\", \"title\"], [1, \"k-link\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function _class9_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, _class9_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, _class9_tr_2_Template, 3, 3, \"tr\", 1);\n        i0.ɵɵtemplate(3, _class9_tr_3_Template, 3, 2, \"tr\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHorizontal());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"kForOf\", ctx.data);\n      }\n    },\n    dependencies: [NgIf, KForOf, NgTemplateOutlet, NgClass],\n    encapsulation: 2\n  }));\n  return ViewComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/* eslint-disable @angular-eslint/component-selector */\nconst DEFAULT_VIEWS_LENGTH = 2;\n/**\n * @hidden\n */\nlet HorizontalViewListComponent = /*#__PURE__*/(() => {\n  var _class10;\n  class HorizontalViewListComponent {\n    handleMultiViewCalendarFocus() {\n      this.focusCalendar.emit();\n    }\n    handleMultiViewCalendarBlur(event) {\n      this.blurCalendar.emit(event);\n    }\n    /**\n     * Needed for the MultiViewCalendar used in the Scheduler Year view\n     */\n\n    get weekNumber() {\n      return this.showWeekNumbers && this.isMonthView();\n    }\n    set weekNumber(showWeekNumbers) {\n      this.showWeekNumbers = showWeekNumbers;\n    }\n    get horizontalHostClass() {\n      return this.orientation === 'horizontal';\n    }\n    get verticalHostClass() {\n      return this.orientation === 'vertical';\n    }\n    get getComponentMonthClass() {\n      return this.activeView === CalendarViewEnum.month;\n    }\n    get getComponentYearClass() {\n      return this.activeView === CalendarViewEnum.year;\n    }\n    get getComponentDecadeClass() {\n      return this.activeView === CalendarViewEnum.decade;\n    }\n    get getComponentCenturyClass() {\n      return this.activeView === CalendarViewEnum.century;\n    }\n    get role() {\n      return this.views >= 2 ? 'grid' : null;\n    }\n    get tabindex() {\n      return this.views >= 2 ? '0' : null;\n    }\n    get getActiveDescendant() {\n      return this.views === 1 ? this.activeDescendant : null;\n    }\n    get getTabIndex() {\n      return this.disabled || this.views >= 2 ? null : this.tabIndex;\n    }\n    constructor(bus, intl, cdr, element, renderer) {\n      _defineProperty(this, \"bus\", void 0);\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"showOtherMonthDays\", true);\n      _defineProperty(this, \"cellTemplateRef\", void 0);\n      _defineProperty(this, \"weekNumberTemplateRef\", void 0);\n      _defineProperty(this, \"allowReverse\", void 0);\n      _defineProperty(this, \"activeRangeEnd\", void 0);\n      _defineProperty(this, \"activeView\", CalendarViewEnum.month);\n      _defineProperty(this, \"cellUID\", void 0);\n      _defineProperty(this, \"focusedDate\", void 0);\n      _defineProperty(this, \"isActive\", true);\n      _defineProperty(this, \"min\", new Date(MIN_DATE));\n      _defineProperty(this, \"max\", new Date(MAX_DATE));\n      _defineProperty(this, \"selectionRange\", void 0);\n      _defineProperty(this, \"selectedDates\", []);\n      _defineProperty(this, \"views\", DEFAULT_VIEWS_LENGTH);\n      _defineProperty(this, \"showViewHeader\", false);\n      _defineProperty(this, \"animateNavigation\", false);\n      _defineProperty(this, \"orientation\", 'horizontal');\n      _defineProperty(this, \"activeDescendant\", void 0);\n      _defineProperty(this, \"tabIndex\", 0);\n      _defineProperty(this, \"disabled\", false);\n      _defineProperty(this, \"id\", void 0);\n      _defineProperty(this, \"weekDaysFormat\", 'short');\n      _defineProperty(this, \"cellClick\", new EventEmitter());\n      _defineProperty(this, \"weekNumberCellClick\", new EventEmitter());\n      _defineProperty(this, \"cellEnter\", new EventEmitter());\n      _defineProperty(this, \"cellLeave\", new EventEmitter());\n      _defineProperty(this, \"activeDateChange\", new EventEmitter());\n      _defineProperty(this, \"focusCalendar\", new EventEmitter());\n      _defineProperty(this, \"blurCalendar\", new EventEmitter());\n      _defineProperty(this, \"focusedCellChange\", new EventEmitter());\n      _defineProperty(this, \"getComponentClass\", true);\n      _defineProperty(this, \"service\", void 0);\n      _defineProperty(this, \"weekNames\", []);\n      _defineProperty(this, \"wideWeekNames\", []);\n      _defineProperty(this, \"activeDate\", void 0);\n      _defineProperty(this, \"dates\", []);\n      _defineProperty(this, \"skip\", void 0);\n      _defineProperty(this, \"total\", void 0);\n      _defineProperty(this, \"nextAnimationDate\", void 0);\n      _defineProperty(this, \"prevAnimationDate\", void 0);\n      _defineProperty(this, \"showWeekNumbers\", void 0);\n      _defineProperty(this, \"intlSubscription\", void 0);\n      _defineProperty(this, \"animation\", void 0);\n      this.bus = bus;\n      this.intl = intl;\n      this.cdr = cdr;\n      this.element = element;\n      this.renderer = renderer;\n      this.intlSubscription = this.intl.changes.subscribe(this.intlChange.bind(this));\n    }\n    ngOnChanges(changes) {\n      this.initService();\n      if (this.weekNames.length === 0 || changes.weekNumber) {\n        this.weekNames = this.getWeekNames(this.weekDaysFormat);\n        this.wideWeekNames = this.getWeekNames('wide');\n      }\n      if (changes.weekDaysFormat && this.weekNames.length !== 0 && !changes.weekNumber) {\n        this.weekNames = this.getWeekNames(this.weekDaysFormat);\n      }\n      if (!this.service) {\n        return;\n      }\n      this.views = this.views || DEFAULT_VIEWS_LENGTH;\n      const focusedDate = this.focusedDate;\n      const viewDate = this.clampDate(this.service.viewDate(focusedDate, this.max, this.views));\n      this.skip = this.service.skip(viewDate, this.min);\n      this.total = this.service.total(this.min, this.max);\n      const activeViewChanged = hasChange(changes, 'activeView');\n      const viewsHasChanged = this.views > 0 && hasChange(changes, 'views');\n      if (activeViewChanged || !this.isInDates(focusedDate) || viewsHasChanged || !this.activeDate) {\n        this.dates = this.service.datesList(viewDate, this.getTake(this.skip));\n        this.activeDate = cloneDate(this.dates[0]);\n        this.activeDateChange.emit(this.activeDate);\n      }\n      this.setAriaActivedescendant();\n      //set tabindex for MultiViewCalendar\n      if (this.views >= 2) {\n        this.renderer.setAttribute(this.element.nativeElement, 'tabindex', this.tabIndex.toString());\n      }\n    }\n    ngOnDestroy() {\n      this.intlSubscription.unsubscribe();\n    }\n    initService() {\n      this.service = this.bus.service(this.activeView);\n    }\n    isMonthView() {\n      return this.activeView === CalendarViewEnum.month;\n    }\n    getCaptionTitle(date) {\n      return this.service.title(date);\n    }\n    handleClassicCalendarFocus() {\n      this.focusCalendar.emit();\n    }\n    handleClassicCalendarBlur(event) {\n      this.blurCalendar.emit(event);\n    }\n    animateView(action) {\n      const container = this.element.nativeElement;\n      const table = container.querySelector('table');\n      // the whole width excluding padding/margin\n      const initialContainerWidth = parseFloat(getComputedStyle(container).width);\n      // table width\n      const tableWidth = parseFloat(getComputedStyle(table).width);\n      this.renderer.setStyle(container, 'width', `${initialContainerWidth}px`);\n      this.renderer.setStyle(container, 'overflow', 'visible');\n      // initialize an additional view for the animation\n      if (action === Action.NextView) {\n        // animating Action.NextView requires adding an additional view before the rendered views\n        this.nextAnimationDate = cloneDate(this.dates[0]);\n      } else {\n        // animating Action.PrevView requires adding an additional view after the rendered views\n        this.prevAnimationDate = cloneDate(this.dates[this.dates.length - 1]);\n      }\n      // run cdr to render the additional view\n      this.cdr.detectChanges();\n      container.querySelectorAll('table').forEach(table => {\n        this.renderer.setStyle(table, 'width', `${tableWidth}px`);\n      });\n      // we always slide by the width of 1 table\n      // cross-browser compatibility is ensured by measuring the client rectangle and substracting the gap\n      const tabRect = table.getBoundingClientRect();\n      const containerGap = parseFloat(getComputedStyle(container).columnGap);\n      const start = action === Action.NextView ? 'translateX(0)' : `translateX(-${tabRect.width + containerGap}px)`;\n      const end = action === Action.NextView ? `translateX(-${tabRect.width + containerGap}px)` : 'translateX(0)';\n      if (!this.animation) {\n        this.animation = container.animate([{\n          transform: start\n        }, {\n          transform: end\n        }], {\n          duration: 500,\n          easing: 'ease-out'\n        });\n        this.animation.oncancel = this.animation.onfinish = () => {\n          // clear all inline styles\n          this.renderer.removeStyle(container, 'width');\n          this.renderer.removeStyle(container, 'overflow');\n          container.querySelectorAll('table').forEach(table => {\n            this.renderer.removeStyle(table, 'width');\n          });\n          // clear the animation and the animation view\n          this.animation = null;\n          this.nextAnimationDate = null;\n          this.prevAnimationDate = null;\n          // run cdr to remove additional animation view from the markup\n          this.cdr.detectChanges();\n        };\n      } else {\n        // if animation is already running, cancel it and show the end navigation result on multiple prev/next button clicks\n        this.animation.cancel();\n      }\n    }\n    navigate(action) {\n      if (this.animateNavigation && isDocumentAvailable() && isPresent(this.element.nativeElement.animate)) {\n        this.animateView(action);\n      }\n      const candidate = this.move(action);\n      const list = this.service.datesList(candidate, this.getTake(this.skip));\n      if (this.isListInRange(list)) {\n        this.dates = list;\n      }\n      this.activeDate = cloneDate(this.dates[0]);\n      this.focusedDate = cloneDate(candidate);\n      this.cdr.markForCheck();\n      this.activeDateChange.emit(this.activeDate);\n      return cloneDate(candidate);\n    }\n    canNavigate(action) {\n      if (!this.service) {\n        return false;\n      }\n      return this.isListInRange(this.service.datesList(this.move(action), this.getTake(this.skip)));\n    }\n    getWeekNames(type) {\n      const weekNames = shiftWeekNames(this.intl.dateFormatNames({\n        nameType: type,\n        type: 'days'\n      }), this.intl.firstDay());\n      return this.weekNumber ? [''].concat(weekNames) : weekNames;\n    }\n    intlChange() {\n      this.weekNames = this.getWeekNames(this.weekDaysFormat);\n      this.wideWeekNames = this.getWeekNames('wide');\n      this.cdr.markForCheck();\n    }\n    clampDate(value) {\n      return dateInRange(value, this.min, this.max);\n    }\n    move(action) {\n      return this.service.move(this.dates[0] || this.focusedDate, action);\n    }\n    isListInRange(list) {\n      const lowerBound = this.service.beginningOfPeriod(this.min);\n      const upperBound = this.service.beginningOfPeriod(this.service.addToDate(this.max, 1));\n      return lowerBound <= list[0] && list[list.length - 1] < upperBound;\n    }\n    isInDates(value) {\n      return this.service.isInArray(value, this.dates);\n    }\n    getTake(skip) {\n      return Math.min(this.total - skip, this.views);\n    }\n    setAriaActivedescendant() {\n      if (this.views >= 2) {\n        this.renderer.setAttribute(this.element.nativeElement, attributeNames.ariaActiveDescendant, this.activeDescendant);\n      }\n    }\n  }\n  _class10 = HorizontalViewListComponent;\n  _defineProperty(HorizontalViewListComponent, \"\\u0275fac\", function _class10_Factory(t) {\n    return new (t || _class10)(i0.ɵɵdirectiveInject(BusViewService), i0.ɵɵdirectiveInject(i1.IntlService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  });\n  _defineProperty(HorizontalViewListComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class10,\n    selectors: [[\"kendo-calendar-horizontal\"]],\n    hostVars: 20,\n    hostBindings: function _class10_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function _class10_focus_HostBindingHandler() {\n          return ctx.handleMultiViewCalendarFocus();\n        })(\"blur\", function _class10_blur_HostBindingHandler($event) {\n          return ctx.handleMultiViewCalendarBlur($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.tabindex);\n        i0.ɵɵclassProp(\"k-calendar-view\", ctx.getComponentClass)(\"k-align-items-start\", ctx.getComponentClass)(\"k-justify-content-center\", ctx.getComponentClass)(\"k-hstack\", ctx.horizontalHostClass)(\"k-vstack\", ctx.verticalHostClass)(\"k-calendar-monthview\", ctx.getComponentMonthClass)(\"k-calendar-yearview\", ctx.getComponentYearClass)(\"k-calendar-decadeview\", ctx.getComponentDecadeClass)(\"k-calendar-centuryview\", ctx.getComponentCenturyClass);\n      }\n    },\n    inputs: {\n      showOtherMonthDays: \"showOtherMonthDays\",\n      cellTemplateRef: \"cellTemplateRef\",\n      weekNumberTemplateRef: \"weekNumberTemplateRef\",\n      allowReverse: \"allowReverse\",\n      activeRangeEnd: \"activeRangeEnd\",\n      activeView: \"activeView\",\n      cellUID: \"cellUID\",\n      focusedDate: \"focusedDate\",\n      isActive: \"isActive\",\n      min: \"min\",\n      max: \"max\",\n      selectionRange: \"selectionRange\",\n      selectedDates: \"selectedDates\",\n      views: \"views\",\n      showViewHeader: \"showViewHeader\",\n      animateNavigation: \"animateNavigation\",\n      orientation: \"orientation\",\n      activeDescendant: \"activeDescendant\",\n      tabIndex: \"tabIndex\",\n      disabled: \"disabled\",\n      id: \"id\",\n      weekDaysFormat: \"weekDaysFormat\",\n      weekNumber: \"weekNumber\"\n    },\n    outputs: {\n      cellClick: \"cellClick\",\n      weekNumberCellClick: \"weekNumberCellClick\",\n      cellEnter: \"cellEnter\",\n      cellLeave: \"cellLeave\",\n      activeDateChange: \"activeDateChange\",\n      focusCalendar: \"focusCalendar\",\n      blurCalendar: \"blurCalendar\",\n      focusedCellChange: \"focusedCellChange\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 5,\n    vars: 3,\n    consts: [[\"tableTemplate\", \"\"], [4, \"ngIf\"], [4, \"kFor\", \"kForOf\"], [1, \"k-calendar-table\", 3, \"ngClass\", \"focus\", \"blur\"], [\"class\", \"k-calendar-caption\", 4, \"ngIf\"], [\"class\", \"k-calendar-thead\", \"role\", \"rowgroup\", 4, \"ngIf\"], [\"kendoCalendarView\", \"\", \"role\", \"rowgroup\", \"direction\", \"horizontal\", 1, \"k-calendar-tbody\", 3, \"allowReverse\", \"showOtherMonthDays\", \"activeView\", \"isActive\", \"min\", \"max\", \"cellUID\", \"focusedDate\", \"selectedDates\", \"selectionRange\", \"activeRangeEnd\", \"weekNumber\", \"templateRef\", \"weekNumberTemplateRef\", \"viewDate\", \"cellClick\", \"weekNumberCellClick\", \"cellEnter\", \"cellLeave\", \"focusedCellId\"], [1, \"k-calendar-caption\"], [\"role\", \"rowgroup\", 1, \"k-calendar-thead\"], [\"role\", \"row\", 1, \"k-calendar-tr\"], [\"class\", \"k-calendar-th\", \"scope\", \"col\", \"role\", \"columnheader\", 4, \"ngFor\", \"ngForOf\"], [\"scope\", \"col\", \"role\", \"columnheader\", 1, \"k-calendar-th\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function _class10_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, _class10_ng_template_0_Template, 4, 22, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, _class10_2_Template, 1, 4, null, 1);\n        i0.ɵɵtemplate(3, _class10_3_Template, 1, 4, null, 2);\n        i0.ɵɵtemplate(4, _class10_4_Template, 1, 4, null, 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.nextAnimationDate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"kForOf\", ctx.dates);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.prevAnimationDate);\n      }\n    },\n    dependencies: [NgClass, NgIf, NgFor, ViewComponent, NgTemplateOutlet, KForOf],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return HorizontalViewListComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet HeaderComponent = /*#__PURE__*/(() => {\n  var _class11;\n  class HeaderComponent {\n    get verticalHostClass() {\n      return this.orientation === 'vertical';\n    }\n    constructor(bus, cdr, localization, intl, disabledDatesService) {\n      _defineProperty(this, \"bus\", void 0);\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"localization\", void 0);\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"disabledDatesService\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"chevronRightIcon\", chevronRightIcon);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"chevronLeftIcon\", chevronLeftIcon);\n      _defineProperty(this, \"navigate\", true);\n      _defineProperty(this, \"todayAvailable\", true);\n      _defineProperty(this, \"activeViewValue\", void 0);\n      _defineProperty(this, \"todayMessage\", void 0);\n      _defineProperty(this, \"title\", void 0);\n      _defineProperty(this, \"prevButtonTitle\", void 0);\n      _defineProperty(this, \"nextButtonTitle\", void 0);\n      _defineProperty(this, \"parentViewButtonTitle\", void 0);\n      _defineProperty(this, \"activeView\", void 0);\n      _defineProperty(this, \"currentDate\", void 0);\n      _defineProperty(this, \"min\", new Date(MIN_DATE));\n      _defineProperty(this, \"max\", new Date(MAX_DATE));\n      _defineProperty(this, \"rangeLength\", 1);\n      _defineProperty(this, \"titleTemplateRef\", void 0);\n      _defineProperty(this, \"headerTemplateRef\", void 0);\n      _defineProperty(this, \"isPrevDisabled\", true);\n      _defineProperty(this, \"isNextDisabled\", true);\n      _defineProperty(this, \"showNavigationButtons\", false);\n      _defineProperty(this, \"orientation\", 'horizontal');\n      _defineProperty(this, \"id\", void 0);\n      _defineProperty(this, \"size\", void 0);\n      _defineProperty(this, \"todayButtonClick\", new EventEmitter());\n      _defineProperty(this, \"prevButtonClick\", new EventEmitter());\n      _defineProperty(this, \"nextButtonClick\", new EventEmitter());\n      _defineProperty(this, \"getComponentClass\", true);\n      _defineProperty(this, \"subscriptions\", new Subscription());\n      this.bus = bus;\n      this.cdr = cdr;\n      this.localization = localization;\n      this.intl = intl;\n      this.disabledDatesService = disabledDatesService;\n    }\n    ngOnInit() {\n      this.subscriptions.add(this.intl.changes.subscribe(this.intlChange.bind(this)));\n      this.subscriptions.add(this.localization.changes.subscribe(this.l10nChange.bind(this)));\n      this.subscriptions.add(this.disabledDatesService.changes.subscribe(this.setTodayAvailability.bind(this)));\n    }\n    ngOnChanges() {\n      const service = this.bus.service(this.activeView);\n      if (!service) {\n        return;\n      }\n      this.activeViewValue = CalendarViewEnum[this.activeView];\n      this.todayMessage = this.localization.get('today');\n      this.parentViewButtonTitle = this.localization.get('parentViewButtonTitle');\n      this.setTodayAvailability();\n      this.navigate = this.bus.canMoveUp(this.activeView);\n      this.title = this.getTitle();\n    }\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n    handleTodayClick() {\n      if (!this.todayAvailable) {\n        return;\n      }\n      this.bus.moveToBottom(this.activeView);\n      this.todayButtonClick.emit(dateInRange(getToday(), this.min, this.max));\n    }\n    handleNavigation() {\n      if (!this.navigate) {\n        return;\n      }\n      this.bus.moveUp(this.activeView);\n    }\n    isDisabled() {\n      return this.navigate ? null : '';\n    }\n    intlChange() {\n      if (this.currentDate && this.bus.service(this.activeView)) {\n        this.title = this.getTitle();\n        this.cdr.markForCheck();\n      }\n    }\n    l10nChange() {\n      this.prevButtonTitle = this.localization.get('prevButtonTitle');\n      this.nextButtonTitle = this.localization.get('nextButtonTitle');\n      this.parentViewButtonTitle = this.localization.get('parentViewButtonTitle');\n      this.todayMessage = this.localization.get('today');\n      this.cdr.markForCheck();\n    }\n    getTitle() {\n      if (!this.currentDate) {\n        return '';\n      }\n      const service = this.bus.service(this.activeView);\n      const take = this.rangeLength - 1;\n      const title = service.title(this.currentDate);\n      const nextDate = service.addToDate(this.currentDate, take);\n      if (take < 1 || !service.isInRange(nextDate, this.min, this.max)) {\n        return title;\n      }\n      return `${title} - ${service.title(nextDate)}`;\n    }\n    setTodayAvailability() {\n      const today = getToday();\n      const isTodayInRange = isInRange(today, getDate(this.min), getDate(this.max));\n      const isDisabled = this.disabledDatesService.isDateDisabled(today);\n      this.todayAvailable = isTodayInRange && !isDisabled;\n      this.cdr.markForCheck();\n    }\n  }\n  _class11 = HeaderComponent;\n  _defineProperty(HeaderComponent, \"\\u0275fac\", function _class11_Factory(t) {\n    return new (t || _class11)(i0.ɵɵdirectiveInject(BusViewService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.LocalizationService), i0.ɵɵdirectiveInject(i1.IntlService), i0.ɵɵdirectiveInject(DisabledDatesService));\n  });\n  _defineProperty(HeaderComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class11,\n    selectors: [[\"kendo-calendar-header\"]],\n    hostVars: 4,\n    hostBindings: function _class11_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-calendar-header\", ctx.getComponentClass)(\"k-vstack\", ctx.verticalHostClass);\n      }\n    },\n    inputs: {\n      activeView: \"activeView\",\n      currentDate: \"currentDate\",\n      min: \"min\",\n      max: \"max\",\n      rangeLength: \"rangeLength\",\n      titleTemplateRef: \"titleTemplateRef\",\n      headerTemplateRef: \"headerTemplateRef\",\n      isPrevDisabled: \"isPrevDisabled\",\n      isNextDisabled: \"isNextDisabled\",\n      showNavigationButtons: \"showNavigationButtons\",\n      orientation: \"orientation\",\n      id: \"id\",\n      size: \"size\"\n    },\n    outputs: {\n      todayButtonClick: \"todayButtonClick\",\n      prevButtonClick: \"prevButtonClick\",\n      nextButtonClick: \"nextButtonClick\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"defaultRendering\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"kendoButton\", \"\", \"role\", \"button\", \"type\", \"button\", \"fillMode\", \"flat\", \"themeColor\", \"primary\", \"tabindex\", \"-1\", 1, \"k-calendar-title\", 3, \"id\", \"size\", \"disabled\", \"kendoEventsOutsideAngular\", \"title\", \"scope\"], [3, \"ngIf\"], [3, \"ngIf\", \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"k-spacer\"], [1, \"k-calendar-nav\"], [\"kendoButton\", \"\", \"fillMode\", \"flat\", \"icon\", \"chevron-left\", \"tabindex\", \"-1\", \"type\", \"button\", \"class\", \"k-calendar-nav-prev\", 3, \"size\", \"svgIcon\", \"disabled\", \"title\", \"click\", 4, \"ngIf\"], [\"kendoButton\", \"\", \"fillMode\", \"flat\", \"role\", \"link\", \"type\", \"button\", 1, \"k-calendar-nav-today\", 3, \"size\", \"disabled\", \"kendoEventsOutsideAngular\", \"scope\"], [\"kendoButton\", \"\", \"fillMode\", \"flat\", \"icon\", \"chevron-right\", \"class\", \"k-calendar-nav-next\", \"tabindex\", \"-1\", \"type\", \"button\", 3, \"size\", \"svgIcon\", \"disabled\", \"title\", \"click\", 4, \"ngIf\"], [\"kendoButton\", \"\", \"fillMode\", \"flat\", \"icon\", \"chevron-left\", \"tabindex\", \"-1\", \"type\", \"button\", 1, \"k-calendar-nav-prev\", 3, \"size\", \"svgIcon\", \"disabled\", \"title\", \"click\"], [\"kendoButton\", \"\", \"fillMode\", \"flat\", \"icon\", \"chevron-right\", \"tabindex\", \"-1\", \"type\", \"button\", 1, \"k-calendar-nav-next\", 3, \"size\", \"svgIcon\", \"disabled\", \"title\", \"click\"]],\n    template: function _class11_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, _class11_0_Template, 1, 6, null, 0);\n        i0.ɵɵtemplate(1, _class11_ng_template_1_Template, 9, 25, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.headerTemplateRef)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [NgIf, NgTemplateOutlet, ButtonComponent, EventsOutsideAngularDirective],\n    encapsulation: 2\n  }));\n  return HeaderComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet SelectionService = /*#__PURE__*/(() => {\n  var _class12;\n  class SelectionService {\n    constructor(bus) {\n      _defineProperty(this, \"bus\", void 0);\n      _defineProperty(this, \"lastClicked\", void 0);\n      this.bus = bus;\n    }\n    performSelection(args) {\n      /* eslint prefer-const: [\"error\", {\"destructuring\": \"all\"}] */\n      let {\n        date,\n        modifiers,\n        selectionMode,\n        activeViewEnum,\n        rangePivot\n      } = args;\n      let selectedDates = args.selectedDates.slice();\n      if (selectionMode === 'multiple') {\n        if (modifiers.ctrlKey || modifiers.metaKey) {\n          if (this.isDateSelected(selectedDates, date)) {\n            selectedDates = selectedDates.filter(item => !isEqual(item, date));\n          } else {\n            selectedDates.push(date);\n          }\n          rangePivot = date;\n        } else if (modifiers.shiftKey) {\n          const [start, end] = sortDates([rangePivot || date, date]);\n          selectedDates = this.bus.service(activeViewEnum).dateRange(start, end);\n          rangePivot = date > selectedDates[0] ? selectedDates[0] : last(selectedDates);\n          if (modifiers.anyArrow) {\n            const [start, end] = sortDates([this.lastClicked || date, date]);\n            selectedDates = this.bus.service(0).dateRange(start, end);\n          }\n        } else {\n          selectedDates = [date];\n          rangePivot = date;\n        }\n      } else {\n        selectedDates = [date];\n        rangePivot = date;\n      }\n      return {\n        selectedDates,\n        rangePivot\n      };\n    }\n    isDateSelected(selectedDates, date) {\n      return selectedDates.some(item => isEqual(item, date));\n    }\n  }\n  _class12 = SelectionService;\n  _defineProperty(SelectionService, \"\\u0275fac\", function _class12_Factory(t) {\n    return new (t || _class12)(i0.ɵɵinject(BusViewService));\n  });\n  _defineProperty(SelectionService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class12,\n    factory: _class12.ɵfac\n  }));\n  return SelectionService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used for rendering the cell content of the Calendar. To define the cell template, nest an `<ng-template>` tag\n * with the `kendoCalendarCellTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current date, use the `let-date` directive. To provide more details\n * about the current cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * > `kendoCalendarCellTemplate` is equivalent to\n * > [`kendoCalendarMonthCellTemplate`]({% slug api_dateinputs_monthcelltemplatedirective %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarCellTemplate let-date>\n *      <span class=\"custom\">{{date.getDate()}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * export class AppComponent { }\n * ```\n */\nlet CellTemplateDirective = /*#__PURE__*/(() => {\n  var _class13;\n  class CellTemplateDirective {\n    constructor(templateRef) {\n      _defineProperty(this, \"templateRef\", void 0);\n      this.templateRef = templateRef;\n    }\n  }\n  _class13 = CellTemplateDirective;\n  _defineProperty(CellTemplateDirective, \"\\u0275fac\", function _class13_Factory(t) {\n    return new (t || _class13)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  });\n  _defineProperty(CellTemplateDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class13,\n    selectors: [[\"\", \"kendoCalendarCellTemplate\", \"\"]],\n    standalone: true\n  }));\n  return CellTemplateDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used for rendering the month cell content of the Calendar. To define the month cell template, nest an `<ng-template>` tag\n * with the `kendoCalendarMonthCellTemplate` directive inside the component tag. The template context is set to the current\n * component. To get a reference to the current date, use the `let-date` directive. To provide more details about the current\n * month cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarMonthCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * export class AppComponent { }\n * ```\n */\nlet MonthCellTemplateDirective = /*#__PURE__*/(() => {\n  var _class14;\n  class MonthCellTemplateDirective {\n    constructor(templateRef) {\n      _defineProperty(this, \"templateRef\", void 0);\n      this.templateRef = templateRef;\n    }\n  }\n  _class14 = MonthCellTemplateDirective;\n  _defineProperty(MonthCellTemplateDirective, \"\\u0275fac\", function _class14_Factory(t) {\n    return new (t || _class14)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  });\n  _defineProperty(MonthCellTemplateDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class14,\n    selectors: [[\"\", \"kendoCalendarMonthCellTemplate\", \"\"]],\n    standalone: true\n  }));\n  return MonthCellTemplateDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used for rendering the year cell content of the Calendar. To define the year cell template, nest an\n * `<ng-template>` tag with the `kendoCalendarYearCellTemplate` directive inside the component tag.\n * The template context is set to the current component. To get a reference to the current date, use\n * the `let-date` directive. To provide more details about the current year cell, get a reference to the\n * current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar [activeView]=\"activeView\">\n *    <ng-template kendoCalendarYearCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * export class AppComponent {\n *  public activeView: CalendarView = 'year';\n * }\n * ```\n */\nlet YearCellTemplateDirective = /*#__PURE__*/(() => {\n  var _class15;\n  class YearCellTemplateDirective {\n    constructor(templateRef) {\n      _defineProperty(this, \"templateRef\", void 0);\n      this.templateRef = templateRef;\n    }\n  }\n  _class15 = YearCellTemplateDirective;\n  _defineProperty(YearCellTemplateDirective, \"\\u0275fac\", function _class15_Factory(t) {\n    return new (t || _class15)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  });\n  _defineProperty(YearCellTemplateDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class15,\n    selectors: [[\"\", \"kendoCalendarYearCellTemplate\", \"\"]],\n    standalone: true\n  }));\n  return YearCellTemplateDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used for rendering the decade cell content of the Calendar. To define the decade cell template, nest an `<ng-template>`\n * tag with the `kendoCalendarDecadeCellTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current date, use the `let-date` directive. To provide more details about\n * the current decade cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar [activeView]=\"activeView\">\n *    <ng-template kendoCalendarDecadeCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * export class AppComponent {\n *  public activeView: CalendarView = 'decade';\n * }\n * ```\n */\nlet DecadeCellTemplateDirective = /*#__PURE__*/(() => {\n  var _class16;\n  class DecadeCellTemplateDirective {\n    constructor(templateRef) {\n      _defineProperty(this, \"templateRef\", void 0);\n      this.templateRef = templateRef;\n    }\n  }\n  _class16 = DecadeCellTemplateDirective;\n  _defineProperty(DecadeCellTemplateDirective, \"\\u0275fac\", function _class16_Factory(t) {\n    return new (t || _class16)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  });\n  _defineProperty(DecadeCellTemplateDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class16,\n    selectors: [[\"\", \"kendoCalendarDecadeCellTemplate\", \"\"]],\n    standalone: true\n  }));\n  return DecadeCellTemplateDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used for rendering the century cell content of the Calendar. To define the century cell template, nest an `<ng-template>`\n * tag with the `kendoCalendarCenturyCellTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current date, use the `let-date` directive. To provide more details about\n * the current century cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar [activeView]=\"activeView\">\n *    <ng-template kendoCalendarCenturyCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * export class AppComponent {\n *  public activeView: CalendarView = 'century';\n * }\n * ```\n */\nlet CenturyCellTemplateDirective = /*#__PURE__*/(() => {\n  var _class17;\n  class CenturyCellTemplateDirective {\n    constructor(templateRef) {\n      _defineProperty(this, \"templateRef\", void 0);\n      this.templateRef = templateRef;\n    }\n  }\n  _class17 = CenturyCellTemplateDirective;\n  _defineProperty(CenturyCellTemplateDirective, \"\\u0275fac\", function _class17_Factory(t) {\n    return new (t || _class17)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  });\n  _defineProperty(CenturyCellTemplateDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class17,\n    selectors: [[\"\", \"kendoCalendarCenturyCellTemplate\", \"\"]],\n    standalone: true\n  }));\n  return CenturyCellTemplateDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used for rendering the week number cell content in the month view of the Calendar. To define the month week number cell template,\n * nest an `<ng-template>` tag with the `kendoCalendarWeekNumberCellTemplate` directive inside the component tag. The template\n * context is set to the current component. To get a reference to the current date, use the `let-date` directive. To provide more\n * details about the current week number cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar [weekNumber]=\"true\">\n *    <ng-template kendoCalendarWeekNumberCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * export class AppComponent { }\n * ```\n */\nlet WeekNumberCellTemplateDirective = /*#__PURE__*/(() => {\n  var _class18;\n  class WeekNumberCellTemplateDirective {\n    constructor(templateRef) {\n      _defineProperty(this, \"templateRef\", void 0);\n      this.templateRef = templateRef;\n    }\n  }\n  _class18 = WeekNumberCellTemplateDirective;\n  _defineProperty(WeekNumberCellTemplateDirective, \"\\u0275fac\", function _class18_Factory(t) {\n    return new (t || _class18)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  });\n  _defineProperty(WeekNumberCellTemplateDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class18,\n    selectors: [[\"\", \"kendoCalendarWeekNumberCellTemplate\", \"\"]],\n    standalone: true\n  }));\n  return WeekNumberCellTemplateDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used for rendering the header title of the Calendar. To define the header title template, nest an `<ng-template>` tag\n * with the `kendoCalendarHeaderTitleTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current title, use the `let-title` directive. To provide more details about\n * the current title, get a reference to the current `date` by using the `let-date` directive or get a reference to the\n * current active view  by using the `let-activeView` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarHeaderTitleTemplate let-title>\n *      <span class=\"custom\">{{title}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * export class AppComponent { }\n * ```\n */\nlet HeaderTitleTemplateDirective = /*#__PURE__*/(() => {\n  var _class19;\n  class HeaderTitleTemplateDirective {\n    constructor(templateRef) {\n      _defineProperty(this, \"templateRef\", void 0);\n      this.templateRef = templateRef;\n    }\n  }\n  _class19 = HeaderTitleTemplateDirective;\n  _defineProperty(HeaderTitleTemplateDirective, \"\\u0275fac\", function _class19_Factory(t) {\n    return new (t || _class19)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  });\n  _defineProperty(HeaderTitleTemplateDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class19,\n    selectors: [[\"\", \"kendoCalendarHeaderTitleTemplate\", \"\"]],\n    standalone: true\n  }));\n  return HeaderTitleTemplateDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nfunction handleRangeSelection(date, selectionRange, activeRangeEnd, allowReverse = false) {\n  if (activeRangeEnd === 'start' && selectionRange.start?.getTime() === date?.getTime() && (allowReverse && !selectionRange.end || !allowReverse) || activeRangeEnd === 'end' && selectionRange.end?.getTime() === date?.getTime()) {\n    return {\n      activeRangeEnd: activeRangeEnd,\n      selectionRange: selectionRange\n    };\n  }\n  if (allowReverse) {\n    if (activeRangeEnd === 'start' && selectionRange.start?.getTime() !== date?.getTime()) {\n      selectionRange.start = date;\n      activeRangeEnd = 'end';\n    } else if (activeRangeEnd === 'end' && selectionRange.end?.getTime() !== date?.getTime()) {\n      selectionRange.end = date;\n      activeRangeEnd = 'start';\n    }\n  }\n  if (!allowReverse) {\n    if (activeRangeEnd === 'start' && date > selectionRange.end || activeRangeEnd === 'end' && date < selectionRange.start) {\n      selectionRange = {\n        start: date,\n        end: null\n      };\n      activeRangeEnd = 'end';\n    } else if (activeRangeEnd === 'start' && date <= selectionRange.end) {\n      selectionRange.start = date;\n      activeRangeEnd = 'end';\n    } else if (activeRangeEnd === 'end' && date >= selectionRange.start && date.getTime() !== selectionRange.end?.getTime()) {\n      selectionRange.end = date;\n      activeRangeEnd = 'start';\n    }\n  }\n  return {\n    activeRangeEnd: activeRangeEnd,\n    selectionRange: selectionRange\n  };\n}\n\n/**\n * @hidden\n */\nconst minValidator = minValue => {\n  return control => {\n    const err = {\n      minError: {\n        minValue: minValue,\n        value: control.value\n      }\n    };\n    if (!minValue || !control.value) {\n      return null;\n    }\n    return control.value < minValue ? err : null;\n  };\n};\n\n/**\n * @hidden\n */\nconst maxValidator = maxValue => {\n  return control => {\n    const err = {\n      maxError: {\n        maxValue: maxValue,\n        value: control.value\n      }\n    };\n    if (!maxValue || !control.value) {\n      return null;\n    }\n    return control.value > maxValue ? err : null;\n  };\n};\nconst noop = () => null;\n/**\n * @hidden\n */\nconst disabledDatesRangeValidator = isDateDisabled => {\n  if (!isPresent(isDateDisabled)) {\n    return noop;\n  }\n  return selectedRange => {\n    const isRangeComplete = isPresent(selectedRange) && isPresent(selectedRange.start) && isPresent(selectedRange.end);\n    if (!isRangeComplete || selectedRange.start > selectedRange.end) {\n      return null;\n    }\n    const disabledDates = disabledDatesInRange(selectedRange.start, selectedRange.end, isDateDisabled);\n    const error = {\n      disabledDatesInRange: disabledDates\n    };\n    return disabledDates.length ? error : null;\n  };\n};\nconst KEY_TO_ACTION = {\n  '33': Action.PrevView,\n  '34': Action.NextView,\n  '35': Action.LastInView,\n  '36': Action.FirstInView,\n  '37': Action.Left,\n  '38': Action.Up,\n  '39': Action.Right,\n  '40': Action.Down,\n  'meta+38': Action.UpperView,\n  'meta+40': Action.LowerView\n};\n/**\n * @hidden\n */\nlet NavigationService = /*#__PURE__*/(() => {\n  var _class20;\n  class NavigationService {\n    constructor(bus) {\n      _defineProperty(this, \"bus\", void 0);\n      this.bus = bus;\n    }\n    action(event) {\n      const action = `${event.ctrlKey || event.metaKey ? 'meta+' : ''}${event.keyCode}`;\n      return KEY_TO_ACTION[action];\n    }\n    move(value, action, activeView) {\n      const service = this.bus.service(activeView);\n      if (!service) {\n        return value;\n      }\n      if (action === Action.UpperView && this.bus.canMoveUp(activeView)) {\n        this.bus.moveUp(activeView);\n        return value;\n      }\n      if (action === Action.LowerView && this.bus.canMoveDown(activeView)) {\n        this.bus.moveDown(activeView);\n        return value;\n      }\n      return service.move(value, action);\n    }\n  }\n  _class20 = NavigationService;\n  _defineProperty(NavigationService, \"\\u0275fac\", function _class20_Factory(t) {\n    return new (t || _class20)(i0.ɵɵinject(BusViewService));\n  });\n  _defineProperty(NavigationService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class20,\n    factory: _class20.ɵfac,\n    providedIn: 'root'\n  }));\n  return NavigationService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used for rendering the header of the Calendar. To define the header template, nest an `<ng-template>` tag\n * with the `kendoCalendarHeaderTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current title, use the `let-title` directive. To provide more details about\n * the current title, get a reference to the current `date` by using the `let-date` directive or get a reference to the\n * current active view  by using the `let-activeView` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarHeaderTemplate let-title>\n *      <span class=\"custom\">{{title}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * export class AppComponent { }\n * ```\n */\nlet HeaderTemplateDirective = /*#__PURE__*/(() => {\n  var _class21;\n  class HeaderTemplateDirective {\n    constructor(templateRef) {\n      _defineProperty(this, \"templateRef\", void 0);\n      this.templateRef = templateRef;\n    }\n  }\n  _class21 = HeaderTemplateDirective;\n  _defineProperty(HeaderTemplateDirective, \"\\u0275fac\", function _class21_Factory(t) {\n    return new (t || _class21)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  });\n  _defineProperty(HeaderTemplateDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class21,\n    selectors: [[\"\", \"kendoCalendarHeaderTemplate\", \"\"]],\n    standalone: true\n  }));\n  return HeaderTemplateDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used for rendering the footer of the Calendar. To define the footer template, nest an `<ng-template>` tag\n * with the `kendoCalendarFooterTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current `date` use the `let-date` directive. To get a reference to the\n * current active view use the `let-activeView` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarFooterTemplate let-date>\n *      <span class=\"custom\">{{date}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * export class AppComponent { }\n * ```\n */\nlet FooterTemplateDirective = /*#__PURE__*/(() => {\n  var _class22;\n  class FooterTemplateDirective {\n    constructor(templateRef) {\n      _defineProperty(this, \"templateRef\", void 0);\n      this.templateRef = templateRef;\n    }\n  }\n  _class22 = FooterTemplateDirective;\n  _defineProperty(FooterTemplateDirective, \"\\u0275fac\", function _class22_Factory(t) {\n    return new (t || _class22)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  });\n  _defineProperty(FooterTemplateDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class22,\n    selectors: [[\"\", \"kendoCalendarFooterTemplate\", \"\"]],\n    standalone: true\n  }));\n  return FooterTemplateDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet FooterComponent = /*#__PURE__*/(() => {\n  var _class23;\n  class FooterComponent {\n    constructor(intl) {\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"showFooter\", true);\n      _defineProperty(this, \"footerTemplateRef\", void 0);\n      _defineProperty(this, \"activeViewValue\", void 0);\n      _defineProperty(this, \"currentDate\", void 0);\n      _defineProperty(this, \"getToday\", getToday);\n      this.intl = intl;\n    }\n  }\n  _class23 = FooterComponent;\n  _defineProperty(FooterComponent, \"\\u0275fac\", function _class23_Factory(t) {\n    return new (t || _class23)(i0.ɵɵdirectiveInject(i1.IntlService));\n  });\n  _defineProperty(FooterComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class23,\n    selectors: [[\"kendo-calendar-footer\"]],\n    hostVars: 2,\n    hostBindings: function _class23_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-calendar-footer\", ctx.showFooter);\n      }\n    },\n    inputs: {\n      footerTemplateRef: \"footerTemplateRef\",\n      activeViewValue: \"activeViewValue\",\n      currentDate: \"currentDate\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"defaultRendering\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"kendoButton\", \"\", \"fillMode\", \"flat\", \"themeColor\", \"primary\", \"type\", \"button\", \"tabindex\", \"-1\", 1, \"k-calendar-nav-today\"]],\n    template: function _class23_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, _class23_0_Template, 1, 5, null, 0);\n        i0.ɵɵtemplate(1, _class23_ng_template_1_Template, 2, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.footerTemplateRef)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [NgIf, NgTemplateOutlet, ButtonComponent],\n    encapsulation: 2\n  }));\n  return FooterComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet Messages = /*#__PURE__*/(() => {\n  var _class24;\n  class Messages extends ComponentMessages {\n    constructor(...args) {\n      super(...args);\n      /**\n       * The **Today** button text in the header of the MultiViewCalendar.\n       */\n      _defineProperty(this, \"today\", void 0);\n      /**\n       * The title of the **Prev** button in the header of the MultiViewCalendar.\n       */\n      _defineProperty(this, \"prevButtonTitle\", void 0);\n      /**\n       * The title of the **Next** button in the header of the MultiViewCalendar.\n       */\n      _defineProperty(this, \"nextButtonTitle\", void 0);\n      /**\n       * The title of the **Parent View** button in the header of the MultiViewCalendar.\n       */\n      _defineProperty(this, \"parentViewButtonTitle\", void 0);\n    }\n  }\n  _class24 = Messages;\n  _defineProperty(Messages, \"\\u0275fac\", /* @__PURE__ */function () {\n    let ɵ_class24_BaseFactory;\n    return function _class24_Factory(t) {\n      return (ɵ_class24_BaseFactory || (ɵ_class24_BaseFactory = i0.ɵɵgetInheritedFactory(_class24)))(t || _class24);\n    };\n  }());\n  _defineProperty(Messages, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class24,\n    selectors: [[\"kendo-multiview-calendar-messages-base\"]],\n    inputs: {\n      today: \"today\",\n      prevButtonTitle: \"prevButtonTitle\",\n      nextButtonTitle: \"nextButtonTitle\",\n      parentViewButtonTitle: \"parentViewButtonTitle\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  }));\n  return Messages;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet MultiViewCalendarLocalizedMessagesDirective = /*#__PURE__*/(() => {\n  var _class25;\n  class MultiViewCalendarLocalizedMessagesDirective extends Messages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n  }\n  _class25 = MultiViewCalendarLocalizedMessagesDirective;\n  _defineProperty(MultiViewCalendarLocalizedMessagesDirective, \"\\u0275fac\", function _class25_Factory(t) {\n    return new (t || _class25)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(MultiViewCalendarLocalizedMessagesDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class25,\n    selectors: [[\"\", \"kendoMultiViewCalendarLocalizedMessages\", \"\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: Messages,\n      useExisting: forwardRef(() => _class25)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  }));\n  return MultiViewCalendarLocalizedMessagesDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst BOTTOM_VIEW_DOC_LINK$1 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-bottomview';\nconst TOP_VIEW_DOC_LINK$1 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-topview';\nconst MIN_DOC_LINK$3 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-min';\nconst MAX_DOC_LINK$3 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-max';\nconst VALUE_DOC_LINK$5 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/calendar/#toc-using-with-json';\n/**\n * @hidden\n */\nconst RANGE_CALENDAR_VALUE_ACCESSOR = {\n  multi: true,\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MultiViewCalendarComponent)\n};\n/**\n * @hidden\n */\nconst RANGE_CALENDAR_RANGE_VALIDATORS = {\n  multi: true,\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MultiViewCalendarComponent)\n};\n/**\n * Represents the Kendo UI MultiViewCalendar component for Angular.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiviewcalendar></kendo-multiviewcalendar>\n * `\n * })\n * export class AppComponent { }\n * ```\n */\nlet MultiViewCalendarComponent = /*#__PURE__*/(() => {\n  var _class26;\n  class MultiViewCalendarComponent {\n    /**\n     * @hidden\n     *\n     * TODO: Make visible when the Infinite Calendar is fixed to set properly the size option.\n     * Sets the size of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (Default)\n     * * `large`\n     * * `none`\n     *\n     */\n    set size(size) {\n      const newSize = size ? size : DEFAULT_SIZE;\n      this.renderer.removeClass(this.element.nativeElement, getSizeClass('calendar', this.size));\n      if (newSize !== 'none') {\n        this.renderer.addClass(this.element.nativeElement, getSizeClass('calendar', newSize));\n      }\n      this._size = newSize;\n    }\n    get size() {\n      return this._size;\n    }\n    /**\n     * Sets or gets the `focusedDate` property of the Calendar and\n     * defines the focused date of the component\n     * ([see example]({% slug dates_multiviewcalendar %}#toc-focused-dates)).\n     *\n     * > If the Calendar is out of the min or max range, it normalizes the defined `focusedDate`.\n     */\n    set focusedDate(focusedDate) {\n      this._focusedDate = focusedDate || getToday();\n    }\n    get focusedDate() {\n      return this._focusedDate;\n    }\n    /**\n     * Toggles the visibility of the footer.\n     * @default false\n     */\n\n    /**\n     * @hidden\n     */\n    get headerId() {\n      return this.id + 'header-';\n    }\n    /**\n     * @hidden\n     */\n    get multiViewCalendarHeaderIdLabel() {\n      return this.views >= 2 ? this.id + 'header-' : null;\n    }\n    /**\n    * @hidden\n    */\n    get calendarHeaderIdLabel() {\n      return this.views === 1 ? this.id + 'header-' : null;\n    }\n    /**\n     * Sets or gets the `min` property of the Calendar and\n     * defines the minimum allowed date value.\n     * By default, the `min` value is `1900-1-1`.\n     */\n    set min(min) {\n      this._min = min || new Date(MIN_DATE);\n    }\n    get min() {\n      return this._min;\n    }\n    /**\n     * Sets or gets the `max` property of the Calendar and\n     * defines the maximum allowed date value.\n     * By default, the `max` value is `2099-12-31`.\n     */\n    set max(max) {\n      this._max = max || new Date(MAX_DATE);\n    }\n    get max() {\n      return this._max;\n    }\n    /**\n     * Determines whether the built-in min or max validators are enforced when validating a form.\n     */\n\n    /**\n     * Sets the Calendar selection mode\n     * ([see example]({% slug selection_multiviewcalendar %})).\n     *\n     * The available values are:\n     * * `single` (default)\n     * * `multiple`\n     * * `range`\n     */\n    set selection(_selection) {\n      this.selectionSetter = true;\n      this._selection = _selection;\n    }\n    get selection() {\n      return this._selection;\n    }\n    /**\n     * Sets or gets the `value` property of the Calendar and defines the selected value of the component.\n     *\n     * > The `value` has to be a valid [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date)\n        instance when in `single` selection mode, an array of valid JavaScript Date instances when in `multiple` selection mode, or\n        an object of type `SelectionRange` when in `range` selection mode.\n     */\n    set value(candidate) {\n      this.valueSetter = true;\n      this._value = candidate;\n    }\n    get value() {\n      return this._value;\n    }\n    /**\n     * Sets or gets the `disabled` property of the Calendar and\n     * determines whether the component is active\n     * ([see example]({% slug disabled_multiviewcalendar %})).\n     * To learn how to disable the component in reactive forms, refer to the article on [Forms Support](slug:formssupport_multiviewcalendar#toc-managing-the-multiviewcalendar-disabled-state-in-reactive-forms).\n     */\n\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n      this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n      return this.tabindex;\n    }\n    /**\n     * Sets the format of the displayed Calendar week days' names.\n     * @default 'short'\n     */\n\n    /**\n     * Sets the dates of the MultiViewCalendar that will be disabled\n     * ([see example]({% slug disabled_dates_multiviewcalendar %})).\n     */\n    set disabledDates(value) {\n      this.disabledDatesService.initialize(value);\n    }\n    /**\n     * Defines the active view that the Calendar initially renders\n     * ([see example]({% slug viewoptions_multiviewcalendar %})).\n     * By default, the active view is `month`.\n     *\n     * > You have to set `activeView` within the `topView`-`bottomView` range.\n     */\n\n    /**\n     * Specify, which end of the defined selection range should be marked as active.\n     *\n     * > Value will be ignored if the selection range is undefined.\n     * > If range selection is used then the default value is 'start'.\n     */\n    set activeRangeEnd(_activeRangeEnd) {\n      this._activeRangeEnd = _activeRangeEnd;\n    }\n    get activeRangeEnd() {\n      return this.selection === 'range' && !this._activeRangeEnd ? 'start' : this._activeRangeEnd;\n    }\n    /**\n     * Sets or gets the `selectionRange` property of the Calendar and\n     * defines the selection range of the component\n     * ([see example](slug:selection_multiviewcalendar#toc-range-selection)).\n     * > We recommend using the `value` property as it now supports `range` selection.\n     */\n    set selectionRange(range) {\n      this._selectionRange = range;\n      if (this.disabledDatesRangeValidation) {\n        this.onValidatorChange();\n      }\n    }\n    get selectionRange() {\n      return this._selectionRange;\n    }\n    /**\n     * Sets or gets the `views` property of the Calendar and\n     * defines the number of rendered months.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for each cell.\n     * Takes precedence over nested templates in the KendoMultiViewCalendar tag.\n     */\n    set cellTemplateRef(template) {\n      this._cellTemplateRef = template;\n    }\n    get cellTemplateRef() {\n      return this._cellTemplateRef || this.cellTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Queries the template for a month cell template declaration.\n     * Ignored if a `[monthCellTemplate]` value is explicitly provided.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for each month cell.\n     * Takes precedence over nested templates in the KendoMultiViewCalendar tag.\n     */\n    set monthCellTemplateRef(template) {\n      this._monthCellTemplateRef = template;\n    }\n    get monthCellTemplateRef() {\n      return this._monthCellTemplateRef || this.monthCellTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Queries the template for a year cell template declaration.\n     * Ignored if a `[yearCellTemplate]` value is explicitly provided.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for each year cell.\n     * Takes precedence over nested templates in the KendoMultiViewCalendar tag.\n     */\n    set yearCellTemplateRef(template) {\n      this._yearCellTemplateRef = template;\n    }\n    get yearCellTemplateRef() {\n      return this._yearCellTemplateRef || this.yearCellTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Queries the template for a decade cell template declaration.\n     * Ignored if a `[decadeCellTemplate]` value is explicitly provided.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for each decade cell.\n     * Takes precedence over nested templates in the KendoMultiViewCalendar tag.\n     */\n    set decadeCellTemplateRef(template) {\n      this._decadeCellTemplateRef = template;\n    }\n    get decadeCellTemplateRef() {\n      return this._decadeCellTemplateRef || this.decadeCellTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Queries the template for a century cell template declaration.\n     * Ignored if a `[centuryCellTemplate]` value is explicitly provided.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for each century cell.\n     * Takes precedence over nested templates in the KendoMultiViewCalendar tag.\n     */\n    set centuryCellTemplateRef(template) {\n      this._centuryCellTemplateRef = template;\n    }\n    get centuryCellTemplateRef() {\n      return this._centuryCellTemplateRef || this.centuryCellTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Queries the template for a week number cell template declaration.\n     * Ignored if a `[weekNumberTemplate]` value is explicitly provided.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for the week cell.\n     * Takes precedence over nested templates in the KendoMultiViewCalendar tag.\n     */\n    set weekNumberTemplateRef(template) {\n      this._weekNumberTemplateRef = template;\n    }\n    get weekNumberTemplateRef() {\n      return this._weekNumberTemplateRef || this.weekNumberTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Queries the template for a header title template declaration.\n     * Ignored if a `[headerTitleTemplate]` value is explicitly provided.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for the Calendar footer.\n     * Takes precedence over nested templates in the KendoMultiViewCalendar tag.\n     */\n    set footerTemplateRef(template) {\n      this._footerTemplateRef = template;\n    }\n    get footerTemplateRef() {\n      return this._footerTemplateRef || this.footerTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Defines the template for the header title.\n     * Takes precedence over nested templates in the KendoMultiViewCalendar tag.\n     */\n    set headerTitleTemplateRef(template) {\n      this._headerTitleTemplateRef = template;\n    }\n    get headerTitleTemplateRef() {\n      return this._headerTitleTemplateRef || this.headerTitleTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Defines the template for the Calendar header.\n     * Takes precedence over nested templates in the KendoMultiViewCalendar tag.\n     */\n    set headerTemplateRef(template) {\n      this._headerTemplateRef = template;\n    }\n    get headerTemplateRef() {\n      return this._headerTemplateRef || this.headerTemplate;\n    }\n    get activeViewEnum() {\n      const activeView = CalendarViewEnum[this.activeView];\n      return activeView < this.bottomViewEnum ? this.bottomViewEnum : activeView;\n    }\n    get bottomViewEnum() {\n      return CalendarViewEnum[this.bottomView];\n    }\n    get topViewEnum() {\n      return CalendarViewEnum[this.topView];\n    }\n    get widgetId() {\n      return this.views >= 2 ? this.id : null;\n    }\n    get ariaDisabled() {\n      return this.disabled;\n    }\n    /**\n     * @hidden\n     */\n    get ariaActivedescendant() {\n      return this.cellUID + this.focusedDate.getTime();\n    }\n    /**\n     * @hidden\n     */\n    handleFocusout(event) {\n      const relatedTarget = event.relatedTarget;\n      if (!this.element.nativeElement.contains(relatedTarget)) {\n        const isClassicCalendar = this.views === 1;\n        isClassicCalendar ? this.blurEvent.emit(event) : this.blurEvent.emit();\n        this.onControlTouched();\n      }\n      this.isActive = false;\n      this.isHovered = false; //ensure that hovered is also not active\n    }\n    /**\n     * @hidden\n     */\n    handleFocus() {\n      this.isActive = true;\n      const isClassicCalendar = this.views === 1;\n      isClassicCalendar ? this.focusCalendar.emit() : this.focusEvent.emit();\n      this.focusEvent.emit();\n    }\n    /**\n     * @hidden\n     */\n    handleMouseEnter() {\n      this.isHovered = true;\n    }\n    /**\n     * @hidden\n     */\n    handleMouseLeave() {\n      this.isHovered = false;\n      this.setRangeSelectionToValue();\n    }\n    /**\n     * @hidden\n     */\n    handleMousedown(event) {\n      event.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    handleClick() {\n      if (this.isActive) {\n        return;\n      }\n      this.focus();\n    }\n    /**\n     * @hidden\n     */\n    keydown(event) {\n      const arrowUpOrDownKeyPressed = [Keys$1.ArrowUp, Keys$1.ArrowDown].indexOf(event.keyCode) !== -1;\n      const ctrlKey = event.ctrlKey || event.metaKey;\n      const onArrowRightAndControl = event.keyCode === Keys$1.ArrowRight && ctrlKey;\n      const onArrowLeftAndControl = event.keyCode === Keys$1.ArrowLeft && ctrlKey;\n      const onTKeyPress = event.keyCode === Keys$1.KeyT;\n      const onEnterKeyPress = event.keyCode === Keys$1.Enter;\n      const onArrowUpPress = event.keyCode === Keys$1.ArrowUp;\n      const altKey = event.altKey;\n      const escKey = event.keyCode === Keys$1.Escape;\n      const tabKeyPress = event.keyCode === Keys$1.Tab;\n      const shiftKeyPress = event.shiftKey;\n      if (onArrowRightAndControl) {\n        event.preventDefault();\n        this.navigateView(this.nextView);\n        return;\n      } else if (onArrowLeftAndControl) {\n        event.preventDefault();\n        this.navigateView(this.prevView);\n        return;\n      } else if (ctrlKey && arrowUpOrDownKeyPressed) {\n        event.preventDefault();\n      } else if (onTKeyPress) {\n        this.focusedDate = getToday();\n        this.bus.moveToBottom(this.activeViewEnum);\n        this.updateButtonState();\n        return;\n      } else if (onEnterKeyPress) {\n        if (this.selection !== 'range') {\n          this.selectionService.lastClicked = this.focusedDate;\n          this.performSelection(this.focusedDate, event);\n        } else {\n          this.performRangeSelection(this.focusedDate);\n        }\n      }\n      if (this.views >= 2) {\n        if (escKey || altKey && onArrowUpPress) {\n          this.onClosePopup.emit(event);\n        } else if (tabKeyPress && shiftKeyPress) {\n          this.onShiftTabPress.emit(event);\n        } else if (tabKeyPress && !shiftKeyPress) {\n          this.onTabPress.emit(event);\n        }\n      }\n      const candidate = dateInRange(this.navigator.move(this.focusedDate, this.navigator.action(event), this.activeViewEnum), this.min, this.max);\n      if (isEqual(this.focusedDate, candidate)) {\n        return;\n      }\n      this.focusedDate = candidate;\n      event.preventDefault();\n      const isSameView = this.bus.service(this.activeViewEnum).isInArray(this.focusedDate, this.viewList.dates);\n      if (!isSameView) {\n        this.emitNavigate(this.focusedDate);\n        this.updateButtonState();\n      }\n      if (isArrowWithShiftPressed(event) && this.selection !== 'range') {\n        event['anyArrow'] = true;\n        this.performSelection(this.focusedDate, event);\n      }\n    }\n    constructor(bus, element, navigator, renderer, cdr, zone, disabledDatesService, selectionService) {\n      _defineProperty(this, \"bus\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"navigator\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"zone\", void 0);\n      _defineProperty(this, \"disabledDatesService\", void 0);\n      _defineProperty(this, \"selectionService\", void 0);\n      /**\n       * Displays the days that fall out of the current month ([see example]({% slug viewoptions_multiviewcalendar %}#toc-displaying-other-month-days)).\n       * @default true\n       */\n      _defineProperty(this, \"showOtherMonthDays\", true);\n      /**\n       * @hidden\n       *\n       * Determines whether to display the calendar header.\n       */\n      _defineProperty(this, \"showCalendarHeader\", true);\n      _defineProperty(this, \"_size\", DEFAULT_SIZE);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"id\", void 0);\n      _defineProperty(this, \"footer\", false);\n      _defineProperty(this, \"rangeValidation\", false);\n      /**\n       * Determines whether the built-in validator for disabled\n       * date ranges is enforced when validating a form\n       * ([see example](slug:disabled_dates_multiviewcalendar)).\n       */\n      _defineProperty(this, \"disabledDatesRangeValidation\", false);\n      _defineProperty(this, \"_selection\", 'single');\n      /**\n       * Allows reverse selection when using `range` selection.\n       * If `allowReverse` is set to `true`, the component skips the validation of whether the start date is after the end date.\n       *\n       * @default false\n       */\n      _defineProperty(this, \"allowReverse\", false);\n      _defineProperty(this, \"disabled\", false);\n      /**\n       * Sets or gets the `tabindex` property of the Calendar. Based on the\n       * [HTML `tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) behavior,\n       * it determines whether the component is focusable.\n       */\n      _defineProperty(this, \"tabindex\", 0);\n      _defineProperty(this, \"weekDaysFormat\", \"short\");\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"isActive\", false);\n      _defineProperty(this, \"activeView\", CalendarViewEnum[CalendarViewEnum.month]);\n      /**\n       * Defines the bottommost view, to which the user can navigate\n       * ([see example](slug:viewdepth_multiviewcalendar)).\n       */\n      _defineProperty(this, \"bottomView\", CalendarViewEnum[CalendarViewEnum.month]);\n      /**\n       * Defines the topmost view, to which the user can navigate.\n       */\n      _defineProperty(this, \"topView\", CalendarViewEnum[CalendarViewEnum.century]);\n      /**\n       * Determines whether to display a header for every view (for example the month name).\n       */\n      _defineProperty(this, \"showViewHeader\", false);\n      /**\n       * Determines whether to enable animation when navigating to previous/next view.\n       *\n       * > This feature uses the [Web Animations API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API). In order to run the animation in browsers that do not support it, you need the `web-animations-js` polyfill.\n       *\n       * @default false\n       */\n      _defineProperty(this, \"animateNavigation\", false);\n      /**\n       * Determines whether to display a week number column in the `month` view\n       * ([see example]({% slug weeknumcolumn_multiviewcalendar %})).\n       */\n      _defineProperty(this, \"weekNumber\", false);\n      _defineProperty(this, \"views\", 2);\n      /**\n       * Specifies the orientation of the MultiViewCalendar.\n       *\n       * The available values are:\n       * * `horizontal` (default)\n       * * `vertical`\n       */\n      _defineProperty(this, \"orientation\", 'horizontal');\n      /**\n       * Fires when the active view is changed\n       * ([see example](slug:events_multiviewcalendar)).\n       */\n      _defineProperty(this, \"activeViewChange\", new EventEmitter());\n      /**\n       * Fires when navigating in the currently active view\n       * ([see example](slug:events_multiviewcalendar)).\n       */\n      _defineProperty(this, \"navigate\", new EventEmitter());\n      /**\n       * Fires when a view cell is entered\n       * ([see example](slug:events_multiviewcalendar)).\n       */\n      _defineProperty(this, \"cellEnter\", new EventEmitter());\n      /**\n       * Fires when a view cell is leaved\n       * ([see example](slug:events_multiviewcalendar)).\n       */\n      _defineProperty(this, \"cellLeave\", new EventEmitter());\n      /**\n       * Fires when the value is changed\n       * ([see example](slug:events_multiviewcalendar)).\n       */\n      _defineProperty(this, \"valueChange\", new EventEmitter());\n      /**\n       * @hidden\n       * Fires when the range selection changes.\n       */\n      _defineProperty(this, \"rangeSelectionChange\", new EventEmitter());\n      /**\n       * Fires each time the MultiViewCalendar gets blurred\n       * ([see example](slug:events_multiviewcalendar)).\n       */\n      _defineProperty(this, \"blurEvent\", new EventEmitter());\n      /**\n       * Fires each time the MultiViewCalendar gets focused\n       * ([see example](slug:events_multiviewcalendar)).\n       */\n      _defineProperty(this, \"focusEvent\", new EventEmitter());\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"focusCalendar\", new EventEmitter());\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"onClosePopup\", new EventEmitter());\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"onTabPress\", new EventEmitter());\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"onShiftTabPress\", new EventEmitter());\n      /**\n       * @hidden\n       *\n       * Queries the template for a cell template declaration.\n       * Ignored if a `[cellTemplate]` value is explicitly provided.\n       */\n      _defineProperty(this, \"cellTemplate\", void 0);\n      _defineProperty(this, \"monthCellTemplate\", void 0);\n      _defineProperty(this, \"yearCellTemplate\", void 0);\n      _defineProperty(this, \"decadeCellTemplate\", void 0);\n      _defineProperty(this, \"centuryCellTemplate\", void 0);\n      _defineProperty(this, \"weekNumberTemplate\", void 0);\n      _defineProperty(this, \"headerTitleTemplate\", void 0);\n      /**\n       * @hidden\n       *\n       * Queries the template for a header template declaration.\n       */\n      _defineProperty(this, \"headerTemplate\", void 0);\n      /**\n       * @hidden\n       *\n       * Queries the template for a header template declaration.\n       */\n      _defineProperty(this, \"footerTemplate\", void 0);\n      _defineProperty(this, \"headerElement\", void 0);\n      _defineProperty(this, \"viewList\", void 0);\n      _defineProperty(this, \"cellUID\", guid());\n      _defineProperty(this, \"isHovered\", false);\n      _defineProperty(this, \"activeDate\", void 0);\n      _defineProperty(this, \"isPrevDisabled\", true);\n      _defineProperty(this, \"isNextDisabled\", true);\n      _defineProperty(this, \"prevView\", Action.PrevView);\n      _defineProperty(this, \"nextView\", Action.NextView);\n      _defineProperty(this, \"selectedDates\", []);\n      _defineProperty(this, \"rangePivot\", void 0);\n      _defineProperty(this, \"shouldHoverWhenNoStart\", false);\n      _defineProperty(this, \"canHover\", false);\n      _defineProperty(this, \"changes\", {});\n      _defineProperty(this, \"valueSetter\", false);\n      _defineProperty(this, \"selectionSetter\", false);\n      _defineProperty(this, \"_min\", new Date(MIN_DATE));\n      _defineProperty(this, \"_max\", new Date(MAX_DATE));\n      _defineProperty(this, \"_focusedDate\", getToday());\n      _defineProperty(this, \"_value\", void 0);\n      _defineProperty(this, \"_selectionRange\", {\n        start: null,\n        end: null\n      });\n      _defineProperty(this, \"_activeRangeEnd\", void 0);\n      _defineProperty(this, \"resolvedPromise\", Promise.resolve());\n      _defineProperty(this, \"onControlChange\", noop$2);\n      _defineProperty(this, \"onControlTouched\", noop$2);\n      _defineProperty(this, \"onValidatorChange\", noop$2);\n      _defineProperty(this, \"minValidateFn\", noop$2);\n      _defineProperty(this, \"maxValidateFn\", noop$2);\n      _defineProperty(this, \"disabledDatesRangeValidateFn\", noop$2);\n      _defineProperty(this, \"subscriptions\", new Subscription());\n      _defineProperty(this, \"_cellTemplateRef\", void 0);\n      _defineProperty(this, \"_monthCellTemplateRef\", void 0);\n      _defineProperty(this, \"_yearCellTemplateRef\", void 0);\n      _defineProperty(this, \"_decadeCellTemplateRef\", void 0);\n      _defineProperty(this, \"_centuryCellTemplateRef\", void 0);\n      _defineProperty(this, \"_weekNumberTemplateRef\", void 0);\n      _defineProperty(this, \"_headerTitleTemplateRef\", void 0);\n      _defineProperty(this, \"_headerTemplateRef\", void 0);\n      _defineProperty(this, \"_footerTemplateRef\", void 0);\n      this.bus = bus;\n      this.element = element;\n      this.navigator = navigator;\n      this.renderer = renderer;\n      this.cdr = cdr;\n      this.zone = zone;\n      this.disabledDatesService = disabledDatesService;\n      this.selectionService = selectionService;\n      this.id = `kendo-multiviewcalendarid-${this.bus.calendarId}-`;\n    }\n    ngOnInit() {\n      this.setClasses(this.element.nativeElement);\n      this.subscriptions.add(this.bus.viewChanged.subscribe(({\n        view\n      }) => {\n        this.activeView = CalendarViewEnum[view];\n        this.activeViewChange.emit(this.activeView);\n        this.cdr.detectChanges();\n        this.updateButtonState();\n      }));\n    }\n    ngOnChanges(changes) {\n      this.changes = changes;\n      this.verifyChanges();\n      this.bus.configure(this.bottomViewEnum, this.topViewEnum);\n    }\n    ngDoCheck() {\n      if (this.valueSetter || this.selectionSetter) {\n        if (this.selection === 'range' && (this.value?.start || this.value?.end) && this.focusedDate.getTime() !== this.value.start?.getTime() && this.focusedDate.getTime() !== this.value.end?.getTime()) {\n          this.focusedDate = this.value.start || this.value.end || getToday();\n        }\n        this.setValue(this.value);\n        this.valueSetter = false;\n        this.selectionSetter = false;\n      }\n      if (hasExistingValue(this.changes, 'focusedDate')) {\n        const focusedDate = this.changes.focusedDate.currentValue;\n        this.focusedDate = dateInRange(focusedDate, this.min, this.max);\n      }\n      if (this.changes.min || this.changes.max || this.changes.rangeValidation || this.changes.disabledDates || this.changes.disabledDatesRangeValidation) {\n        this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop$2;\n        this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop$2;\n        this.disabledDatesRangeValidateFn = this.disabledDatesRangeValidation ? disabledDatesRangeValidator(this.disabledDatesService.isDateDisabled) : noop$2;\n        this.onValidatorChange();\n      }\n      if (this.changes.min || this.changes.max || this.changes.focusedDate || this.changes.activeView || this.changes.value) {\n        this.updateButtonState();\n      }\n      this.changes = {};\n    }\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n    ngAfterViewInit() {\n      this.updateButtonState();\n    }\n    /**\n     * Focuses the host element of the Calendar.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"multiviewcalendar.focus()\">Focus calendar</button>\n     *  <kendo-multiviewcalendar #multiviewcalendar></kendo-multiviewcalendar>\n     * `\n     * })\n     * export class AppComponent { }\n     * ```\n     */\n    focus() {\n      if (!this.element) {\n        return;\n      }\n      // Prevent the content from auto-scrolling when daterange is in adaptive mode\n      this.element.nativeElement.querySelector('.k-calendar-view').focus({\n        preventScroll: true\n      });\n    }\n    /**\n     * Blurs the Calendar component.\n     */\n    blur() {\n      if (!this.element) {\n        return;\n      }\n      const activeElement = this.views >= 2 ? this.element.nativeElement.querySelector('.k-calendar-view') : this.element.nativeElement.querySelector('.k-calendar-table');\n      activeElement.blur();\n    }\n    /**\n     * @hidden\n     */\n    handleDateChange(args) {\n      const canNavigateDown = this.bus.canMoveDown(this.activeViewEnum);\n      const availableDates = args.selectedDates.filter(date => !this.disabledDatesService.isDateDisabled(date));\n      this.focusedDate = args.focusedDate || this.focusedDate;\n      const sameDates = !canNavigateDown && areDatesEqual(availableDates, this.selectedDates);\n      if (this.disabled || sameDates) {\n        return;\n      }\n      if (canNavigateDown) {\n        this.bus.moveDown(this.activeViewEnum);\n        return;\n      }\n      if (this.disabledDatesService.isDateDisabled(this.focusedDate)) {\n        return;\n      }\n      if (this.selection === 'range') {\n        return;\n      }\n      this.selectedDates = availableDates.map(date => cloneDate(date));\n      this.value = this.parseSelectionToValue(availableDates);\n      this.onControlChange(this.parseSelectionToValue(availableDates));\n      this.valueChange.emit(this.parseSelectionToValue(availableDates));\n    }\n    /**\n     * @hidden\n     */\n    onCellEnter(cellEnter, date) {\n      this.emitCellEvent(cellEnter, date);\n      if (this.selection === 'range' && (this.canHover || this.shouldHoverWhenNoStart)) {\n        this.zone.run(() => {\n          if (this.canHover && !this.shouldHoverWhenNoStart) {\n            if (this.allowReverse) {\n              if (this.activeRangeEnd === 'end' && this.selectionRange.start) {\n                this.selectionRange = {\n                  start: this.selectionRange.start,\n                  end: date\n                };\n              }\n              if (this.activeRangeEnd === 'start' && this.selectionRange.end) {\n                this.selectionRange = {\n                  start: date,\n                  end: this.selectionRange.end\n                };\n              }\n            } else {\n              if (this.activeRangeEnd === 'end' && this.selectionRange.start && date >= this.selectionRange.start) {\n                this.selectionRange = {\n                  start: this.selectionRange.start,\n                  end: date\n                };\n              }\n              if (this.selectionRange.start && date < this.selectionRange.start) {\n                this.selectionRange = {\n                  start: this.selectionRange.start,\n                  end: null\n                };\n              }\n            }\n          } else if (this.shouldHoverWhenNoStart && date <= this.selectionRange.end) {\n            this.selectionRange = {\n              start: date,\n              end: this.selectionRange.end\n            };\n          } else {\n            this.selectionRange = {\n              start: null,\n              end: this.selectionRange.end\n            };\n          }\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleTodayButtonClick(args) {\n      const todayDate = args.focusedDate;\n      const isSameView = this.bus.service(this.activeViewEnum).isInArray(todayDate, this.viewList.dates);\n      const isBottomView = !this.bus.canMoveDown(this.activeViewEnum);\n      if (!isSameView && isBottomView) {\n        this.emitNavigate(todayDate);\n        this.updateButtonState();\n      }\n      this.handleDateChange(args);\n    }\n    /**\n     * @hidden\n     */\n    setActiveDate(date) {\n      this.activeDate = cloneDate(date);\n      this.cdr.detectChanges();\n    }\n    /**\n     * @hidden\n     */\n    writeValue(candidate) {\n      this.verifyValue(candidate);\n      this.value = candidate;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n      this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n      this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    validate(control) {\n      return this.minValidateFn(control) || this.maxValidateFn(control) || this.disabledDatesRangeValidateFn(this.selectionRange);\n    }\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn) {\n      this.onValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    activeCellTemplate() {\n      switch (this.activeViewEnum) {\n        case CalendarViewEnum.month:\n          return this.monthCellTemplateRef || this.cellTemplateRef;\n        case CalendarViewEnum.year:\n          return this.yearCellTemplateRef;\n        case CalendarViewEnum.decade:\n          return this.decadeCellTemplateRef;\n        case CalendarViewEnum.century:\n          return this.centuryCellTemplateRef;\n        default:\n          return null;\n      }\n    }\n    /**\n     * @hidden\n     */\n    navigateView(action) {\n      this.focusedDate = this.viewList.navigate(action);\n      this.updateButtonState();\n      this.emitNavigate(this.focusedDate);\n    }\n    /**\n     * @hidden\n     */\n    emitNavigate(focusedDate) {\n      const activeView = CalendarViewEnum[this.activeViewEnum];\n      this.navigate.emit({\n        activeView,\n        focusedDate\n      });\n    }\n    /**\n     * @hidden\n     */\n    emitCellEvent(emitter, args) {\n      if (hasObservers(emitter)) {\n        this.zone.run(() => {\n          emitter.emit(args);\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleCellClick({\n      date,\n      modifiers\n    }) {\n      if (this.selection === 'range' && this.activeViewEnum === CalendarViewEnum[this.bottomView]) {\n        this.performRangeSelection(date);\n      } else {\n        this.selectionService.lastClicked = date;\n        this.performSelection(date, modifiers);\n      }\n      const isSameView = this.bus.service(this.activeViewEnum).isInArray(this.focusedDate, this.viewList.dates);\n      if (!isSameView) {\n        this.emitNavigate(this.focusedDate);\n        this.updateButtonState();\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleWeekNumberClick(dates) {\n      if (this.selection === 'single') {\n        return;\n      }\n      this.zone.run(() => {\n        if (this.selection === 'multiple') {\n          this.handleDateChange({\n            selectedDates: dates,\n            focusedDate: last(dates)\n          });\n        }\n        if (this.selection === 'range') {\n          this.activeRangeEnd = 'start';\n          const shouldEmitValueChange = this.selectionRange.start?.getTime() !== dates[0].getTime() || this.selectionRange.end?.getTime() !== last(dates).getTime();\n          this.selectionRange.start = dates[0];\n          this.selectionRange.end = last(dates);\n          this.value = this.selectionRange;\n          if (shouldEmitValueChange) {\n            this.valueChange.emit(this.value);\n          }\n        }\n      });\n    }\n    setClasses(element) {\n      this.renderer.addClass(element, 'k-calendar');\n      this.renderer.addClass(element, getSizeClass('calendar', this.size));\n      if (this.views >= 2) {\n        this.renderer.addClass(element, 'k-calendar-range');\n      }\n    }\n    verifyChanges() {\n      if (!isDevMode()) {\n        return;\n      }\n      if (this.min > this.max) {\n        throw new Error(`The max value should be bigger than the min. See ${MIN_DOC_LINK$3} and ${MAX_DOC_LINK$3}.`);\n      }\n      if (this.bottomViewEnum > this.topViewEnum) {\n        throw new Error(`The topView should be greater than bottomView. See ${BOTTOM_VIEW_DOC_LINK$1} and ${TOP_VIEW_DOC_LINK$1}.`);\n      }\n    }\n    verifyValue(candidate) {\n      if (!isDevMode()) {\n        return;\n      }\n      if (this.selection === 'single' && candidate && !isNullOrDate(candidate)) {\n        throw new Error(`When using 'single' selection the 'value' should be a valid JavaScript Date instance. Check ${VALUE_DOC_LINK$5} for possible resolution.`);\n      } else if (this.selection === 'multiple' && candidate) {\n        if (Array.isArray(candidate)) {\n          const onlyDates = candidate.every(value => value instanceof Date);\n          if (!onlyDates) {\n            throw new Error(`When using 'multiple' selection the 'value' should be an array of valid JavaScript Date instances. Check ${VALUE_DOC_LINK$5} for possible resolution.`);\n          }\n        }\n        if (Object.keys(candidate).find(k => k === 'start') && Object.keys(candidate).find(k => k === 'end')) {\n          throw new Error(`When using 'multiple' selection the 'value' should be an array of valid JavaScript Date instances. Check ${VALUE_DOC_LINK$5} for possible resolution.`);\n        }\n      } else if (this.selection === 'range' && candidate && !(isNullOrDate(candidate['start']) && isNullOrDate(candidate['end']))) {\n        throw new Error(`The 'value' should be an object with start and end dates. Check ${VALUE_DOC_LINK$5} for possible resolution.`);\n      }\n    }\n    updateButtonState() {\n      this.resolvedPromise.then(() => {\n        this.cdr.detectChanges();\n        this.isPrevDisabled = !this.viewList.canNavigate(this.prevView);\n        this.isNextDisabled = !this.viewList.canNavigate(this.nextView);\n        this.cdr.markForCheck();\n      });\n    }\n    parseSelectionToValue(selection) {\n      selection = selection || [];\n      return this.selection === 'single' ? cloneDate(last(selection)) : selection.map(date => cloneDate(date));\n    }\n    setValue(candidate) {\n      this.verifyValue(candidate);\n      if (candidate === null) {\n        this._value = null;\n        this.selectedDates = [];\n      } else if (Array.isArray(candidate)) {\n        this.selectionRange = {\n          start: null,\n          end: null\n        };\n        this._value = candidate.filter(date => isPresent(date)).map(element => cloneDate(element));\n      } else if (isObject(candidate) && Object.keys(candidate).find(k => k === 'start') && Object.keys(candidate).find(k => k === 'end')) {\n        this.selectedDates = [];\n        this.selectionRange = {\n          start: null,\n          end: null\n        };\n        this._value = {\n          start: null,\n          end: null\n        };\n        this._value.start = candidate.start instanceof Date ? cloneDate(candidate.start) : null;\n        this._value.end = candidate.end instanceof Date ? cloneDate(candidate.end) : null;\n        this.selectionRange = Object.assign({}, this._value);\n        if (this._value?.start && !this._value?.end) {\n          this.activeRangeEnd = 'end';\n          this.canHover = true;\n        }\n        if (this._value?.end && !this._value?.start) {\n          this.activeRangeEnd = 'start';\n          this.canHover = true;\n        }\n        if (this._value?.end && this._value?.start) {\n          this.canHover = false;\n        }\n      } else {\n        this.selectionRange = {\n          start: null,\n          end: null\n        };\n        this._value = cloneDate(candidate);\n      }\n      if (this.selection !== 'range') {\n        const selection = [].concat(candidate).filter(date => isPresent(date)).map(date => cloneDate(date));\n        if (!areDatesEqual(selection, this.selectedDates)) {\n          const lastSelected = last(selection);\n          this.rangePivot = cloneDate(lastSelected);\n          this.focusedDate = cloneDate(lastSelected) || this.focusedDate;\n          this.selectedDates = selection;\n        }\n      }\n    }\n    setRangeSelectionToValue() {\n      if (this.selection === 'range' && this.value) {\n        this.selectionRange = this.value;\n        this.cdr.markForCheck();\n      }\n    }\n    performRangeSelection(date) {\n      this.focusedDate = date;\n      const clonedRangeSelection = Object.assign({}, this.selectionRange);\n      const emitValueChange = this.activeRangeEnd === 'start' && this.value?.start?.getTime() !== date?.getTime() || this.activeRangeEnd === 'end' && this.value?.end?.getTime() !== date?.getTime();\n      this.zone.run(() => {\n        const rangeSelection = handleRangeSelection(date, clonedRangeSelection, this.activeRangeEnd, this.allowReverse);\n        this.activeRangeEnd = rangeSelection.activeRangeEnd;\n        if (this.canHover && rangeSelection.activeRangeEnd === 'end' && rangeSelection.selectionRange.end?.getTime() === date.getTime()) {\n          this.activeRangeEnd = 'start';\n          rangeSelection.activeRangeEnd = 'start';\n        }\n        this.canHover = this.activeRangeEnd === 'end' && rangeSelection.selectionRange.start && !rangeSelection.selectionRange.end;\n        if (emitValueChange && (this.value?.start?.getTime() !== rangeSelection.selectionRange?.start?.getTime() || this.value?.end?.getTime() !== rangeSelection.selectionRange?.end?.getTime())) {\n          this.value = rangeSelection.selectionRange;\n          this.valueChange.emit(this.value);\n          this.rangeSelectionChange.emit(rangeSelection);\n        }\n        this.cdr.markForCheck();\n      });\n    }\n    performSelection(date, selectionModifiers) {\n      const selection = this.selectionService.performSelection({\n        date: date,\n        modifiers: selectionModifiers,\n        selectionMode: this.selection,\n        activeViewEnum: this.activeViewEnum,\n        rangePivot: this.rangePivot,\n        selectedDates: this.selectedDates\n      });\n      this.rangePivot = selection.rangePivot;\n      this.handleDateChange({\n        selectedDates: selection.selectedDates,\n        focusedDate: date\n      });\n    }\n  }\n  _class26 = MultiViewCalendarComponent;\n  _defineProperty(MultiViewCalendarComponent, \"\\u0275fac\", function _class26_Factory(t) {\n    return new (t || _class26)(i0.ɵɵdirectiveInject(BusViewService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DisabledDatesService), i0.ɵɵdirectiveInject(SelectionService));\n  });\n  _defineProperty(MultiViewCalendarComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class26,\n    selectors: [[\"kendo-multiviewcalendar\"]],\n    contentQueries: function _class26_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, MonthCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, YearCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, DecadeCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, CenturyCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, WeekNumberCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, HeaderTitleTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monthCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.yearCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.decadeCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.centuryCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.weekNumberTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTitleTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      }\n    },\n    viewQuery: function _class26_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(HeaderComponent, 5, ElementRef);\n        i0.ɵɵviewQuery(HorizontalViewListComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewList = _t.first);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function _class26_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseenter\", function _class26_mouseenter_HostBindingHandler() {\n          return ctx.handleMouseEnter();\n        })(\"mouseleave\", function _class26_mouseleave_HostBindingHandler() {\n          return ctx.handleMouseLeave();\n        })(\"mousedown\", function _class26_mousedown_HostBindingHandler($event) {\n          return ctx.handleMousedown($event);\n        })(\"click\", function _class26_click_HostBindingHandler() {\n          return ctx.handleClick();\n        })(\"keydown\", function _class26_keydown_HostBindingHandler($event) {\n          return ctx.keydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.widgetId)(\"aria-disabled\", ctx.ariaDisabled);\n        i0.ɵɵclassProp(\"k-disabled\", ctx.ariaDisabled);\n      }\n    },\n    inputs: {\n      showOtherMonthDays: \"showOtherMonthDays\",\n      showCalendarHeader: \"showCalendarHeader\",\n      size: \"size\",\n      id: \"id\",\n      focusedDate: \"focusedDate\",\n      footer: \"footer\",\n      min: \"min\",\n      max: \"max\",\n      rangeValidation: \"rangeValidation\",\n      disabledDatesRangeValidation: \"disabledDatesRangeValidation\",\n      selection: \"selection\",\n      allowReverse: \"allowReverse\",\n      value: \"value\",\n      disabled: \"disabled\",\n      tabindex: \"tabindex\",\n      tabIndex: \"tabIndex\",\n      weekDaysFormat: \"weekDaysFormat\",\n      isActive: \"isActive\",\n      disabledDates: \"disabledDates\",\n      activeView: \"activeView\",\n      bottomView: \"bottomView\",\n      topView: \"topView\",\n      showViewHeader: \"showViewHeader\",\n      animateNavigation: \"animateNavigation\",\n      weekNumber: \"weekNumber\",\n      activeRangeEnd: \"activeRangeEnd\",\n      selectionRange: \"selectionRange\",\n      views: \"views\",\n      orientation: \"orientation\",\n      cellTemplateRef: [\"cellTemplate\", \"cellTemplateRef\"],\n      monthCellTemplateRef: [\"monthCellTemplate\", \"monthCellTemplateRef\"],\n      yearCellTemplateRef: [\"yearCellTemplate\", \"yearCellTemplateRef\"],\n      decadeCellTemplateRef: [\"decadeCellTemplate\", \"decadeCellTemplateRef\"],\n      centuryCellTemplateRef: [\"centuryCellTemplate\", \"centuryCellTemplateRef\"],\n      weekNumberTemplateRef: [\"weekNumberTemplate\", \"weekNumberTemplateRef\"],\n      footerTemplateRef: [\"footerTemplate\", \"footerTemplateRef\"],\n      headerTitleTemplateRef: [\"headerTitleTemplate\", \"headerTitleTemplateRef\"],\n      headerTemplateRef: [\"headerTemplate\", \"headerTemplateRef\"]\n    },\n    outputs: {\n      activeViewChange: \"activeViewChange\",\n      navigate: \"navigate\",\n      cellEnter: \"cellEnter\",\n      cellLeave: \"cellLeave\",\n      valueChange: \"valueChange\",\n      rangeSelectionChange: \"rangeSelectionChange\",\n      blurEvent: \"blur\",\n      focusEvent: \"focus\",\n      focusCalendar: \"focusCalendar\",\n      onClosePopup: \"onClosePopup\",\n      onTabPress: \"onTabPress\",\n      onShiftTabPress: \"onShiftTabPress\"\n    },\n    exportAs: [\"kendo-multiviewcalendar\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([BusViewService, RANGE_CALENDAR_VALUE_ACCESSOR, RANGE_CALENDAR_RANGE_VALIDATORS, LocalizationService, DisabledDatesService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.multiviewcalendar'\n    }, NavigationService, SelectionService]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 4,\n    vars: 26,\n    consts: function () {\n      let i18n_8;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the today button in the calendar header\n         * @meaning kendo.multiviewcalendar.today\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_9 = goog.getMsg(\"Today\");\n        i18n_8 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_9;\n      } else {\n        i18n_8 = $localize`:kendo.multiviewcalendar.today|The label for the today button in the calendar header:Today`;\n      }\n      let i18n_10;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the previous button in the Multiview calendar\n         * @meaning kendo.multiviewcalendar.prevButtonTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_11 = goog.getMsg(\"Navigate to previous view\");\n        i18n_10 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_11;\n      } else {\n        i18n_10 = $localize`:kendo.multiviewcalendar.prevButtonTitle|The label for the previous button in the Multiview calendar:Navigate to previous view`;\n      }\n      let i18n_12;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the next button in the Multiview calendar\n         * @meaning kendo.multiviewcalendar.nextButtonTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_13 = goog.getMsg(\"Navigate to next view\");\n        i18n_12 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_13;\n      } else {\n        i18n_12 = $localize`:kendo.multiviewcalendar.nextButtonTitle|The label for the next button in the Multiview calendar:Navigate to next view`;\n      }\n      let i18n_14;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the parent view button in the Multiview calendar header\n         * @meaning kendo.multiviewcalendar.parentViewButtonTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_15 = goog.getMsg(\"Navigate to parent view\");\n        i18n_14 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_15;\n      } else {\n        i18n_14 = $localize`:kendo.multiviewcalendar.parentViewButtonTitle|The title of the parent view button in the Multiview calendar header:Navigate to parent view`;\n      }\n      return [[\"kendoMultiViewCalendarLocalizedMessages\", \"\", \"today\", i18n_8, \"prevButtonTitle\", i18n_10, \"nextButtonTitle\", i18n_12, \"parentViewButtonTitle\", i18n_14], [3, \"activeView\", \"currentDate\", \"size\", \"min\", \"max\", \"id\", \"rangeLength\", \"titleTemplateRef\", \"headerTemplateRef\", \"isPrevDisabled\", \"isNextDisabled\", \"showNavigationButtons\", \"orientation\", \"todayButtonClick\", \"prevButtonClick\", \"nextButtonClick\", 4, \"ngIf\"], [3, \"showOtherMonthDays\", \"allowReverse\", \"id\", \"activeView\", \"activeDescendant\", \"isActive\", \"cellTemplateRef\", \"weekNumberTemplateRef\", \"cellUID\", \"weekDaysFormat\", \"views\", \"min\", \"max\", \"focusedDate\", \"animateNavigation\", \"showViewHeader\", \"weekNumber\", \"activeRangeEnd\", \"selectionRange\", \"selectedDates\", \"orientation\", \"tabIndex\", \"disabled\", \"cellClick\", \"weekNumberCellClick\", \"cellEnter\", \"cellLeave\", \"activeDateChange\", \"focusCalendar\", \"blurCalendar\"], [3, \"footerTemplateRef\", \"activeViewValue\", \"currentDate\", 4, \"ngIf\"], [3, \"activeView\", \"currentDate\", \"size\", \"min\", \"max\", \"id\", \"rangeLength\", \"titleTemplateRef\", \"headerTemplateRef\", \"isPrevDisabled\", \"isNextDisabled\", \"showNavigationButtons\", \"orientation\", \"todayButtonClick\", \"prevButtonClick\", \"nextButtonClick\"], [3, \"footerTemplateRef\", \"activeViewValue\", \"currentDate\"]];\n    },\n    template: function _class26_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n        i0.ɵɵtemplate(1, _class26_kendo_calendar_header_1_Template, 1, 13, \"kendo-calendar-header\", 1);\n        i0.ɵɵelementStart(2, \"kendo-calendar-horizontal\", 2);\n        i0.ɵɵlistener(\"cellClick\", function _class26_Template_kendo_calendar_horizontal_cellClick_2_listener($event) {\n          return ctx.handleCellClick($event);\n        })(\"weekNumberCellClick\", function _class26_Template_kendo_calendar_horizontal_weekNumberCellClick_2_listener($event) {\n          return ctx.handleWeekNumberClick($event);\n        })(\"cellEnter\", function _class26_Template_kendo_calendar_horizontal_cellEnter_2_listener($event) {\n          return ctx.onCellEnter(ctx.cellEnter, $event);\n        })(\"cellLeave\", function _class26_Template_kendo_calendar_horizontal_cellLeave_2_listener($event) {\n          return ctx.emitCellEvent(ctx.cellLeave, $event);\n        })(\"activeDateChange\", function _class26_Template_kendo_calendar_horizontal_activeDateChange_2_listener($event) {\n          return ctx.setActiveDate($event);\n        })(\"focusCalendar\", function _class26_Template_kendo_calendar_horizontal_focusCalendar_2_listener() {\n          return ctx.handleFocus();\n        })(\"blurCalendar\", function _class26_Template_kendo_calendar_horizontal_blurCalendar_2_listener($event) {\n          return ctx.handleFocusout($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, _class26_kendo_calendar_footer_3_Template, 1, 3, \"kendo-calendar-footer\", 3);\n      }\n      if (rf & 2) {\n        let tmp_7_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showCalendarHeader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"showOtherMonthDays\", ctx.showOtherMonthDays)(\"allowReverse\", ctx.allowReverse)(\"id\", ctx.calendarHeaderIdLabel)(\"activeView\", ctx.activeViewEnum)(\"activeDescendant\", ctx.ariaActivedescendant)(\"isActive\", ctx.isActive || ctx.isHovered)(\"cellTemplateRef\", (tmp_7_0 = ctx.activeCellTemplate()) == null ? null : tmp_7_0.templateRef)(\"weekNumberTemplateRef\", ctx.weekNumberTemplateRef == null ? null : ctx.weekNumberTemplateRef.templateRef)(\"cellUID\", ctx.cellUID)(\"weekDaysFormat\", ctx.weekDaysFormat)(\"views\", ctx.views)(\"min\", ctx.min)(\"max\", ctx.max)(\"focusedDate\", ctx.focusedDate)(\"animateNavigation\", ctx.animateNavigation)(\"showViewHeader\", ctx.showViewHeader)(\"weekNumber\", ctx.weekNumber)(\"activeRangeEnd\", ctx.activeRangeEnd)(\"selectionRange\", ctx.selectionRange)(\"selectedDates\", ctx.selectedDates)(\"orientation\", ctx.orientation)(\"tabIndex\", ctx.tabIndex)(\"disabled\", ctx.disabled);\n        i0.ɵɵattribute(\"aria-labelledby\", ctx.multiViewCalendarHeaderIdLabel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.footer);\n      }\n    },\n    dependencies: [MultiViewCalendarLocalizedMessagesDirective, NgIf, HeaderComponent, HorizontalViewListComponent, FooterComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return MultiViewCalendarComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst div$1 = domContainerFactory('div');\nconst ul$1 = domContainerFactory('ul');\nconst li$1 = domContainerFactory('li');\nconst td = domContainerFactory('td');\nconst th = domContainerFactory('th');\nconst tr = domContainerFactory('tr');\nconst tbody = domContainerFactory('tbody');\nconst thead = domContainerFactory('thead');\nconst table = domContainerFactory('table');\nconst monthHeader = () => div$1(`\n            <span class=\"k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-calendar-title\">March 2017</span>\n            <span class=\"k-spacer\"></span>\n            <span class=\"k-calendar-nav\">\n                <button class=\"k-calendar-nav-today k-button k-button-md k-button-flat k-button-flat-base k-rounded-md\">TODAY</button>\n            </span>\n        `, 'k-calendar-header');\nconst monthWeekHeader = () => table([thead([tr([th('MO', 'k-calendar-th')], 'k-calendar-tr')], 'k-calendar-thead')], 'k-calendar-weekdays k-calendar-table');\nconst repeat = (count, mapper) => new Array(count).fill('1').map(mapper);\nconst content = (rows, cells = 1) => table([tbody([tr([th('1', 'k-calendar-th')], 'k-calendar-tr')].concat(repeat(rows, () => tr(repeat(cells, c => td(`<span class=\"k-link\">${c}</span>`, 'k-calendar-td')), 'k-calendar-tr'))), 'k-calendar-tbody')], 'k-calendar-table');\nconst scrollable$1 = children => div$1(children, 'k-flex k-content k-scrollable');\nconst view = (contentElement, className, renderWeekHeader) => div$1([monthHeader(), renderWeekHeader ? monthWeekHeader() : null, scrollable$1([contentElement, contentElement])], className, {\n  left: '-10000px',\n  position: 'absolute'\n});\nconst navigationList = (() => {\n  let navElement;\n  return () => {\n    if (!isDocumentAvailable) {\n      return null;\n    }\n    if (!navElement) {\n      navElement = div$1([scrollable$1([ul$1([li$1('<span>FEB</span>')])])], 'k-calendar-navigation', {\n        left: '0px',\n        position: 'absolute'\n      });\n    }\n    return navElement;\n  };\n})();\nconst viewFactory = ({\n  cells,\n  rows\n}, className, renderWeekHeader) => {\n  let viewElement;\n  return () => {\n    if (!isDocumentAvailable) {\n      return null;\n    }\n    if (!viewElement) {\n      viewElement = view(content(rows, cells), className, renderWeekHeader);\n    }\n    return viewElement;\n  };\n};\nconst getScrollable = element => element.querySelector('.k-scrollable');\nconst horizontal = element => {\n  const scrollableElement = getScrollable(element);\n  scrollableElement.classList.add('k-scrollable-horizontal');\n  return element;\n};\nconst monthView = viewFactory({\n  cells: 7,\n  rows: 6\n}, 'k-vstack k-calendar-view k-calendar-monthview', true);\nconst yearView = viewFactory({\n  cells: 4,\n  rows: 3\n}, 'k-vstack k-calendar-view k-calendar-yearview', false);\nconst decadeView = viewFactory({\n  cells: 4,\n  rows: 3\n}, 'k-vstack k-calendar-view k-calendar-decadeview', false);\nconst horzMonthView = () => horizontal(monthView());\nconst horzYearView = () => horizontal(yearView());\nconst horzDecadeView = () => horizontal(decadeView());\nconst height = element => parseFloat(window.getComputedStyle(element).height) || element.offsetHeight;\nconst width = element => {\n  const styles = window.getComputedStyle(element);\n  const computed = parseFloat(styles.width) + parseFloat(styles.paddingLeft) + parseFloat(styles.paddingRight);\n  return computed || element.offsetWidth;\n};\nconst getBody = element => element.querySelector('tbody');\n/**\n * @hidden\n */\nlet CalendarDOMService = /*#__PURE__*/(() => {\n  var _class27;\n  class CalendarDOMService {\n    constructor() {\n      //heights\n      _defineProperty(this, \"calendarHeight\", void 0);\n      _defineProperty(this, \"headerHeight\", void 0);\n      _defineProperty(this, \"monthViewHeight\", void 0);\n      _defineProperty(this, \"yearViewHeight\", void 0);\n      _defineProperty(this, \"decadeViewHeight\", void 0);\n      _defineProperty(this, \"centuryViewHeight\", void 0);\n      _defineProperty(this, \"navigationItemHeight\", void 0);\n      _defineProperty(this, \"scrollableContentHeight\", void 0);\n      _defineProperty(this, \"scrollableYearContentHeight\", void 0);\n      //widths\n      _defineProperty(this, \"calendarWidth\", void 0);\n      _defineProperty(this, \"monthViewWidth\", void 0);\n      _defineProperty(this, \"yearViewWidth\", void 0);\n      _defineProperty(this, \"decadeViewWidth\", void 0);\n      _defineProperty(this, \"centuryViewWidth\", void 0);\n      _defineProperty(this, \"scrollableContentWidth\", void 0);\n      _defineProperty(this, \"hostContainer\", void 0);\n    }\n    ensureHeights() {\n      if (this.calendarHeight !== undefined) {\n        return;\n      }\n      this.calculateHeights();\n    }\n    calculateHeights(container) {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n      this.hostContainer = container;\n      this.batch(monthView(), contentElement => {\n        const viewElement = getBody(contentElement);\n        this.calendarHeight = height(contentElement);\n        this.monthViewHeight = height(viewElement);\n        this.headerHeight = height(viewElement.children[0]);\n        this.scrollableContentHeight = height(getScrollable(contentElement));\n      });\n      this.batch(horzMonthView(), contentElement => {\n        const viewElement = getBody(contentElement);\n        this.calendarWidth = width(contentElement);\n        this.monthViewWidth = width(viewElement);\n        this.scrollableContentWidth = width(getScrollable(contentElement));\n      });\n      this.batch(yearView(), contentElement => {\n        this.yearViewHeight = height(getBody(contentElement));\n        this.scrollableYearContentHeight = height(getScrollable(contentElement));\n      });\n      this.batch(horzYearView(), contentElement => {\n        this.yearViewWidth = width(getBody(contentElement));\n      });\n      this.batch(decadeView(), contentElement => {\n        this.decadeViewHeight = height(getBody(contentElement));\n        this.centuryViewHeight = this.decadeViewHeight;\n      });\n      this.batch(horzDecadeView(), contentElement => {\n        this.decadeViewWidth = width(getBody(contentElement));\n        this.centuryViewWidth = this.decadeViewWidth;\n      });\n      this.batch(navigationList(), contentElement => {\n        this.navigationItemHeight = height(contentElement.querySelector('li'));\n      });\n    }\n    viewHeight(viewType) {\n      return this.viewDimension(viewType, 'height');\n    }\n    viewWidth(viewType) {\n      return this.viewDimension(viewType, 'width');\n    }\n    viewDimension(viewType, dimension) {\n      const viewProp = dimension === 'height' ? 'ViewHeight' : 'ViewWidth';\n      switch (viewType) {\n        case CalendarViewEnum.month:\n          return this[`month${viewProp}`];\n        case CalendarViewEnum.year:\n          return this[`year${viewProp}`];\n        case CalendarViewEnum.decade:\n          return this[`decade${viewProp}`];\n        case CalendarViewEnum.century:\n          return this[`century${viewProp}`];\n        default:\n          return 1;\n      }\n    }\n    batch(contentElement, action) {\n      if (!isPresent(this.hostContainer)) {\n        return;\n      }\n      const hostClone = this.hostContainer.cloneNode();\n      document.body.appendChild(hostClone);\n      try {\n        const appendedContent = hostClone.appendChild(contentElement);\n        action(appendedContent);\n      } finally {\n        document.body.removeChild(hostClone);\n      }\n    }\n  }\n  _class27 = CalendarDOMService;\n  _defineProperty(CalendarDOMService, \"\\u0275fac\", function _class27_Factory(t) {\n    return new (t || _class27)();\n  });\n  _defineProperty(CalendarDOMService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class27,\n    factory: _class27.ɵfac,\n    providedIn: 'root'\n  }));\n  return CalendarDOMService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nconst update = (arr, idx, value) => [...arr.slice(0, idx + 1), ...arr.slice(idx + 1).map(x => x + value)];\n/**\n * @hidden\n */\nclass RowHeightService {\n  constructor(total = 0, rowHeight, detailRowHeight) {\n    _defineProperty(this, \"total\", void 0);\n    _defineProperty(this, \"rowHeight\", void 0);\n    _defineProperty(this, \"detailRowHeight\", void 0);\n    _defineProperty(this, \"offsets\", []);\n    _defineProperty(this, \"heights\", []);\n    this.total = total;\n    this.rowHeight = rowHeight;\n    this.detailRowHeight = detailRowHeight;\n    let agg = 0;\n    for (let idx = 0; idx < total; idx++) {\n      this.offsets.push(agg);\n      agg += rowHeight;\n      this.heights.push(rowHeight);\n    }\n  }\n  height(rowIndex) {\n    return this.heights[rowIndex];\n  }\n  expandDetail(rowIndex) {\n    if (this.height(rowIndex) === this.rowHeight) {\n      this.updateRowHeight(rowIndex, this.detailRowHeight);\n    }\n  }\n  collapseDetail(rowIndex) {\n    if (this.height(rowIndex) > this.rowHeight) {\n      this.updateRowHeight(rowIndex, this.detailRowHeight * -1);\n    }\n  }\n  index(position) {\n    if (position < 0) {\n      return undefined;\n    }\n    const result = this.offsets.reduce((prev, current, idx) => {\n      if (prev !== undefined) {\n        return prev;\n      } else if (current === position) {\n        return idx;\n      } else if (current > position) {\n        return idx - 1;\n      }\n      return undefined;\n    }, undefined);\n    return result === undefined ? this.total - 1 : result;\n  }\n  offset(rowIndex) {\n    return this.offsets[rowIndex];\n  }\n  totalHeight() {\n    return this.heights.reduce((prev, curr) => prev + curr, 0);\n  }\n  updateRowHeight(rowIndex, value) {\n    this.heights[rowIndex] += value;\n    this.offsets = update(this.offsets, rowIndex, value);\n  }\n}\nconst normalize = x => Math.max(x, 0);\n/**\n * @hidden\n */\nclass ScrollAction {\n  constructor(offset) {\n    _defineProperty(this, \"offset\", void 0);\n    this.offset = offset;\n  }\n}\n/**\n * @hidden\n */\nclass PageAction {\n  constructor(skip) {\n    _defineProperty(this, \"skip\", void 0);\n    this.skip = skip;\n  }\n}\n/**\n * @hidden\n */\nclass ScrollerService {\n  constructor(scrollObservable) {\n    _defineProperty(this, \"scrollObservable\", void 0);\n    _defineProperty(this, \"direction\", void 0);\n    _defineProperty(this, \"firstLoaded\", 0);\n    _defineProperty(this, \"lastLoaded\", void 0);\n    _defineProperty(this, \"lastScroll\", void 0);\n    _defineProperty(this, \"take\", void 0);\n    _defineProperty(this, \"total\", void 0);\n    _defineProperty(this, \"rowHeightService\", void 0);\n    _defineProperty(this, \"scrollSubscription\", void 0);\n    _defineProperty(this, \"subscription\", void 0);\n    _defineProperty(this, \"bottomOffset\", 0);\n    _defineProperty(this, \"topOffset\", 0);\n    this.scrollObservable = scrollObservable;\n  }\n  create(rowHeightService, skip, take, total, topOffset = 0, bottomOffset = 0, direction = 'vertical') {\n    this.rowHeightService = rowHeightService;\n    this.firstLoaded = skip;\n    this.lastLoaded = skip + take;\n    this.take = take;\n    this.total = total;\n    this.lastScroll = 0;\n    this.topOffset = topOffset;\n    this.bottomOffset = bottomOffset;\n    this.direction = direction;\n    const subject = new ReplaySubject(2);\n    const offsetBufferRows = this.rowsForHeight(topOffset);\n    const skipWithOffset = normalize(skip - offsetBufferRows);\n    subject.next(new ScrollAction(this.rowOffset(skipWithOffset)));\n    if (offsetBufferRows) {\n      subject.next(new PageAction(skipWithOffset));\n    }\n    this.subscription = new Observable(observer => {\n      this.unsubscribe();\n      this.scrollSubscription = this.scrollObservable.subscribe(x => this.onScroll(x, observer));\n    }).subscribe(x => subject.next(x));\n    return subject;\n  }\n  destroy() {\n    this.unsubscribe();\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  onScroll({\n    scrollLeft,\n    scrollTop,\n    offsetHeight,\n    offsetWidth\n  }, observer) {\n    const scrollPosition = this.direction === 'vertical' ? scrollTop : scrollLeft;\n    const offsetSize = this.direction === 'vertical' ? offsetHeight : offsetWidth;\n    if (this.lastScroll === scrollPosition) {\n      return;\n    }\n    const up = this.lastScroll >= scrollPosition;\n    this.lastScroll = scrollPosition;\n    const firstItemIndex = this.rowHeightService.index(normalize(scrollPosition - this.topOffset));\n    const lastItemIndex = this.rowHeightService.index(normalize(scrollPosition + offsetSize - this.bottomOffset));\n    if (!up && lastItemIndex >= this.lastLoaded && this.lastLoaded < this.total) {\n      this.firstLoaded = firstItemIndex;\n      observer.next(new ScrollAction(this.rowOffset(firstItemIndex)));\n      this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n      observer.next(new PageAction(this.firstLoaded));\n    }\n    if (up && firstItemIndex <= this.firstLoaded) {\n      const nonVisibleBuffer = Math.floor(this.take * 0.3);\n      this.firstLoaded = normalize(firstItemIndex - nonVisibleBuffer);\n      observer.next(new ScrollAction(this.rowOffset(this.firstLoaded)));\n      this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n      observer.next(new PageAction(this.firstLoaded));\n    }\n  }\n  rowOffset(index) {\n    return this.rowHeightService.offset(index) + this.topOffset;\n  }\n  rowsForHeight(height) {\n    return Math.ceil(height / this.rowHeightService.height(0));\n  }\n  unsubscribe() {\n    if (this.scrollSubscription) {\n      this.scrollSubscription.unsubscribe();\n      this.scrollSubscription = null;\n    }\n  }\n}\n\n/* eslint-disable @angular-eslint/component-selector */\n/**\n * @hidden\n */\nconst SCROLLER_FACTORY_TOKEN = new InjectionToken('dateinputs-scroll-service-factory');\n/**\n * @hidden\n */\nfunction DEFAULT_SCROLLER_FACTORY(observable) {\n  return new ScrollerService(observable);\n}\n/**\n * @hidden\n */\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"Backward\"] = 0] = \"Backward\";\n  ScrollDirection[ScrollDirection[\"Forward\"] = 1] = \"Forward\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst FRAME_DURATION = 17;\nconst scrollModifiers = {\n  [ScrollDirection.Forward]: step => value => value + step,\n  [ScrollDirection.Backward]: step => value => value - step\n};\nconst scrollNormalizers = {\n  [ScrollDirection.Forward]: end => value => Math.min(value, end),\n  [ScrollDirection.Backward]: end => value => Math.max(value, end)\n};\nconst scrollValidators = {\n  [ScrollDirection.Forward]: end => start => start < end,\n  [ScrollDirection.Backward]: end => start => start > end\n};\nconst differenceToScroll = (scrollTop, staticOffset, maxScrollDifference) => {\n  return Math.min(Math.abs(staticOffset - scrollTop), maxScrollDifference);\n};\n/**\n * @hidden\n */\nlet VirtualizationComponent = /*#__PURE__*/(() => {\n  var _class32;\n  class VirtualizationComponent {\n    get horizontalClass() {\n      return this.direction === 'horizontal';\n    }\n    get totalVertexLength() {\n      const value = `${this.totalSize}px`;\n      return this.direction === 'vertical' ? {\n        height: value\n      } : {\n        width: value\n      };\n    }\n    get containerOffsetSize() {\n      return this.getContainerProperty(this.direction === 'vertical' ? 'offsetHeight' : 'offsetWidth');\n    }\n    get containerScrollSize() {\n      return this.getContainerProperty(this.direction === 'vertical' ? 'scrollHeight' : 'scrollWidth');\n    }\n    get containerScrollPosition() {\n      return this.getContainerProperty(this.direction === 'vertical' ? 'scrollTop' : 'scrollLeft');\n    }\n    constructor(scrollerFactory, container, renderer, zone, scrollBarWidthService) {\n      _defineProperty(this, \"container\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"zone\", void 0);\n      _defineProperty(this, \"scrollBarWidthService\", void 0);\n      _defineProperty(this, \"direction\", 'vertical');\n      _defineProperty(this, \"itemHeight\", 1);\n      _defineProperty(this, \"itemWidth\", 1);\n      _defineProperty(this, \"topOffset\", 0);\n      _defineProperty(this, \"bottomOffset\", 0);\n      _defineProperty(this, \"maxScrollDifference\", 100);\n      _defineProperty(this, \"scrollOffsetSize\", 0);\n      _defineProperty(this, \"scrollDuration\", 150);\n      _defineProperty(this, \"skip\", void 0);\n      _defineProperty(this, \"take\", void 0);\n      _defineProperty(this, \"total\", void 0);\n      _defineProperty(this, \"activeIndexChange\", new EventEmitter());\n      _defineProperty(this, \"pageChange\", new EventEmitter());\n      _defineProperty(this, \"scrollChange\", new EventEmitter());\n      _defineProperty(this, \"wrapperClasses\", true);\n      _defineProperty(this, \"totalSize\", void 0);\n      _defineProperty(this, \"lastActiveIndex\", void 0);\n      _defineProperty(this, \"resolvedPromise\", Promise.resolve(null));\n      _defineProperty(this, \"scroller\", void 0);\n      _defineProperty(this, \"rowHeightService\", void 0);\n      _defineProperty(this, \"dispatcher\", new Subject());\n      _defineProperty(this, \"scrollSubscription\", void 0);\n      _defineProperty(this, \"containerScrollSubscription\", void 0);\n      _defineProperty(this, \"animationSubscription\", void 0);\n      this.container = container;\n      this.renderer = renderer;\n      this.zone = zone;\n      this.scrollBarWidthService = scrollBarWidthService;\n      this.scroller = scrollerFactory(this.dispatcher);\n    }\n    ngOnChanges(changes) {\n      if (changes.direction || changes.take || changes.total) {\n        this.initServices();\n        this.totalSize = this.rowHeightService.totalHeight() + this.bottomOffset;\n      }\n    }\n    ngOnInit() {\n      if (!this.rowHeightService) {\n        this.rowHeightService = this.createRowHeightService();\n      }\n    }\n    ngAfterViewInit() {\n      this.zone.runOutsideAngular(() => {\n        this.containerScrollSubscription = this.scroll$().pipe(map(event => event.target)).subscribe(t => {\n          this.dispatcher.next(t);\n          this.emitActiveIndex();\n        });\n      });\n    }\n    ngOnDestroy() {\n      if (this.containerScrollSubscription) {\n        this.containerScrollSubscription.unsubscribe();\n      }\n      if (this.scrollSubscription) {\n        this.scrollSubscription.unsubscribe();\n      }\n      if (this.animationSubscription) {\n        this.animationSubscription.unsubscribe();\n      }\n    }\n    getContainerProperty(propertyName) {\n      return this.container.nativeElement[propertyName];\n    }\n    activeIndex() {\n      return this.itemIndex(Math.ceil(this.containerScrollPosition)); //handle subpixeling\n    }\n\n    itemIndex(offset) {\n      return this.rowHeightService.index(offset);\n    }\n    itemOffset(index) {\n      return this.rowHeightService.offset(index);\n    }\n    isIndexVisible(index) {\n      if (!this.rowHeightService) {\n        return false;\n      }\n      const containerTop = this.containerScrollPosition;\n      const containerBottom = containerTop + this.containerOffsetSize;\n      const top = this.rowHeightService.offset(index);\n      const bottom = top + this.rowHeightService.height(index);\n      return top >= containerTop && bottom <= containerBottom;\n    }\n    isListScrolled(index) {\n      return this.containerScrollPosition !== this.rowHeightService.offset(index);\n    }\n    scrollTo(value) {\n      const scrollProperty = this.direction === \"vertical\" ? 'scrollTop' : 'scrollLeft';\n      this.renderer.setProperty(this.container.nativeElement, scrollProperty, value);\n    }\n    scrollToIndex(index) {\n      //XXX: scrolling with tick is required to prevent list jump in Chrome.\n      //Original issue: focus first day in the month and press LEFT arrow.\n      //Notice how the view jumps on every day change.\n      //\n      this.zone.runOutsideAngular(() => {\n        this.resolvedPromise.then(() => {\n          this.scrollTo(this.rowHeightService.offset(index));\n        });\n      });\n    }\n    scrollToBottom() {\n      this.scrollTo(this.totalSize);\n    }\n    animateToIndex(index) {\n      if (this.animationSubscription) {\n        this.animationSubscription.unsubscribe();\n      }\n      const indexOffset = this.rowHeightService.offset(index);\n      const direction = this.getContainerScrollDirection(indexOffset);\n      const {\n        start,\n        end\n      } = this.scrollRange(indexOffset, direction);\n      if (start === end) {\n        return;\n      }\n      const step = this.scrollStep(start, end);\n      const modifyScroll = scrollModifiers[direction](step);\n      const normalizeScroll = scrollNormalizers[direction](end);\n      const isScrollValid = scrollValidators[direction](modifyScroll(end));\n      this.zone.runOutsideAngular(() => {\n        this.animationSubscription = combineLatest(of(start), interval(0, animationFrameScheduler)).pipe(map(stream => stream[0]), scan(modifyScroll), takeWhile(isScrollValid), map(normalizeScroll)).subscribe(x => this.scrollTo(x));\n      });\n    }\n    scrollRange(indexOffset, direction) {\n      const containerScroll = this.containerScrollPosition;\n      if (parseInt(indexOffset, 10) === parseInt(containerScroll, 10)) {\n        return {\n          start: indexOffset,\n          end: indexOffset\n        };\n      }\n      const maxScroll = this.containerMaxScroll();\n      const sign = direction === ScrollDirection.Backward ? 1 : -1;\n      const difference = differenceToScroll(containerScroll, indexOffset, this.maxScrollDifference);\n      const end = Math.min(indexOffset, maxScroll);\n      const start = Math.min(Math.max(end + sign * difference, 0), maxScroll);\n      return {\n        start,\n        end\n      };\n    }\n    scrollStep(start, end) {\n      return Math.abs(end - start) / (this.scrollDuration / FRAME_DURATION);\n    }\n    scroll$() {\n      return isDocumentAvailable() ? fromEvent(this.container.nativeElement, 'scroll') : EMPTY;\n    }\n    initServices() {\n      this.rowHeightService = this.createRowHeightService();\n      if (this.scrollSubscription) {\n        this.scrollSubscription.unsubscribe();\n      }\n      this.scrollSubscription = this.scroller.create(this.rowHeightService, this.skip, this.take, this.total, this.topOffset, this.scrollOffsetSize, this.direction).subscribe(x => {\n        if (x instanceof PageAction) {\n          this.pageChange.emit(x);\n        } else {\n          this.scrollChange.emit(x);\n        }\n      });\n    }\n    createRowHeightService() {\n      const dimension = this.direction === 'vertical' ? this.itemHeight : this.itemWidth;\n      return new RowHeightService(this.total, dimension, 0);\n    }\n    emitActiveIndex() {\n      const index = this.rowHeightService.index(this.containerScrollPosition - this.topOffset);\n      if (this.lastActiveIndex !== index) {\n        this.lastActiveIndex = index;\n        this.activeIndexChange.emit(index);\n      }\n    }\n    containerMaxScroll() {\n      return this.containerScrollSize - this.containerOffsetSize;\n    }\n    getContainerScrollDirection(indexOffset) {\n      return indexOffset < this.containerScrollPosition ? ScrollDirection.Backward : ScrollDirection.Forward;\n    }\n  }\n  _class32 = VirtualizationComponent;\n  _defineProperty(VirtualizationComponent, \"\\u0275fac\", function _class32_Factory(t) {\n    return new (t || _class32)(i0.ɵɵdirectiveInject(SCROLLER_FACTORY_TOKEN), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i19.ScrollbarWidthService));\n  });\n  _defineProperty(VirtualizationComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class32,\n    selectors: [[\"kendo-virtualization\"]],\n    hostVars: 8,\n    hostBindings: function _class32_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-flex\", ctx.wrapperClasses)(\"k-content\", ctx.wrapperClasses)(\"k-scrollable\", ctx.wrapperClasses)(\"k-scrollable-horizontal\", ctx.horizontalClass);\n      }\n    },\n    inputs: {\n      direction: \"direction\",\n      itemHeight: \"itemHeight\",\n      itemWidth: \"itemWidth\",\n      topOffset: \"topOffset\",\n      bottomOffset: \"bottomOffset\",\n      maxScrollDifference: \"maxScrollDifference\",\n      scrollOffsetSize: \"scrollOffsetSize\",\n      scrollDuration: \"scrollDuration\",\n      skip: \"skip\",\n      take: \"take\",\n      total: \"total\"\n    },\n    outputs: {\n      activeIndexChange: \"activeIndexChange\",\n      pageChange: \"pageChange\",\n      scrollChange: \"scrollChange\"\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: SCROLLER_FACTORY_TOKEN,\n      useValue: DEFAULT_SCROLLER_FACTORY\n    }]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c16,\n    decls: 2,\n    vars: 3,\n    consts: [[1, \"k-scrollable-placeholder\", 3, \"ngStyle\"]],\n    template: function _class32_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵelement(1, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"k-scrollable-horizontal-placeholder\", ctx.direction === \"horizontal\");\n        i0.ɵɵproperty(\"ngStyle\", ctx.totalVertexLength);\n      }\n    },\n    dependencies: [NgStyle],\n    encapsulation: 2\n  }));\n  return VirtualizationComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/* eslint-disable @angular-eslint/component-selector */\nconst ITEMS_COUNT = 30;\n/**\n * @hidden\n */\nlet NavigationComponent = /*#__PURE__*/(() => {\n  var _class33;\n  class NavigationComponent {\n    get getComponentClass() {\n      return true;\n    }\n    constructor(bus, dom, intl, cdr, renderer) {\n      _defineProperty(this, \"bus\", void 0);\n      _defineProperty(this, \"dom\", void 0);\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"activeView\", void 0);\n      _defineProperty(this, \"min\", new Date(MIN_DATE));\n      _defineProperty(this, \"max\", new Date(MAX_DATE));\n      _defineProperty(this, \"focusedDate\", new Date());\n      _defineProperty(this, \"templateRef\", void 0);\n      _defineProperty(this, \"valueChange\", new EventEmitter());\n      _defineProperty(this, \"pageChange\", new EventEmitter());\n      _defineProperty(this, \"virtualization\", void 0);\n      _defineProperty(this, \"list\", void 0);\n      _defineProperty(this, \"activeViewValue\", void 0);\n      _defineProperty(this, \"service\", void 0);\n      _defineProperty(this, \"dates\", []);\n      _defineProperty(this, \"style\", void 0);\n      _defineProperty(this, \"take\", ITEMS_COUNT);\n      _defineProperty(this, \"skip\", void 0);\n      _defineProperty(this, \"total\", void 0);\n      _defineProperty(this, \"itemHeight\", void 0);\n      _defineProperty(this, \"topOffset\", void 0);\n      _defineProperty(this, \"bottomOffset\", void 0);\n      _defineProperty(this, \"maxViewHeight\", void 0);\n      _defineProperty(this, \"indexToScroll\", -1);\n      _defineProperty(this, \"intlSubscription\", void 0);\n      this.bus = bus;\n      this.dom = dom;\n      this.intl = intl;\n      this.cdr = cdr;\n      this.renderer = renderer;\n    }\n    ngOnInit() {\n      this.dom.ensureHeights();\n      const calendarHeight = this.dom.calendarHeight;\n      this.itemHeight = this.dom.navigationItemHeight;\n      this.maxViewHeight = this.dom.monthViewHeight;\n      this.topOffset = (calendarHeight - this.itemHeight) / 2;\n      this.bottomOffset = calendarHeight - this.itemHeight;\n      this.intlSubscription = this.intl.changes.subscribe(this.intlChange.bind(this));\n    }\n    ngOnChanges(changes) {\n      this.service = this.bus.service(this.activeView);\n      if (!this.service) {\n        return;\n      }\n      this.activeViewValue = CalendarViewEnum[this.activeView];\n      const viewDate = dateInRange(this.focusedDate, this.min, this.max);\n      const total = this.service.total(this.min, this.max);\n      const totalChanged = this.total && this.total !== total;\n      this.skip = this.service.skip(viewDate, this.min);\n      this.total = total;\n      if (totalChanged || !this.service.isInArray(viewDate, this.dates)) {\n        this.dates = this.service.datesList(viewDate, this.getTake(this.skip));\n      }\n      if (!!changes.focusedDate || totalChanged) {\n        this.indexToScroll = this.service.skip(this.focusedDate, this.min);\n      }\n    }\n    ngOnDestroy() {\n      if (this.intlSubscription) {\n        this.intlSubscription.unsubscribe();\n      }\n    }\n    ngAfterViewInit() {\n      if (this.indexToScroll === -1) {\n        return;\n      }\n      this.virtualization.scrollToIndex(this.indexToScroll);\n      this.indexToScroll = -1;\n    }\n    ngAfterViewChecked() {\n      if (this.indexToScroll === -1) {\n        return;\n      }\n      this.virtualization.scrollToIndex(this.indexToScroll);\n      this.indexToScroll = -1;\n    }\n    onPageChange({\n      skip\n    }) {\n      this.dates = this.service.datesList(this.service.addToDate(this.min, skip), this.getTake(skip));\n      this.pageChange.emit();\n    }\n    scrollChange({\n      offset\n    }) {\n      const el = this.list.nativeElement;\n      const translate = `translateY(${offset}px)`;\n      this.renderer.setStyle(el, 'transform', translate);\n      this.renderer.setStyle(el, '-ms-transform', translate);\n    }\n    handleDateChange(args) {\n      const item = closestInScope(args.target, node => node.hasAttribute('data-date-index'), this.list.nativeElement);\n      if (item) {\n        const index = parseInt(item.getAttribute('data-date-index'), 10);\n        const candidate = this.dates[index];\n        this.valueChange.emit(cloneDate(candidate));\n      }\n    }\n    getTake(skip) {\n      return Math.min(this.total - skip, this.take);\n    }\n    intlChange() {\n      if (this.activeView === CalendarViewEnum.month) {\n        this.cdr.markForCheck();\n      }\n    }\n  }\n  _class33 = NavigationComponent;\n  _defineProperty(NavigationComponent, \"\\u0275fac\", function _class33_Factory(t) {\n    return new (t || _class33)(i0.ɵɵdirectiveInject(BusViewService), i0.ɵɵdirectiveInject(CalendarDOMService), i0.ɵɵdirectiveInject(i1.IntlService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  });\n  _defineProperty(NavigationComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class33,\n    selectors: [[\"kendo-calendar-navigation\"]],\n    viewQuery: function _class33_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(VirtualizationComponent, 5);\n        i0.ɵɵviewQuery(_c17, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.virtualization = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.list = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function _class33_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-calendar-navigation\", ctx.getComponentClass);\n      }\n    },\n    inputs: {\n      activeView: \"activeView\",\n      min: \"min\",\n      max: \"max\",\n      focusedDate: \"focusedDate\",\n      templateRef: \"templateRef\"\n    },\n    outputs: {\n      valueChange: \"valueChange\",\n      pageChange: \"pageChange\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 5,\n    vars: 12,\n    consts: [[1, \"k-calendar-navigation-highlight\"], [3, \"skip\", \"take\", \"total\", \"itemHeight\", \"topOffset\", \"bottomOffset\", \"maxScrollDifference\", \"pageChange\", \"scrollChange\"], [1, \"k-reset\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [\"list\", \"\"], [4, \"kFor\", \"kForOf\"], [3, \"ngIf\"], [3, \"ngIf\", \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function _class33_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"kendo-virtualization\", 1);\n        i0.ɵɵlistener(\"pageChange\", function _class33_Template_kendo_virtualization_pageChange_1_listener($event) {\n          return ctx.onPageChange($event);\n        })(\"scrollChange\", function _class33_Template_kendo_virtualization_scrollChange_1_listener($event) {\n          return ctx.scrollChange($event);\n        });\n        i0.ɵɵelementStart(2, \"ul\", 2, 3);\n        i0.ɵɵtemplate(4, _class33_li_4_Template, 4, 11, \"li\", 4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"skip\", ctx.skip)(\"take\", ctx.take)(\"total\", ctx.total)(\"itemHeight\", ctx.itemHeight)(\"topOffset\", ctx.topOffset)(\"bottomOffset\", ctx.bottomOffset)(\"maxScrollDifference\", ctx.maxViewHeight);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(10, _c5, ctx.handleDateChange))(\"scope\", ctx);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"kForOf\", ctx.dates);\n      }\n    },\n    dependencies: [VirtualizationComponent, EventsOutsideAngularDirective, KForOf, NgIf, NgTemplateOutlet],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return NavigationComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst VIEWS_COUNT = 5;\nconst isEqualMonthYear = (date1, date2) => date1 && date2 && date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth();\n/**\n * @hidden\n */\nlet ViewListComponent = /*#__PURE__*/(() => {\n  var _class34;\n  class ViewListComponent {\n    get weekNumber() {\n      return this.showWeekNumbers && this.isMonthView();\n    }\n    set weekNumber(showWeekNumbers) {\n      this.showWeekNumbers = showWeekNumbers;\n    }\n    get headerTitle() {\n      return this.headerComponent?.title;\n    }\n    get getComponentMonthClass() {\n      return this.activeView === CalendarViewEnum.month;\n    }\n    get getComponentYearClass() {\n      return this.activeView === CalendarViewEnum.year;\n    }\n    get getComponentDecadeClass() {\n      return this.activeView === CalendarViewEnum.decade;\n    }\n    get getComponentCenturyClass() {\n      return this.activeView === CalendarViewEnum.century;\n    }\n    get activeViewValue() {\n      return CalendarViewEnum[this.activeView];\n    }\n    constructor(bus, cdr, intl, dom, renderer) {\n      _defineProperty(this, \"bus\", void 0);\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"dom\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"allowReverse\", void 0);\n      _defineProperty(this, \"cellTemplateRef\", void 0);\n      _defineProperty(this, \"weekNumberTemplateRef\", void 0);\n      _defineProperty(this, \"headerTitleTemplateRef\", void 0);\n      _defineProperty(this, \"headerTemplateRef\", void 0);\n      _defineProperty(this, \"footerTemplateRef\", void 0);\n      _defineProperty(this, \"showOtherMonthDays\", void 0);\n      _defineProperty(this, \"activeView\", void 0);\n      _defineProperty(this, \"cellUID\", void 0);\n      _defineProperty(this, \"focusedDate\", void 0);\n      _defineProperty(this, \"isActive\", true);\n      _defineProperty(this, \"min\", new Date(MIN_DATE));\n      _defineProperty(this, \"max\", new Date(MAX_DATE));\n      _defineProperty(this, \"selectedDates\", []);\n      _defineProperty(this, \"tabIndex\", 0);\n      _defineProperty(this, \"disabled\", false);\n      _defineProperty(this, \"id\", void 0);\n      _defineProperty(this, \"showFooter\", false);\n      _defineProperty(this, \"weekDaysFormat\", 'short');\n      _defineProperty(this, \"activeRangeEnd\", void 0);\n      _defineProperty(this, \"selectionRange\", void 0);\n      _defineProperty(this, \"size\", void 0);\n      _defineProperty(this, \"cellEnter\", new EventEmitter());\n      _defineProperty(this, \"cellClick\", new EventEmitter());\n      _defineProperty(this, \"weekNumberCellClick\", new EventEmitter());\n      _defineProperty(this, \"activeDateChange\", new EventEmitter());\n      _defineProperty(this, \"todayButtonClick\", new EventEmitter());\n      _defineProperty(this, \"pageChange\", new EventEmitter());\n      _defineProperty(this, \"focusCalendar\", new EventEmitter());\n      _defineProperty(this, \"blurCalendar\", new EventEmitter());\n      _defineProperty(this, \"focusedCellChange\", new EventEmitter());\n      _defineProperty(this, \"virtualization\", void 0);\n      _defineProperty(this, \"headerComponent\", void 0);\n      _defineProperty(this, \"list\", void 0);\n      _defineProperty(this, \"getComponentClass\", true);\n      _defineProperty(this, \"service\", void 0);\n      _defineProperty(this, \"activeDate\", void 0);\n      _defineProperty(this, \"dates\", []);\n      _defineProperty(this, \"cols\", []);\n      _defineProperty(this, \"weekNames\", []);\n      _defineProperty(this, \"wideWeekNames\", []);\n      _defineProperty(this, \"take\", VIEWS_COUNT);\n      _defineProperty(this, \"skip\", void 0);\n      _defineProperty(this, \"total\", void 0);\n      _defineProperty(this, \"bottomOffset\", void 0);\n      _defineProperty(this, \"viewHeight\", void 0);\n      _defineProperty(this, \"viewOffset\", void 0);\n      _defineProperty(this, \"animateToIndex\", true);\n      _defineProperty(this, \"indexToScroll\", -1);\n      _defineProperty(this, \"showWeekNumbers\", void 0);\n      _defineProperty(this, \"minViewsToRender\", 1);\n      _defineProperty(this, \"intlSubscription\", void 0);\n      this.bus = bus;\n      this.cdr = cdr;\n      this.intl = intl;\n      this.dom = dom;\n      this.renderer = renderer;\n    }\n    ngOnInit() {\n      this.weekNames = this.getWeekNames(this.weekDaysFormat);\n      this.wideWeekNames = this.getWeekNames('wide');\n      this.bottomOffset = this.getBottomOffset();\n      this.viewOffset = -1 * this.dom.headerHeight;\n      this.viewHeight = this.dom.viewHeight(this.activeView);\n      this.intlSubscription = this.intl.changes.subscribe(this.intlChange.bind(this));\n    }\n    ngOnChanges(changes) {\n      this.service = this.bus.service(this.activeView);\n      if (!this.service) {\n        return;\n      }\n      this.cols = new Array(this.service.rowLength({\n        prependCell: this.weekNumber\n      })).fill('');\n      this.weekNames = hasChange(changes, 'weekNumber') && this.weekNumber ? this.getWeekNames(this.weekDaysFormat) : this.weekNames;\n      if (hasChange(changes, 'weekDaysFormat') && !hasChange(changes, 'weekNumber')) {\n        this.weekNames = this.getWeekNames(this.weekDaysFormat);\n      }\n      this.wideWeekNames = hasChange(changes, 'weekNumber') && this.weekNumber ? this.getWeekNames('wide') : this.weekNames;\n      const activeViewChanged = hasChange(changes, 'activeView');\n      const focusedDate = this.focusedDate;\n      const viewDate = dateInRange(this.service.viewDate(focusedDate, this.max, this.minViewsToRender), this.min, this.max);\n      const total = this.service.total(this.min, this.max);\n      const totalChanged = this.total && this.total !== total;\n      const generateDates = totalChanged || !this.service.isInArray(focusedDate, this.dates);\n      this.skip = this.service.skip(viewDate, this.min);\n      this.total = total;\n      this.animateToIndex = !activeViewChanged;\n      this.bottomOffset = this.getBottomOffset();\n      this.viewHeight = this.dom.viewHeight(this.activeView);\n      if (generateDates) {\n        this.dates = this.service.datesList(viewDate, this.getTake(this.skip));\n      }\n      if (!isEqualMonthYear(this.activeDate, focusedDate)) {\n        this.activeDate = cloneDate(focusedDate);\n      }\n      const updateIndex = hasChange(changes, 'focusedDate') || activeViewChanged;\n      if (generateDates || updateIndex || this.virtualization.isIndexVisible(this.skip)) {\n        this.indexToScroll = this.service.skip(focusedDate, this.min);\n      }\n    }\n    ngOnDestroy() {\n      if (this.intlSubscription) {\n        this.intlSubscription.unsubscribe();\n      }\n    }\n    ngAfterViewInit() {\n      if (this.indexToScroll === -1) {\n        return;\n      }\n      this.virtualization.scrollToIndex(this.indexToScroll);\n      this.indexToScroll = -1;\n    }\n    ngAfterViewChecked() {\n      if (this.indexToScroll === -1) {\n        return;\n      }\n      this.virtualization[this.animateToIndex ? 'animateToIndex' : 'scrollToIndex'](this.indexToScroll);\n      this.animateToIndex = true;\n      this.indexToScroll = -1;\n    }\n    onPageChange({\n      skip\n    }) {\n      this.dates = this.service.datesList(this.service.addToDate(this.min, skip), this.getTake(skip));\n      this.pageChange.emit();\n    }\n    scrollChange({\n      offset\n    }) {\n      const el = this.list.nativeElement;\n      const translate = `translateY(${offset}px)`;\n      this.renderer.setStyle(el, 'transform', translate);\n      this.renderer.setStyle(el, '-ms-transform', translate);\n    }\n    setActiveDate(index) {\n      const candidate = this.service.addToDate(this.min, index);\n      this.activeDate = candidate;\n      this.activeDateChange.emit(candidate);\n      this.cdr.detectChanges();\n    }\n    isMonthView() {\n      return this.activeView === CalendarViewEnum.month;\n    }\n    isScrolled() {\n      return this.virtualization.isListScrolled(this.service.skip(this.focusedDate, this.min));\n    }\n    getTabIndex() {\n      return this.disabled ? null : this.tabIndex;\n    }\n    getBottomOffset() {\n      return this.getScrollableHeight() - this.dom.viewHeight(this.activeView);\n    }\n    getScrollableHeight() {\n      return this.activeView === CalendarViewEnum.month ? this.dom.scrollableContentHeight : this.dom.scrollableYearContentHeight;\n    }\n    getTake(skip) {\n      return Math.min(this.total - skip, this.take);\n    }\n    getWeekNames(nameType) {\n      const weekNames = shiftWeekNames(this.intl.dateFormatNames({\n        nameType: nameType,\n        type: 'days'\n      }), this.intl.firstDay());\n      return this.weekNumber ? [''].concat(weekNames) : weekNames;\n    }\n    intlChange() {\n      this.weekNames = this.getWeekNames(this.weekDaysFormat);\n      this.wideWeekNames = this.getWeekNames('wide');\n      if (this.isMonthView()) {\n        this.cdr.markForCheck();\n      }\n    }\n  }\n  _class34 = ViewListComponent;\n  _defineProperty(ViewListComponent, \"\\u0275fac\", function _class34_Factory(t) {\n    return new (t || _class34)(i0.ɵɵdirectiveInject(BusViewService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.IntlService), i0.ɵɵdirectiveInject(CalendarDOMService), i0.ɵɵdirectiveInject(i0.Renderer2));\n  });\n  _defineProperty(ViewListComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class34,\n    selectors: [[\"kendo-calendar-viewlist\"]],\n    viewQuery: function _class34_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(VirtualizationComponent, 5);\n        i0.ɵɵviewQuery(HeaderComponent, 5);\n        i0.ɵɵviewQuery(_c17, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.virtualization = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.list = _t.first);\n      }\n    },\n    hostVars: 12,\n    hostBindings: function _class34_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-vstack\", ctx.getComponentClass)(\"k-calendar-view\", ctx.getComponentClass)(\"k-calendar-monthview\", ctx.getComponentMonthClass)(\"k-calendar-yearview\", ctx.getComponentYearClass)(\"k-calendar-decadeview\", ctx.getComponentDecadeClass)(\"k-calendar-centuryview\", ctx.getComponentCenturyClass);\n      }\n    },\n    inputs: {\n      allowReverse: \"allowReverse\",\n      cellTemplateRef: \"cellTemplateRef\",\n      weekNumberTemplateRef: \"weekNumberTemplateRef\",\n      headerTitleTemplateRef: \"headerTitleTemplateRef\",\n      headerTemplateRef: \"headerTemplateRef\",\n      footerTemplateRef: \"footerTemplateRef\",\n      showOtherMonthDays: \"showOtherMonthDays\",\n      activeView: \"activeView\",\n      cellUID: \"cellUID\",\n      focusedDate: \"focusedDate\",\n      isActive: \"isActive\",\n      min: \"min\",\n      max: \"max\",\n      selectedDates: \"selectedDates\",\n      tabIndex: \"tabIndex\",\n      disabled: \"disabled\",\n      id: \"id\",\n      showFooter: \"showFooter\",\n      weekDaysFormat: \"weekDaysFormat\",\n      activeRangeEnd: \"activeRangeEnd\",\n      selectionRange: \"selectionRange\",\n      size: \"size\",\n      weekNumber: \"weekNumber\"\n    },\n    outputs: {\n      cellEnter: \"cellEnter\",\n      cellClick: \"cellClick\",\n      weekNumberCellClick: \"weekNumberCellClick\",\n      activeDateChange: \"activeDateChange\",\n      todayButtonClick: \"todayButtonClick\",\n      pageChange: \"pageChange\",\n      focusCalendar: \"focusCalendar\",\n      blurCalendar: \"blurCalendar\",\n      focusedCellChange: \"focusedCellChange\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 9,\n    vars: 23,\n    consts: [[3, \"currentDate\", \"size\", \"min\", \"max\", \"id\", \"activeView\", \"titleTemplateRef\", \"headerTemplateRef\", \"todayButtonClick\"], [\"class\", \"k-calendar-weekdays k-calendar-table\", 3, \"table-layout\", 4, \"ngIf\"], [3, \"tabindex\", \"skip\", \"take\", \"total\", \"itemHeight\", \"topOffset\", \"bottomOffset\", \"scrollOffsetSize\", \"maxScrollDifference\", \"pageChange\", \"scrollChange\", \"activeIndexChange\"], [\"role\", \"grid\", 1, \"k-calendar-table\", 3, \"focus\", \"blur\"], [\"list\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"k-calendar-tbody\", \"kendoCalendarView\", \"\", \"role\", \"rowgroup\", 3, \"allowReverse\", \"activeRangeEnd\", \"selectionRange\", \"showOtherMonthDays\", \"headerTitle\", \"activeView\", \"isActive\", \"min\", \"max\", \"cellUID\", \"focusedDate\", \"selectedDates\", \"weekNumber\", \"templateRef\", \"weekNumberTemplateRef\", \"viewDate\", \"cellClick\", \"weekNumberCellClick\", \"focusedCellId\", \"cellEnter\", 4, \"kFor\", \"kForOf\"], [3, \"footerTemplateRef\", \"activeViewValue\", \"currentDate\", 4, \"ngIf\"], [1, \"k-calendar-weekdays\", \"k-calendar-table\"], [1, \"k-calendar-thead\"], [1, \"k-calendar-tr\"], [\"class\", \"k-calendar-th\", \"scope\", \"col\", \"role\", \"columnheader\", 4, \"ngFor\", \"ngForOf\"], [\"scope\", \"col\", \"role\", \"columnheader\", 1, \"k-calendar-th\"], [\"kendoCalendarView\", \"\", \"role\", \"rowgroup\", 1, \"k-calendar-tbody\", 3, \"allowReverse\", \"activeRangeEnd\", \"selectionRange\", \"showOtherMonthDays\", \"headerTitle\", \"activeView\", \"isActive\", \"min\", \"max\", \"cellUID\", \"focusedDate\", \"selectedDates\", \"weekNumber\", \"templateRef\", \"weekNumberTemplateRef\", \"viewDate\", \"cellClick\", \"weekNumberCellClick\", \"focusedCellId\", \"cellEnter\"], [3, \"footerTemplateRef\", \"activeViewValue\", \"currentDate\"]],\n    template: function _class34_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"kendo-calendar-header\", 0);\n        i0.ɵɵlistener(\"todayButtonClick\", function _class34_Template_kendo_calendar_header_todayButtonClick_0_listener($event) {\n          return ctx.todayButtonClick.emit($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(1, _class34_table_1_Template, 4, 3, \"table\", 1);\n        i0.ɵɵelementStart(2, \"kendo-virtualization\", 2);\n        i0.ɵɵlistener(\"pageChange\", function _class34_Template_kendo_virtualization_pageChange_2_listener($event) {\n          return ctx.onPageChange($event);\n        })(\"scrollChange\", function _class34_Template_kendo_virtualization_scrollChange_2_listener($event) {\n          return ctx.scrollChange($event);\n        })(\"activeIndexChange\", function _class34_Template_kendo_virtualization_activeIndexChange_2_listener($event) {\n          return ctx.setActiveDate($event);\n        });\n        i0.ɵɵelementStart(3, \"table\", 3, 4);\n        i0.ɵɵlistener(\"focus\", function _class34_Template_table_focus_3_listener() {\n          return ctx.focusCalendar.emit();\n        })(\"blur\", function _class34_Template_table_blur_3_listener($event) {\n          return ctx.blurCalendar.emit($event);\n        });\n        i0.ɵɵelementStart(5, \"colgroup\");\n        i0.ɵɵtemplate(6, _class34_col_6_Template, 1, 0, \"col\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, _class34_tbody_7_Template, 1, 16, \"tbody\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(8, _class34_kendo_calendar_footer_8_Template, 1, 3, \"kendo-calendar-footer\", 7);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"currentDate\", ctx.activeDate)(\"size\", ctx.size)(\"min\", ctx.min)(\"max\", ctx.max)(\"id\", ctx.id)(\"activeView\", ctx.activeView)(\"titleTemplateRef\", ctx.headerTitleTemplateRef)(\"headerTemplateRef\", ctx.headerTemplateRef);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isMonthView());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"tabindex\", -1)(\"skip\", ctx.skip)(\"take\", ctx.take)(\"total\", ctx.total)(\"itemHeight\", ctx.viewHeight)(\"topOffset\", ctx.viewOffset)(\"bottomOffset\", ctx.bottomOffset)(\"scrollOffsetSize\", ctx.viewOffset)(\"maxScrollDifference\", ctx.viewHeight);\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"tabindex\", ctx.getTabIndex())(\"aria-labelledby\", ctx.id);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cols);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"kForOf\", ctx.dates);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showFooter);\n      }\n    },\n    dependencies: [HeaderComponent, NgIf, NgFor, VirtualizationComponent, KForOf, ViewComponent, FooterComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return ViewListComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst divideByMagnitude = magnitude => x => Math.floor(x / magnitude);\nconst powerByMagnitude = magnitude => x => x * magnitude;\n/**\n * @hidden\n */\nlet ScrollSyncService = /*#__PURE__*/(() => {\n  var _class35;\n  class ScrollSyncService {\n    constructor(dom, zone) {\n      _defineProperty(this, \"dom\", void 0);\n      _defineProperty(this, \"zone\", void 0);\n      _defineProperty(this, \"divideByMagnitude\", void 0);\n      _defineProperty(this, \"powerByMagnitude\", void 0);\n      _defineProperty(this, \"navSubscription\", void 0);\n      _defineProperty(this, \"viewSubscription\", void 0);\n      _defineProperty(this, \"navigator\", void 0);\n      _defineProperty(this, \"view\", void 0);\n      this.dom = dom;\n      this.zone = zone;\n    }\n    configure(activeView) {\n      const magnitude = Math.max(this.dom.viewHeight(activeView) / this.dom.navigationItemHeight, 1);\n      this.divideByMagnitude = divideByMagnitude(magnitude);\n      this.powerByMagnitude = powerByMagnitude(magnitude);\n    }\n    sync(navigator, view) {\n      this.unsubscribe();\n      if (!navigator || !view) {\n        return;\n      }\n      this.navigator = navigator;\n      this.view = view;\n      this.zone.runOutsideAngular(() => {\n        let navScrolled, monthScrolled;\n        this.navSubscription = navigator.scroll$().subscribe(e => {\n          if (monthScrolled) {\n            monthScrolled = false;\n            return;\n          }\n          navScrolled = true;\n          this.scrollSiblingOf(e.target);\n        });\n        this.viewSubscription = view.scroll$().subscribe(e => {\n          if (navScrolled) {\n            navScrolled = false;\n            return;\n          }\n          monthScrolled = true;\n          this.scrollSiblingOf(e.target);\n        });\n      });\n    }\n    scrollSiblingOf(scrolledElement) {\n      const component = this.siblingComponent(scrolledElement);\n      const scrollTop = this.calculateScroll(component, scrolledElement.scrollTop);\n      component.scrollTo(scrollTop);\n    }\n    siblingComponent(scrollableElement) {\n      return this.navigator.container.nativeElement === scrollableElement ? this.view : this.navigator;\n    }\n    calculateScroll(component, scrollTop) {\n      const modifier = component === this.navigator ? this.divideByMagnitude : this.powerByMagnitude;\n      return modifier(scrollTop);\n    }\n    destroy() {\n      this.unsubscribe();\n    }\n    unsubscribe() {\n      if (this.navSubscription) {\n        this.navSubscription.unsubscribe();\n      }\n      if (this.viewSubscription) {\n        this.viewSubscription.unsubscribe();\n      }\n    }\n  }\n  _class35 = ScrollSyncService;\n  _defineProperty(ScrollSyncService, \"\\u0275fac\", function _class35_Factory(t) {\n    return new (t || _class35)(i0.ɵɵinject(CalendarDOMService), i0.ɵɵinject(i0.NgZone));\n  });\n  _defineProperty(ScrollSyncService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class35,\n    factory: _class35.ɵfac\n  }));\n  return ScrollSyncService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used for rendering the navigation item of the Calendar. To define the navigation item template, nest an `<ng-template>`\n * tag with the `kendoCalendarNavigationItemTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current item value, use the `let-title` directive. To provide more details\n * about the current title, get a reference to the current `date` by using the `let-date='date'` directive or get a reference\n * to the current active view by using the `let-activeView='activeView'` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarNavigationItemTemplate let-title>\n *      <span class=\"custom\">{{title}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * export class AppComponent { }\n * ```\n */\nlet NavigationItemTemplateDirective = /*#__PURE__*/(() => {\n  var _class36;\n  class NavigationItemTemplateDirective {\n    constructor(templateRef) {\n      _defineProperty(this, \"templateRef\", void 0);\n      this.templateRef = templateRef;\n    }\n  }\n  _class36 = NavigationItemTemplateDirective;\n  _defineProperty(NavigationItemTemplateDirective, \"\\u0275fac\", function _class36_Factory(t) {\n    return new (t || _class36)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  });\n  _defineProperty(NavigationItemTemplateDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class36,\n    selectors: [[\"\", \"kendoCalendarNavigationItemTemplate\", \"\"]],\n    standalone: true\n  }));\n  return NavigationItemTemplateDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nclass PickerService {\n  constructor() {\n    _defineProperty(this, \"onFocus\", new EventEmitter());\n    _defineProperty(this, \"onBlur\", new EventEmitter());\n    _defineProperty(this, \"sameDateSelected\", new EventEmitter());\n    _defineProperty(this, \"dateCompletenessChange\", new EventEmitter());\n    _defineProperty(this, \"calendar\", void 0);\n    _defineProperty(this, \"input\", void 0);\n    _defineProperty(this, \"timeSelector\", void 0);\n  }\n}\n\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\nlet MultiViewCalendarCustomMessagesComponent = /*#__PURE__*/(() => {\n  var _class38;\n  class MultiViewCalendarCustomMessagesComponent extends Messages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n    get override() {\n      return true;\n    }\n  }\n  _class38 = MultiViewCalendarCustomMessagesComponent;\n  _defineProperty(MultiViewCalendarCustomMessagesComponent, \"\\u0275fac\", function _class38_Factory(t) {\n    return new (t || _class38)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(MultiViewCalendarCustomMessagesComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class38,\n    selectors: [[\"kendo-multiviewcalendar-messages\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: Messages,\n      useExisting: forwardRef(() => _class38)\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function _class38_Template(rf, ctx) {},\n    encapsulation: 2\n  }));\n  return MultiViewCalendarCustomMessagesComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet CalendarMessages = /*#__PURE__*/(() => {\n  var _class39;\n  class CalendarMessages extends ComponentMessages {\n    constructor(...args) {\n      super(...args);\n      /**\n       * The **Today** button text in the header of the Calendar.\n       */\n      _defineProperty(this, \"today\", void 0);\n      /**\n       * The title of the **Prev** button in the header of the Classic Calendar.\n       */\n      _defineProperty(this, \"prevButtonTitle\", void 0);\n      /**\n       * The title of the **Next** button in the header of the Classic Calendar.\n       */\n      _defineProperty(this, \"nextButtonTitle\", void 0);\n      /**\n       * The title of the **Parent View** button in the header of the Calendar.\n       */\n      _defineProperty(this, \"parentViewButtonTitle\", void 0);\n    }\n  }\n  _class39 = CalendarMessages;\n  _defineProperty(CalendarMessages, \"\\u0275fac\", /* @__PURE__ */function () {\n    let ɵ_class39_BaseFactory;\n    return function _class39_Factory(t) {\n      return (ɵ_class39_BaseFactory || (ɵ_class39_BaseFactory = i0.ɵɵgetInheritedFactory(_class39)))(t || _class39);\n    };\n  }());\n  _defineProperty(CalendarMessages, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class39,\n    selectors: [[\"kendo-calendar-messages-base\"]],\n    inputs: {\n      today: \"today\",\n      prevButtonTitle: \"prevButtonTitle\",\n      nextButtonTitle: \"nextButtonTitle\",\n      parentViewButtonTitle: \"parentViewButtonTitle\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  }));\n  return CalendarMessages;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet CalendarLocalizedMessagesDirective = /*#__PURE__*/(() => {\n  var _class40;\n  class CalendarLocalizedMessagesDirective extends CalendarMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n  }\n  _class40 = CalendarLocalizedMessagesDirective;\n  _defineProperty(CalendarLocalizedMessagesDirective, \"\\u0275fac\", function _class40_Factory(t) {\n    return new (t || _class40)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(CalendarLocalizedMessagesDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class40,\n    selectors: [[\"\", \"kendoCalendarLocalizedMessages\", \"\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CalendarMessages,\n      useExisting: forwardRef(() => _class40)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  }));\n  return CalendarLocalizedMessagesDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst BOTTOM_VIEW_DOC_LINK = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-bottomview';\nconst TOP_VIEW_DOC_LINK = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-topview';\nconst MIN_DOC_LINK$2 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-min';\nconst MAX_DOC_LINK$2 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-max';\nconst VALUE_DOC_LINK$4 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/calendar/#toc-using-with-json';\nconst virtualizationProp = x => x ? x.virtualization : null;\n/**\n * @hidden\n */\nconst CALENDAR_VALUE_ACCESSOR = {\n  multi: true,\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CalendarComponent)\n};\n/**\n * @hidden\n */\nconst CALENDAR_RANGE_VALIDATORS = {\n  multi: true,\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => CalendarComponent)\n};\n/**\n * @hidden\n */\nconst KENDO_INPUT_PROVIDER = {\n  provide: KendoInput,\n  useExisting: forwardRef(() => CalendarComponent)\n};\n/**\n * Represents the [Kendo UI Calendar component for Angular](slug:overview_calendar).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-calendar></kendo-calendar>\n * `\n * })\n * export class AppComponent { }\n * ```\n */\nlet CalendarComponent = /*#__PURE__*/(() => {\n  var _class41;\n  class CalendarComponent {\n    /**\n     * Displays the days that fall out of the current month ([see example]({% slug viewoptions_calendar %}#toc-displaying-other-month-days)).\n     * The default values per Calendar type are:\n     * - `infinite` - false\n     * - `classic` - true\n     */\n    set showOtherMonthDays(_showOtherMonthDays) {\n      this._showOtherMonthDays = _showOtherMonthDays;\n    }\n    get showOtherMonthDays() {\n      if (this._showOtherMonthDays === undefined) {\n        return this.type === 'classic';\n      }\n      return this._showOtherMonthDays;\n    }\n    /**\n     * @hidden\n     */\n    get popupId() {\n      return `kendo-popup-${this.bus.calendarId}`;\n    }\n    /**\n     * Sets or gets the `focusedDate` property of the Calendar and\n     * defines the focused date of the component\n     * ([see example]({% slug dates_calendar %}#toc-focused-dates)).\n     *\n     * > If the Calendar is out of the min or max range, it normalizes the defined `focusedDate`.\n     */\n    set focusedDate(focusedDate) {\n      if (this.activeViewDate && !isEqual(this._focusedDate, focusedDate)) {\n        const service = this.bus.service(this.activeViewEnum);\n        const lastDayInPeriod = service.lastDayOfPeriod(this.activeViewDate);\n        const isFocusedDateInRange = service.isInRange(focusedDate, this.activeViewDate, lastDayInPeriod);\n        if (!isFocusedDateInRange) {\n          this.emitNavigate(focusedDate);\n        }\n      }\n      this._focusedDate = focusedDate || getToday();\n      this.setAriaActivedescendant();\n    }\n    get focusedDate() {\n      if (this._focusedDate > this.max) {\n        return this.max;\n      }\n      if (this._focusedDate < this.min) {\n        return this.min;\n      }\n      return this._focusedDate;\n    }\n    /**\n     * @hidden\n     */\n    get headerId() {\n      return this.id + '-header';\n    }\n    /**\n     * Sets or gets the `min` property of the Calendar and\n     * defines the minimum allowed date value\n     * ([see example]({% slug dateranges_calendar %})).\n     * By default, the `min` value is `1900-1-1`.\n     */\n    set min(min) {\n      this._min = min || new Date(MIN_DATE);\n    }\n    get min() {\n      return this._min;\n    }\n    /**\n     * Sets or gets the `max` property of the Calendar and\n     * defines the maximum allowed date value\n     * ([see example]({% slug dateranges_calendar %})).\n     * By default, the `max` value is `2099-12-31`.\n     */\n    set max(max) {\n      this._max = max || new Date(MAX_DATE);\n    }\n    get max() {\n      return this._max;\n    }\n    /**\n     * Determines whether the built-in min or max validators are enforced when validating a form.\n     */\n\n    /**\n     * Sets the Calendar selection mode\n     * ([see example]({% slug selection_calendar %})).\n     *\n     * The available values are:\n     * * `single` (default)\n     * * `multiple`\n     * * `range`\n     */\n    set selection(_selection) {\n      this._selection = _selection;\n      this.selectionSetter = true;\n    }\n    get selection() {\n      return this._selection;\n    }\n    /**\n     * Sets or gets the `value` property of the Calendar and defines the selected value of the component.\n     *\n     * > The `value` has to be a valid [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance when in `single` selection mode, an array of valid JavaScript Date instances when in `multiple` selection mode, or an object of type `SelectionRange` when in `range` selection mode.\n     */\n    set value(candidate) {\n      this.valueSetter = true;\n      this._value = candidate;\n    }\n    get value() {\n      return this._value;\n    }\n    /**\n     * Sets or gets the `disabled` property of the Calendar and\n     * determines whether the component is active\n     * ([see example]({% slug disabled_calendar %})).\n     * To learn how to disable the component in reactive forms, refer to the article on [Forms Support](slug:formssupport_calendar#toc-managing-the-calendar-disabled-state-in-reactive-forms).\n     */\n\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n      this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n      return this.tabindex;\n    }\n    /**\n     * Sets the dates of the Calendar that will be disabled\n     * ([see example]({% slug disabled_dates_calendar %})).\n     */\n    set disabledDates(value) {\n      this.disabledDatesService.initialize(value);\n      this._disabledDates = value;\n    }\n    get disabledDates() {\n      return this._disabledDates;\n    }\n    /**\n     * Sets or gets the `navigation` property of the Calendar\n     * and determines whether the navigation side-bar will be displayed\n     * ([see example]({% slug sidebar_calendar %})).\n     * Applies to the [`infinite`]({% slug api_dateinputs_calendarcomponent %}#toc-type) Calendar only.\n     */\n\n    /**\n     * Specifies the Calendar type.\n     *\n     * The possible values are:\n     * - `infinite` (default)\n     * - `classic`\n     *\n     */\n    set type(type) {\n      this.renderer.removeClass(this.element.nativeElement, `k-calendar-${this.type}`);\n      if (type === 'infinite') {\n        this.renderer.addClass(this.element.nativeElement, `k-calendar-${type}`);\n      }\n      this._type = type;\n    }\n    get type() {\n      return this._type;\n    }\n    /**\n     * Determines whether to enable animation when navigating to previous/next view.\n     * Applies to the [`classic`]({% slug api_dateinputs_calendarcomponent %}#toc-type) Calendar only.\n     *\n     * > This feature uses the [Web Animations API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API). In order to run the animation in browsers that do not support it, you need the `web-animations-js` polyfill.\n     *\n     * @default false\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for each cell.\n     * Takes precedence over nested templates in the KendoCalendar tag.\n     */\n    set cellTemplateRef(template) {\n      this._cellTemplateRef = template;\n    }\n    get cellTemplateRef() {\n      return this._cellTemplateRef || this.cellTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Queries the template for a month cell template declaration.\n     * Ignored if a `[monthCellTemplate]` value is explicitly provided.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for each month cell.\n     * Takes precedence over nested templates in the KendoCalendar tag.\n     */\n    set monthCellTemplateRef(template) {\n      this._monthCellTemplateRef = template;\n    }\n    get monthCellTemplateRef() {\n      return this._monthCellTemplateRef || this.monthCellTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Queries the template for a year cell template declaration.\n     * Ignored if a `[yearCellTemplate]` value is explicitly provided.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for each year cell.\n     * Takes precedence over nested templates in the KendoCalendar tag.\n     */\n    set yearCellTemplateRef(template) {\n      this._yearCellTemplateRef = template;\n    }\n    get yearCellTemplateRef() {\n      return this._yearCellTemplateRef || this.yearCellTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Queries the template for a decade cell template declaration.\n     * Ignored if a `[decadeCellTemplate]` value is explicitly provided.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for each decade cell.\n     * Takes precedence over nested templates in the KendoCalendar tag.\n     */\n    set decadeCellTemplateRef(template) {\n      this._decadeCellTemplateRef = template;\n    }\n    get decadeCellTemplateRef() {\n      return this._decadeCellTemplateRef || this.decadeCellTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Queries the template for a century cell template declaration.\n     * Ignored if a `[centuryCellTemplate]` value is explicitly provided.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for each century cell.\n     * Takes precedence over nested templates in the KendoCalendar tag.\n     */\n    set centuryCellTemplateRef(template) {\n      this._centuryCellTemplateRef = template;\n    }\n    get centuryCellTemplateRef() {\n      return this._centuryCellTemplateRef || this.centuryCellTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Queries the template for a week number cell template declaration.\n     * Ignored if a `[weekNumberTemplate]` value is explicitly provided.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for the week cell.\n     * Takes precedence over nested templates in the KendoCalendar tag.\n     */\n    set weekNumberTemplateRef(template) {\n      this._weekNumberTemplateRef = template;\n    }\n    get weekNumberTemplateRef() {\n      return this._weekNumberTemplateRef || this.weekNumberTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Queries the template for a header title template declaration.\n     * Ignored if a `[headerTitleTemplate]` value is explicitly provided.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for the header title.\n     * Takes precedence over nested templates in the KendoCalendar tag.\n     */\n    set headerTitleTemplateRef(template) {\n      this._headerTitleTemplateRef = template;\n    }\n    get headerTitleTemplateRef() {\n      return this._headerTitleTemplateRef || this.headerTitleTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Defines the template for the header.\n     * Takes precedence over nested templates in the KendoCalendar tag.\n     */\n    set headerTemplateRef(template) {\n      this._headerTemplateRef = template;\n    }\n    get headerTemplateRef() {\n      return this._headerTemplateRef || this.headerTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Defines the template for the footer.\n     */\n    set footerTemplateRef(template) {\n      this._footerTemplateRef = template;\n    }\n    get footerTemplateRef() {\n      return this._footerTemplateRef || this.footerTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * Queries the template for a navigation item template declaration.\n     * Ignored if a `[navigationItemTemplate]` value is explicitly provided.\n     */\n\n    /**\n     * @hidden\n     *\n     * Defines the template for the navigation item.\n     * Takes precedence over nested templates in the KendoCalendar tag.\n     */\n    set navigationItemTemplateRef(template) {\n      this._navigationItemTemplateRef = template;\n    }\n    get navigationItemTemplateRef() {\n      return this._navigationItemTemplateRef || this.navigationItemTemplate;\n    }\n    /**\n     * @hidden\n     *\n     * TODO: Make visible when true sizing of all calendar elements is implemented\n     * Sets the size of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (Default)\n     * * `large`\n     * * `none`\n     *\n     */\n    set size(size) {\n      this._size = size;\n    }\n    get size() {\n      return this._size;\n    }\n    /**\n     * Specify, which end of the defined selection range should be marked as active.\n     *\n     * > Value will be ignored if the selection range is undefined.\n     * > If range selection is used then the default value is 'start'.\n     */\n    set activeRangeEnd(_activeRangeEnd) {\n      this._activeRangeEnd = _activeRangeEnd;\n    }\n    get activeRangeEnd() {\n      return this._activeRangeEnd;\n    }\n    get activeViewEnum() {\n      const activeView = CalendarViewEnum[this.activeView];\n      return activeView < this.bottomViewEnum ? this.bottomViewEnum : activeView;\n    }\n    get bottomViewEnum() {\n      return CalendarViewEnum[this.bottomView];\n    }\n    get topViewEnum() {\n      return CalendarViewEnum[this.topView];\n    }\n    get widgetId() {\n      return this.id;\n    }\n    get ariaDisabled() {\n      // in Classic mode, the inner MultiViewCalendar should handle the disabled class and aria attr\n      return this.type === 'classic' ? undefined : this.disabled;\n    }\n    constructor(bus, dom, element, navigator, renderer, cdr, ngZone, injector, scrollSyncService, disabledDatesService, localization, selectionService, pickerService) {\n      _defineProperty(this, \"bus\", void 0);\n      _defineProperty(this, \"dom\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"navigator\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"ngZone\", void 0);\n      _defineProperty(this, \"injector\", void 0);\n      _defineProperty(this, \"scrollSyncService\", void 0);\n      _defineProperty(this, \"disabledDatesService\", void 0);\n      _defineProperty(this, \"localization\", void 0);\n      _defineProperty(this, \"selectionService\", void 0);\n      _defineProperty(this, \"pickerService\", void 0);\n      _defineProperty(this, \"_showOtherMonthDays\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"id\", void 0);\n      _defineProperty(this, \"rangeValidation\", false);\n      /**\n       * Sets the format of the displayed Calendar week days' names.\n       * @default 'short'\n       */\n      _defineProperty(this, \"weekDaysFormat\", \"short\");\n      /**\n       * Toggles the visibility of the footer.\n       * @default false\n       */\n      _defineProperty(this, \"footer\", false);\n      _defineProperty(this, \"_selection\", 'single');\n      /**\n       * Allows reverse selection when using `range` selection.\n       * If `allowReverse` is set to `true`, the component skips the validation of whether the start date is after the end date.\n       *\n       * @default false\n       */\n      _defineProperty(this, \"allowReverse\", false);\n      _defineProperty(this, \"disabled\", false);\n      /**\n       * Sets or gets the `tabindex` property of the Calendar. Based on the\n       * [HTML `tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) behavior,\n       * it determines whether the component is focusable.\n       */\n      _defineProperty(this, \"tabindex\", 0);\n      _defineProperty(this, \"navigation\", true);\n      /**\n       * Defines the active view that the Calendar initially renders\n       * ([see example]({% slug viewoptions_calendar %})).\n       * By default, the active view is `month`.\n       *\n       * > You have to set `activeView` within the `topView`-`bottomView` range.\n       */\n      _defineProperty(this, \"activeView\", CalendarViewEnum[CalendarViewEnum.month]);\n      /**\n       * Defines the bottommost view to which the user can navigate\n       * ([see example](slug:viewdepth_calendar)).\n       */\n      _defineProperty(this, \"bottomView\", CalendarViewEnum[CalendarViewEnum.month]);\n      /**\n       * Defines the topmost view to which the user can navigate\n       * ([see example](slug:viewdepth_calendar)).\n       */\n      _defineProperty(this, \"topView\", CalendarViewEnum[CalendarViewEnum.century]);\n      _defineProperty(this, \"animateNavigation\", false);\n      /**\n       * Determines whether to display a week number column in the `month` view\n       * ([see example]({% slug weeknumcolumn_calendar %})).\n       */\n      _defineProperty(this, \"weekNumber\", false);\n      /**\n       * Fires when the active view is changed\n       * ([see example](slug:events_calendar)).\n       */\n      _defineProperty(this, \"activeViewChange\", new EventEmitter());\n      /**\n       * Fires when navigating in the currently active view\n       * ([see example](slug:events_calendar)).\n       */\n      _defineProperty(this, \"navigate\", new EventEmitter());\n      /**\n       * Fires when the active view date is changed\n       * ([see example](slug:events_calendar)).\n       * Applies to the [`infinite`]({% slug api_dateinputs_calendarcomponent %}#toc-type) Calendar only.\n       */\n      _defineProperty(this, \"activeViewDateChange\", new EventEmitter());\n      /**\n       * Fires each time the Calendar gets blurred\n       * ([see example](slug:events_calendar)).\n       */\n      _defineProperty(this, \"onBlur\", new EventEmitter());\n      /**\n       * Fires each time the Calendar gets focused\n       * ([see example](slug:events_calendar)).\n       */\n      _defineProperty(this, \"onFocus\", new EventEmitter());\n      /**\n       * Fires when the value is changed\n       * ([see example](slug:events_calendar)).\n       */\n      _defineProperty(this, \"valueChange\", new EventEmitter());\n      /**\n       * @hidden\n       *\n       * Queries the template for a cell template declaration.\n       * Ignored if a `[cellTemplate]` value is explicitly provided.\n       */\n      _defineProperty(this, \"cellTemplate\", void 0);\n      _defineProperty(this, \"monthCellTemplate\", void 0);\n      _defineProperty(this, \"yearCellTemplate\", void 0);\n      _defineProperty(this, \"decadeCellTemplate\", void 0);\n      _defineProperty(this, \"centuryCellTemplate\", void 0);\n      _defineProperty(this, \"weekNumberTemplate\", void 0);\n      _defineProperty(this, \"headerTitleTemplate\", void 0);\n      /**\n       * @hidden\n       *\n       * Queries the template for a header template declaration.\n       * Ignored if a `[headerTemplate]` value is explicitly provided.\n       */\n      _defineProperty(this, \"headerTemplate\", void 0);\n      /**\n       * @hidden\n       *\n       * Queries the template for a footer template declaration.\n       * Ignored if a `[footerTemplate]` value is explicitly provided.\n       */\n      _defineProperty(this, \"footerTemplate\", void 0);\n      _defineProperty(this, \"navigationItemTemplate\", void 0);\n      _defineProperty(this, \"_size\", DEFAULT_SIZE);\n      _defineProperty(this, \"_activeRangeEnd\", 'start');\n      _defineProperty(this, \"navigationView\", void 0);\n      _defineProperty(this, \"monthView\", void 0);\n      _defineProperty(this, \"multiViewCalendar\", void 0);\n      _defineProperty(this, \"isActive\", false);\n      _defineProperty(this, \"cellUID\", guid());\n      _defineProperty(this, \"selectionRange\", {\n        start: null,\n        end: null\n      });\n      _defineProperty(this, \"selectedDates\", []);\n      _defineProperty(this, \"rangePivot\", void 0);\n      _defineProperty(this, \"_disabledDates\", void 0);\n      _defineProperty(this, \"_min\", new Date(MIN_DATE));\n      _defineProperty(this, \"_max\", new Date(MAX_DATE));\n      _defineProperty(this, \"_focusedDate\", getToday());\n      _defineProperty(this, \"_value\", void 0);\n      _defineProperty(this, \"onControlChange\", noop$2);\n      _defineProperty(this, \"onControlTouched\", noop$2);\n      _defineProperty(this, \"onValidatorChange\", noop$2);\n      _defineProperty(this, \"minValidateFn\", noop$2);\n      _defineProperty(this, \"maxValidateFn\", noop$2);\n      _defineProperty(this, \"changes\", {});\n      _defineProperty(this, \"valueSetter\", false);\n      _defineProperty(this, \"selectionSetter\", false);\n      _defineProperty(this, \"syncNavigation\", true);\n      _defineProperty(this, \"viewChangeSubscription\", void 0);\n      _defineProperty(this, \"_type\", 'infinite');\n      _defineProperty(this, \"_cellTemplateRef\", void 0);\n      _defineProperty(this, \"_monthCellTemplateRef\", void 0);\n      _defineProperty(this, \"_yearCellTemplateRef\", void 0);\n      _defineProperty(this, \"_decadeCellTemplateRef\", void 0);\n      _defineProperty(this, \"_centuryCellTemplateRef\", void 0);\n      _defineProperty(this, \"_weekNumberTemplateRef\", void 0);\n      _defineProperty(this, \"_headerTitleTemplateRef\", void 0);\n      _defineProperty(this, \"_headerTemplateRef\", void 0);\n      _defineProperty(this, \"_footerTemplateRef\", void 0);\n      _defineProperty(this, \"_navigationItemTemplateRef\", void 0);\n      _defineProperty(this, \"domEvents\", []);\n      _defineProperty(this, \"control\", void 0);\n      _defineProperty(this, \"pageChangeSubscription\", void 0);\n      _defineProperty(this, \"resolvedPromise\", Promise.resolve(null));\n      _defineProperty(this, \"destroyed\", false);\n      _defineProperty(this, \"localizationChangeSubscription\", void 0);\n      _defineProperty(this, \"activeViewDate\", void 0);\n      _defineProperty(this, \"currentlyFocusedElement\", void 0);\n      _defineProperty(this, \"canHover\", false);\n      this.bus = bus;\n      this.dom = dom;\n      this.element = element;\n      this.navigator = navigator;\n      this.renderer = renderer;\n      this.cdr = cdr;\n      this.ngZone = ngZone;\n      this.injector = injector;\n      this.scrollSyncService = scrollSyncService;\n      this.disabledDatesService = disabledDatesService;\n      this.localization = localization;\n      this.selectionService = selectionService;\n      this.pickerService = pickerService;\n      validatePackage(packageMetadata);\n      this.id = `kendo-calendarid-${this.bus.calendarId}`;\n      if (this.pickerService) {\n        this.pickerService.calendar = this;\n      }\n    }\n    ngOnInit() {\n      this.setClasses(this.element.nativeElement);\n      if (this.type === 'infinite') {\n        this.dom.calculateHeights(this.element.nativeElement);\n        this.scrollSyncService.configure(this.activeViewEnum);\n      }\n      this.localizationChangeSubscription = this.localization.changes.subscribe(() => this.cdr.markForCheck());\n      this.viewChangeSubscription = this.bus.viewChanged.subscribe(({\n        view\n      }) => this.handleActiveViewChange(CalendarViewEnum[view]));\n      this.control = this.injector.get(NgControl, null);\n      if (this.element) {\n        this.ngZone.runOutsideAngular(() => {\n          this.bindEvents();\n        });\n      }\n    }\n    ngOnChanges(changes) {\n      this.changes = changes;\n      this.verifyChanges();\n      this.bus.configure(this.bottomViewEnum, this.topViewEnum);\n      this.scrollSyncService.configure(this.activeViewEnum);\n    }\n    ngDoCheck() {\n      if (this.valueSetter || this.selectionSetter) {\n        if (this.selection === 'range' && (this.value?.start || this.value?.end) && this.focusedDate.getTime() !== this.value.start?.getTime() && this.focusedDate.getTime() !== this.value.end?.getTime()) {\n          this.focusedDate = this.value.start || this.value.end || getToday();\n        }\n        this.setValue(this.value);\n        this.valueSetter = false;\n        this.selectionSetter = false;\n      }\n      if (hasExistingValue(this.changes, 'focusedDate')) {\n        const focusedDate = this.changes.focusedDate.currentValue;\n        this.focusedDate = dateInRange(focusedDate, this.min, this.max);\n      }\n      if (this.changes.navigation) {\n        this.syncNavigation = true;\n      }\n      if (this.changes.min || this.changes.max || this.changes.rangeValidation) {\n        this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop$2;\n        this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop$2;\n        this.onValidatorChange();\n      }\n      this.changes = {};\n    }\n    ngAfterViewInit() {\n      this.setAriaActivedescendant();\n      if (this.size !== 'none') {\n        const element = this.type === 'infinite' ? this.element : this.multiViewCalendar.element;\n        this.renderer.removeClass(element.nativeElement, getSizeClass('calendar', this.size));\n        this.renderer.addClass(element.nativeElement, getSizeClass('calendar', this.size));\n      }\n    }\n    ngAfterViewChecked() {\n      if (!this.syncNavigation) {\n        return;\n      }\n      this.syncNavigation = false;\n      this.scrollSyncService.sync(virtualizationProp(this.navigationView), virtualizationProp(this.monthView));\n    }\n    ngOnDestroy() {\n      this.scrollSyncService.destroy();\n      this.domEvents.forEach(unbindCallback => unbindCallback());\n      if (this.pickerService) {\n        this.pickerService.calendar = null;\n      }\n      if (this.viewChangeSubscription) {\n        this.viewChangeSubscription.unsubscribe();\n      }\n      if (this.pageChangeSubscription) {\n        this.pageChangeSubscription.unsubscribe();\n      }\n      if (this.localizationChangeSubscription) {\n        this.localizationChangeSubscription.unsubscribe();\n      }\n      this.destroyed = true;\n    }\n    /**\n     * @hidden\n     */\n    onCellEnter(date) {\n      if (this.selection === 'range' && this.canHover) {\n        this.ngZone.run(() => {\n          if (this.allowReverse) {\n            if (this.activeRangeEnd === 'end' && this.selectionRange.start) {\n              this.selectionRange = {\n                start: this.selectionRange.start,\n                end: date\n              };\n            }\n            if (this.activeRangeEnd === 'start' && this.selectionRange.end) {\n              this.selectionRange = {\n                start: date,\n                end: this.selectionRange.end\n              };\n            }\n          } else {\n            if (this.activeRangeEnd === 'end' && this.selectionRange.start && date >= this.selectionRange.start) {\n              this.selectionRange = {\n                start: this.selectionRange.start,\n                end: date\n              };\n            }\n            if (this.selectionRange.start && date < this.selectionRange.start) {\n              this.selectionRange = {\n                start: this.selectionRange.start,\n                end: null\n              };\n            }\n          }\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n      this.focusedDate = new Date(this.focusedDate);\n      this.cdr.detectChanges();\n    }\n    /**\n     * Focuses the Calendar by making the table.k-calendar-table element active.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"calendar.focus()\">Focus calendar</button>\n     *  <kendo-calendar #calendar></kendo-calendar>\n     * `\n     * })\n     * export class AppComponent { }\n     * ```\n     */\n    focus() {\n      this.currentlyFocusedElement = this.type === 'infinite' ? this.element?.nativeElement.querySelector(selectors.infiniteCalendarTable) : this.currentlyFocusedElement = this.element?.nativeElement.querySelector(selectors.multiViewCalendarTable);\n      this.currentlyFocusedElement?.focus();\n    }\n    /**\n     * Blurs the Calendar component.\n     */\n    blur() {\n      const blurTarget = this.type === 'infinite' ? this.currentlyFocusedElement : this.multiViewCalendar;\n      if (isPresent(blurTarget)) {\n        blurTarget.blur();\n      }\n    }\n    /**\n     * @hidden\n     */\n    containsElement(element) {\n      return Boolean(closest(element, node => node === this.element.nativeElement));\n    }\n    /**\n     * @hidden\n     */\n    handleNavigation(candidate) {\n      if (this.disabled) {\n        return;\n      }\n      const focusTarget = candidate ? new Date(cloneDate(candidate).setDate(1)) : this.focusedDate;\n      this.focusedDate = dateInRange(focusTarget, this.min, this.max);\n      this.detectChanges();\n    }\n    /**\n     * @hidden\n     */\n    onPageChange() {\n      if (!NgZone.isInAngularZone()) {\n        if (this.pageChangeSubscription) {\n          this.pageChangeSubscription.unsubscribe();\n        }\n        this.pageChangeSubscription = from(this.resolvedPromise).subscribe(() => {\n          this.detectChanges(); // requires zone if templates\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleMultiViewCalendarValueChange(value, focusedDate) {\n      if (this.selection === 'range') {\n        this.valueChange.emit(value);\n      } else {\n        const selectedDates = Array.isArray(value) ? value : [value];\n        this.handleDateChange({\n          selectedDates,\n          focusedDate\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleDateChange(args) {\n      const selectedDates = Array.isArray(args.selectedDates) ? args.selectedDates : [args.selectedDates];\n      const canNavigateDown = this.bus.canMoveDown(this.activeViewEnum);\n      const availableDates = selectedDates.filter(date => !this.disabledDatesService.isDateDisabled(date));\n      this.focusedDate = args.focusedDate || this.focusedDate;\n      if (this.disabled) {\n        return;\n      }\n      if (!canNavigateDown && areDatesEqual(availableDates, this.selectedDates)) {\n        this.emitSameDate();\n        return;\n      }\n      if (canNavigateDown) {\n        this.bus.moveDown(this.activeViewEnum);\n        return;\n      }\n      if (this.disabledDatesService.isDateDisabled(this.focusedDate)) {\n        return;\n      }\n      if (this.selection === 'range') {\n        return;\n      }\n      this.ngZone.run(() => {\n        this.selectedDates = availableDates.map(date => cloneDate(date));\n        this.value = this.parseSelectionToValue(availableDates);\n        this.onControlChange(this.parseSelectionToValue(availableDates));\n        this.valueChange.emit(this.parseSelectionToValue(availableDates));\n        this.cdr.markForCheck();\n      });\n    }\n    /**\n     * @hidden\n     */\n    writeValue(candidate) {\n      this.verifyValue(candidate);\n      this.value = candidate;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n      this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n      this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    validate(control) {\n      return this.minValidateFn(control) || this.maxValidateFn(control);\n    }\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn) {\n      this.onValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    activeCellTemplate() {\n      switch (this.activeViewEnum) {\n        case CalendarViewEnum.month:\n          return this.monthCellTemplateRef || this.cellTemplateRef;\n        case CalendarViewEnum.year:\n          return this.yearCellTemplateRef;\n        case CalendarViewEnum.decade:\n          return this.decadeCellTemplateRef;\n        case CalendarViewEnum.century:\n          return this.centuryCellTemplateRef;\n        default:\n          return null;\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleNavigate(event) {\n      this.focusedDate = event.focusedDate;\n      this.activeView = event.activeView;\n      this.emitNavigate(this.focusedDate);\n    }\n    /**\n     * @hidden\n     */\n    emitNavigate(focusedDate) {\n      const activeView = CalendarViewEnum[this.activeViewEnum];\n      this.navigate.emit({\n        activeView,\n        focusedDate\n      });\n    }\n    /**\n     * @hidden\n     */\n    emitEvent(emitter, args) {\n      if (hasObservers(emitter)) {\n        this.ngZone.run(() => {\n          emitter.emit(args);\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleActiveDateChange(date) {\n      this.activeViewDate = date;\n      this.emitEvent(this.activeViewDateChange, date);\n    }\n    /**\n     * @hidden\n     */\n    handleActiveViewChange(view) {\n      this.activeView = view;\n      this.emitEvent(this.activeViewChange, view);\n      if (this.type === 'infinite') {\n        this.scrollSyncService.configure(this.activeViewEnum);\n      }\n      this.detectChanges(); // requires zone if templates\n    }\n    /**\n     * @hidden\n     */\n    handleCellClick({\n      date,\n      modifiers\n    }) {\n      this.focus();\n      if (this.selection === 'range' && this.activeViewEnum === CalendarViewEnum[this.bottomView]) {\n        this.performRangeSelection(date);\n      } else {\n        this.selectionService.lastClicked = date;\n        this.performSelection(date, modifiers);\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleWeekNumberClick(dates) {\n      if (this.selection === 'single') {\n        return;\n      }\n      this.ngZone.run(() => {\n        if (this.selection === 'multiple') {\n          this.handleDateChange({\n            selectedDates: dates,\n            focusedDate: last(dates)\n          });\n        }\n        if (this.selection === 'range') {\n          this.canHover = false;\n          this.activeRangeEnd = 'start';\n          const shouldEmitValueChange = this.selectionRange.start?.getTime() !== dates[0].getTime() || this.selectionRange.end?.getTime() !== last(dates).getTime();\n          this.value = {\n            start: dates[0],\n            end: last(dates)\n          };\n          if (shouldEmitValueChange) {\n            this.valueChange.emit(this.value);\n          }\n        }\n      });\n    }\n    /**\n     * @hidden\n     */\n    handleBlur(args) {\n      if (this.element.nativeElement.contains(args.relatedTarget)) {\n        return;\n      }\n      this.isActive = false;\n      // the injector can get the NgControl instance of the parent component (for example, the DateTimePicker)\n      // and enters the zone for no reason because the parent component is still untouched\n      if (!this.pickerService && requiresZoneOnBlur(this.control)) {\n        this.ngZone.run(() => {\n          this.onControlTouched();\n          this.emitBlur(args);\n          this.cdr.markForCheck();\n        });\n      } else {\n        this.emitBlur(args);\n        this.detectChanges();\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleFocus() {\n      this.isActive = true;\n      if (!NgZone.isInAngularZone()) {\n        this.detectChanges();\n      }\n      this.emitFocus();\n    }\n    /**\n     * @hidden\n     */\n    handleMultiViewCalendarKeydown(args) {\n      // Prevent form from submitting on enter if used in datepicker (classic view)\n      if (isPresent(this.pickerService) && args.keyCode === Keys$1.Enter) {\n        args.preventDefault();\n      }\n    }\n    setClasses(element) {\n      this.renderer.removeClass(element, `k-calendar-${this.type}`);\n      if (this.type === 'infinite') {\n        this.renderer.addClass(element, 'k-calendar');\n        this.renderer.addClass(element, `k-calendar-${this.type}`);\n      }\n    }\n    verifyChanges() {\n      if (!isDevMode()) {\n        return;\n      }\n      if (this.min > this.max) {\n        throw new Error(`The max value should be bigger than the min. See ${MIN_DOC_LINK$2} and ${MAX_DOC_LINK$2}.`);\n      }\n      if (this.bottomViewEnum > this.topViewEnum) {\n        throw new Error(`The topView should be greater than bottomView. See ${BOTTOM_VIEW_DOC_LINK} and ${TOP_VIEW_DOC_LINK}.`);\n      }\n    }\n    verifyValue(candidate) {\n      if (!isDevMode()) {\n        return;\n      }\n      if (this.selection === 'single' && candidate && !isNullOrDate(candidate)) {\n        throw new Error(`When using 'single' selection the 'value' should be a valid JavaScript Date instance. Check ${VALUE_DOC_LINK$4} for possible resolution.`);\n      } else if (this.selection === 'multiple' && candidate) {\n        if (Array.isArray(candidate)) {\n          const onlyDates = candidate.every(value => value instanceof Date);\n          if (!onlyDates) {\n            throw new Error(`When using 'multiple' selection the 'value' should be an array of valid JavaScript Date instances. Check ${VALUE_DOC_LINK$4} for possible resolution.`);\n          }\n        }\n        if (Object.keys(candidate).find(k => k === 'start') && Object.keys(candidate).find(k => k === 'end')) {\n          throw new Error(`When using 'multiple' selection the 'value' should be an array of valid JavaScript Date instances. Check ${VALUE_DOC_LINK$4} for possible resolution.`);\n        }\n      } else if (this.selection === 'range' && candidate && !(isNullOrDate(candidate['start']) && isNullOrDate(candidate['end']))) {\n        throw new Error(`The 'value' should be an object with start and end dates. Check ${VALUE_DOC_LINK$4} for possible resolution.`);\n      }\n    }\n    bindEvents() {\n      const element = this.element.nativeElement;\n      this.domEvents.push(this.renderer.listen(element, 'focus', this.handleFocus.bind(this)), this.renderer.listen(element, 'mousedown', preventDefault), this.renderer.listen(element, 'click', this.handleComponentClick.bind(this)), this.renderer.listen(element, 'keydown', this.handleKeydown.bind(this)), this.renderer.listen(element, 'mouseleave', this.setRangeSelectionToValue.bind(this)));\n    }\n    setRangeSelectionToValue() {\n      if (this.selection === 'range' && this.type === 'infinite' && this.value) {\n        this.ngZone.run(() => {\n          this.selectionRange = this.value;\n          this.cdr.markForCheck();\n        });\n      }\n    }\n    emitBlur(args) {\n      if (this.pickerService) {\n        this.pickerService.onBlur.emit(args);\n      }\n      this.onBlur.emit();\n    }\n    emitFocus() {\n      if (this.pickerService) {\n        this.pickerService.onFocus.emit();\n      }\n      this.onFocus.emit();\n    }\n    handleComponentClick() {\n      if (!this.isActive) {\n        if (this.type === 'infinite' && this.monthView.isScrolled()) {\n          this.focusedDate = cloneDate(this.focusedDate); //XXX: forces change detect\n          this.detectChanges();\n        }\n        this.focus();\n      }\n    }\n    handleKeydown(args) {\n      if (this.type === 'infinite') {\n        // reserve the alt + arrow key commands for the picker\n        const ctrlKey = args.ctrlKey || args.metaKey;\n        const arrowKeyPressed = [Keys$1.ArrowUp, Keys$1.ArrowRight, Keys$1.ArrowDown, Keys$1.ArrowLeft].indexOf(args.keyCode) !== -1;\n        const reserveKeyCommandsForPicker = isPresent(this.pickerService) && arrowKeyPressed && args.altKey;\n        if (reserveKeyCommandsForPicker) {\n          return;\n        }\n        if (ctrlKey && arrowKeyPressed) {\n          args.preventDefault();\n        }\n        // Prevent form from submitting on enter if used in datepicker (infinite view)\n        const preventSubmitInDatePicker = isPresent(this.pickerService) && args.keyCode === Keys$1.Enter;\n        if (preventSubmitInDatePicker) {\n          args.preventDefault();\n        }\n        const candidate = dateInRange(this.navigator.move(this.focusedDate, this.navigator.action(args), this.activeViewEnum), this.min, this.max);\n        if (!isEqual(this.focusedDate, candidate)) {\n          this.focusedDate = candidate;\n          this.detectChanges();\n          args.preventDefault();\n        }\n        if (args.keyCode === Keys$1.Enter) {\n          this.selectionService.lastClicked = this.focusedDate;\n          if (this.selection !== 'range') {\n            this.performSelection(this.focusedDate, args);\n          } else {\n            this.performRangeSelection(this.focusedDate);\n          }\n        }\n        if (args.keyCode === Keys$1.KeyT) {\n          this.focusToday();\n        }\n        if (isArrowWithShiftPressed(args) && this.selection !== 'range') {\n          args.anyArrow = true;\n          this.performSelection(this.focusedDate, args);\n        }\n      }\n    }\n    focusToday() {\n      this.focusedDate = getToday();\n      this.bus.moveToBottom(this.activeViewEnum);\n      this.cdr.detectChanges();\n    }\n    detectChanges() {\n      if (!this.destroyed) {\n        this.cdr.detectChanges();\n      }\n    }\n    emitSameDate() {\n      if (this.pickerService) {\n        this.pickerService.sameDateSelected.emit();\n      }\n    }\n    setAriaActivedescendant() {\n      // in Classic mode, the inner MultiViewCalendar handles the activedescendant\n      const infiniteCalendarTable = this.element.nativeElement?.querySelector(selectors.infiniteCalendarTable);\n      const activedescendantHandledByInnerMultiViewCalendar = !isPresent(infiniteCalendarTable) || this.type === 'classic' && !infiniteCalendarTable.hasAttribute(attributeNames.ariaActiveDescendant);\n      if (activedescendantHandledByInnerMultiViewCalendar) {\n        return;\n      }\n      if (this.type === 'classic') {\n        this.renderer.removeAttribute(infiniteCalendarTable, attributeNames.ariaActiveDescendant);\n        return;\n      }\n      const focusedCellId = this.cellUID + this.focusedDate.getTime();\n      this.renderer.setAttribute(infiniteCalendarTable, attributeNames.ariaActiveDescendant, focusedCellId);\n    }\n    parseSelectionToValue(selection) {\n      selection = selection || [];\n      return this.selection === 'single' ? cloneDate(last(selection)) : selection.map(date => cloneDate(date));\n    }\n    setValue(candidate) {\n      this.verifyValue(candidate);\n      if (candidate === null) {\n        this._value = null;\n        this.selectedDates = [];\n        this.selectionRange = {\n          start: null,\n          end: null\n        };\n      } else if (Array.isArray(candidate)) {\n        this.selectionRange = {\n          start: null,\n          end: null\n        };\n        this._value = candidate.filter(date => isPresent(date)).map(element => cloneDate(element));\n      } else if (isObject(candidate) && Object.keys(candidate).find(k => k === 'start') && Object.keys(candidate).find(k => k === 'end')) {\n        this.selectedDates = [];\n        this.selectionRange = {\n          start: null,\n          end: null\n        };\n        this._value = {\n          start: null,\n          end: null\n        };\n        this._value.start = candidate.start instanceof Date ? cloneDate(candidate.start) : null;\n        this._value.end = candidate.end instanceof Date ? cloneDate(candidate.end) : null;\n        this.selectionRange = Object.assign({}, this._value);\n        if (this._value?.start && !this._value?.end) {\n          this.activeRangeEnd = 'end';\n          this.canHover = true;\n        }\n        if (this._value?.end && !this._value?.start) {\n          this.activeRangeEnd = 'start';\n          this.canHover = true;\n        }\n        if (this._value?.end && this._value?.start) {\n          this.canHover = false;\n        }\n      } else {\n        this.selectionRange = {\n          start: null,\n          end: null\n        };\n        this._value = cloneDate(candidate);\n      }\n      if (this.selection !== 'range') {\n        const selection = [].concat(candidate).filter(date => isPresent(date)).map(date => cloneDate(date));\n        if (!areDatesEqual(selection, this.selectedDates)) {\n          const lastSelected = last(selection);\n          this.rangePivot = cloneDate(lastSelected);\n          this.focusedDate = cloneDate(lastSelected) || this.focusedDate;\n          this.selectedDates = selection;\n        }\n      }\n    }\n    performRangeSelection(date) {\n      this.focusedDate = date;\n      const clonedRangeSelection = Object.assign({}, this.selectionRange);\n      const emitValueChange = this.activeRangeEnd === 'start' && this.value?.start?.getTime() !== date?.getTime() || this.activeRangeEnd === 'end' && this.value?.end?.getTime() !== date?.getTime();\n      this.ngZone.run(() => {\n        const rangeSelection = handleRangeSelection(date, clonedRangeSelection, this.activeRangeEnd, this.allowReverse);\n        this.activeRangeEnd = rangeSelection.activeRangeEnd;\n        if (this.canHover && rangeSelection.activeRangeEnd === 'end' && rangeSelection.selectionRange.end?.getTime() === date.getTime()) {\n          this.activeRangeEnd = 'start';\n          rangeSelection.activeRangeEnd = 'start';\n        }\n        this.canHover = this.activeRangeEnd === 'end' && rangeSelection.selectionRange.start && !rangeSelection.selectionRange.end;\n        if (emitValueChange && (this.value?.start?.getTime() !== rangeSelection.selectionRange?.start?.getTime() || this.value?.end?.getTime() !== rangeSelection.selectionRange?.end?.getTime())) {\n          this.value = rangeSelection.selectionRange;\n          this.valueChange.emit(this.value);\n        }\n        this.cdr.markForCheck();\n      });\n    }\n    performSelection(date, selectionModifiers) {\n      const selection = this.selectionService.performSelection({\n        date: date,\n        modifiers: selectionModifiers,\n        selectionMode: this.selection,\n        activeViewEnum: this.activeViewEnum,\n        rangePivot: this.rangePivot,\n        selectedDates: this.selectedDates\n      });\n      this.rangePivot = selection.rangePivot;\n      this.handleDateChange({\n        selectedDates: selection.selectedDates,\n        focusedDate: date\n      });\n    }\n  }\n  _class41 = CalendarComponent;\n  _defineProperty(CalendarComponent, \"\\u0275fac\", function _class41_Factory(t) {\n    return new (t || _class41)(i0.ɵɵdirectiveInject(BusViewService), i0.ɵɵdirectiveInject(CalendarDOMService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(ScrollSyncService), i0.ɵɵdirectiveInject(DisabledDatesService), i0.ɵɵdirectiveInject(i1$1.LocalizationService), i0.ɵɵdirectiveInject(SelectionService), i0.ɵɵdirectiveInject(PickerService, 8));\n  });\n  _defineProperty(CalendarComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class41,\n    selectors: [[\"kendo-calendar\"]],\n    contentQueries: function _class41_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, MonthCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, YearCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, DecadeCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, CenturyCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, WeekNumberCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, HeaderTitleTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, NavigationItemTemplateDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monthCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.yearCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.decadeCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.centuryCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.weekNumberTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTitleTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.navigationItemTemplate = _t.first);\n      }\n    },\n    viewQuery: function _class41_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(NavigationComponent, 5);\n        i0.ɵɵviewQuery(ViewListComponent, 5);\n        i0.ɵɵviewQuery(MultiViewCalendarComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.navigationView = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiViewCalendar = _t.first);\n      }\n    },\n    hostVars: 6,\n    hostBindings: function _class41_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.widgetId)(\"aria-disabled\", ctx.ariaDisabled);\n        i0.ɵɵclassProp(\"k-week-number\", ctx.weekNumber)(\"k-disabled\", ctx.ariaDisabled);\n      }\n    },\n    inputs: {\n      showOtherMonthDays: \"showOtherMonthDays\",\n      id: \"id\",\n      focusedDate: \"focusedDate\",\n      min: \"min\",\n      max: \"max\",\n      rangeValidation: \"rangeValidation\",\n      weekDaysFormat: \"weekDaysFormat\",\n      footer: \"footer\",\n      selection: \"selection\",\n      allowReverse: \"allowReverse\",\n      value: \"value\",\n      disabled: \"disabled\",\n      tabindex: \"tabindex\",\n      tabIndex: \"tabIndex\",\n      disabledDates: \"disabledDates\",\n      navigation: \"navigation\",\n      activeView: \"activeView\",\n      bottomView: \"bottomView\",\n      topView: \"topView\",\n      type: \"type\",\n      animateNavigation: \"animateNavigation\",\n      weekNumber: \"weekNumber\",\n      cellTemplateRef: [\"cellTemplate\", \"cellTemplateRef\"],\n      monthCellTemplateRef: [\"monthCellTemplate\", \"monthCellTemplateRef\"],\n      yearCellTemplateRef: [\"yearCellTemplate\", \"yearCellTemplateRef\"],\n      decadeCellTemplateRef: [\"decadeCellTemplate\", \"decadeCellTemplateRef\"],\n      centuryCellTemplateRef: [\"centuryCellTemplate\", \"centuryCellTemplateRef\"],\n      weekNumberTemplateRef: [\"weekNumberTemplate\", \"weekNumberTemplateRef\"],\n      headerTitleTemplateRef: [\"headerTitleTemplate\", \"headerTitleTemplateRef\"],\n      headerTemplateRef: [\"headerTemplate\", \"headerTemplateRef\"],\n      footerTemplateRef: [\"footerTemplate\", \"footerTemplateRef\"],\n      navigationItemTemplateRef: [\"navigationItemTemplate\", \"navigationItemTemplateRef\"],\n      size: \"size\",\n      activeRangeEnd: \"activeRangeEnd\"\n    },\n    outputs: {\n      activeViewChange: \"activeViewChange\",\n      navigate: \"navigate\",\n      activeViewDateChange: \"activeViewDateChange\",\n      onBlur: \"blur\",\n      onFocus: \"focus\",\n      valueChange: \"valueChange\"\n    },\n    exportAs: [\"kendo-calendar\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([BusViewService, CALENDAR_VALUE_ACCESSOR, CALENDAR_RANGE_VALIDATORS, KENDO_INPUT_PROVIDER, LocalizationService, DisabledDatesService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.calendar'\n    }, NavigationService, ScrollSyncService, SelectionService]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 2,\n    consts: function () {\n      let i18n_18;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the today button in the calendar header\n         * @meaning kendo.calendar.today\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_19 = goog.getMsg(\"Today\");\n        i18n_18 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_19;\n      } else {\n        i18n_18 = $localize`:kendo.calendar.today|The label for the today button in the calendar header:Today`;\n      }\n      let i18n_20;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the previous button in the Classic calendar\n         * @meaning kendo.calendar.prevButtonTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_21 = goog.getMsg(\"Navigate to previous view\");\n        i18n_20 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_21;\n      } else {\n        i18n_20 = $localize`:kendo.calendar.prevButtonTitle|The title of the previous button in the Classic calendar:Navigate to previous view`;\n      }\n      let i18n_22;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the next button in the Classic calendar\n         * @meaning kendo.calendar.nextButtonTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_23 = goog.getMsg(\"Navigate to next view\");\n        i18n_22 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_23;\n      } else {\n        i18n_22 = $localize`:kendo.calendar.nextButtonTitle|The title of the next button in the Classic calendar:Navigate to next view`;\n      }\n      let i18n_24;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the parent view button in the calendar header\n         * @meaning kendo.calendar.parentViewButtonTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_25 = goog.getMsg(\"Navigate to parent view\");\n        i18n_24 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_25;\n      } else {\n        i18n_24 = $localize`:kendo.calendar.parentViewButtonTitle|The title of the parent view button in the calendar header:Navigate to parent view`;\n      }\n      return [[\"kendoCalendarLocalizedMessages\", \"\", \"today\", i18n_18, \"prevButtonTitle\", i18n_20, \"nextButtonTitle\", i18n_22, \"parentViewButtonTitle\", i18n_24], [4, \"ngIf\"], [3, \"activeView\", \"focusedDate\", \"min\", \"max\", \"templateRef\", \"valueChange\", \"pageChange\", 4, \"ngIf\"], [3, \"activeView\", \"allowReverse\", \"showOtherMonthDays\", \"activeRangeEnd\", \"selectionRange\", \"size\", \"isActive\", \"id\", \"weekDaysFormat\", \"cellTemplateRef\", \"headerTitleTemplateRef\", \"headerTemplateRef\", \"showFooter\", \"footerTemplateRef\", \"weekNumberTemplateRef\", \"cellUID\", \"min\", \"max\", \"focusedDate\", \"weekNumber\", \"selectedDates\", \"tabIndex\", \"disabled\", \"todayButtonClick\", \"cellClick\", \"weekNumberCellClick\", \"activeDateChange\", \"pageChange\", \"focusCalendar\", \"blurCalendar\", \"cellEnter\"], [3, \"resize\"], [3, \"activeView\", \"focusedDate\", \"min\", \"max\", \"templateRef\", \"valueChange\", \"pageChange\"], [3, \"views\", \"min\", \"max\", \"size\", \"id\", \"activeRangeEnd\", \"selectionRange\", \"allowReverse\", \"disabled\", \"isActive\", \"showOtherMonthDays\", \"tabIndex\", \"activeView\", \"bottomView\", \"topView\", \"weekDaysFormat\", \"weekNumber\", \"animateNavigation\", \"cellTemplate\", \"monthCellTemplate\", \"yearCellTemplate\", \"decadeCellTemplate\", \"centuryCellTemplate\", \"headerTitleTemplate\", \"headerTemplate\", \"footerTemplate\", \"footer\", \"weekNumberTemplate\", \"focusedDate\", \"selection\", \"value\", \"disabledDates\", \"activeViewChange\", \"navigate\", \"valueChange\", \"focusCalendar\", \"blur\", \"blurEvent\", \"keydown\"], [\"multiviewcalendar\", \"\"], [3, \"today\", \"prevButtonTitle\", \"nextButtonTitle\", \"parentViewButtonTitle\"]];\n    },\n    template: function _class41_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n        i0.ɵɵtemplate(1, _class41_ng_container_1_Template, 4, 24, \"ng-container\", 1);\n        i0.ɵɵtemplate(2, _class41_ng_container_2_Template, 4, 36, \"ng-container\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.type === \"infinite\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.type === \"classic\");\n      }\n    },\n    dependencies: [CalendarLocalizedMessagesDirective, NgIf, NavigationComponent, ViewListComponent, ResizeSensorComponent, MultiViewCalendarComponent, MultiViewCalendarCustomMessagesComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return CalendarComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nconst incompleteDateValidator = () => {\n  return (control, incomplete) => {\n    if (!isPresent(control.value) && incomplete) {\n      return {\n        incompleteDate: true\n      };\n    } else {\n      return null;\n    }\n  };\n};\n\n/**\n * @hidden\n */\nvar Arrow = /*#__PURE__*/function (Arrow) {\n  Arrow[Arrow[\"Up\"] = 0] = \"Up\";\n  Arrow[Arrow[\"Down\"] = 1] = \"Down\";\n  Arrow[Arrow[\"None\"] = 2] = \"None\";\n  return Arrow;\n}(Arrow || {});\n/**\n * @hidden\n */\nlet DateInputMessages = /*#__PURE__*/(() => {\n  var _class42;\n  class DateInputMessages extends ComponentMessages {\n    constructor(...args) {\n      super(...args);\n      /**\n       * The title of the **Decrement** button of the DateInput.\n       */\n      _defineProperty(this, \"decrement\", void 0);\n      /**\n       * The title of the **Increment** button of the DateInput.\n       */\n      _defineProperty(this, \"increment\", void 0);\n      /**\n       * The title of the **Clear** button of the DateInput.\n       */\n      _defineProperty(this, \"clearTitle\", void 0);\n    }\n  }\n  _class42 = DateInputMessages;\n  _defineProperty(DateInputMessages, \"\\u0275fac\", /* @__PURE__ */function () {\n    let ɵ_class42_BaseFactory;\n    return function _class42_Factory(t) {\n      return (ɵ_class42_BaseFactory || (ɵ_class42_BaseFactory = i0.ɵɵgetInheritedFactory(_class42)))(t || _class42);\n    };\n  }());\n  _defineProperty(DateInputMessages, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class42,\n    selectors: [[\"kendo-dateinput-messages-base\"]],\n    inputs: {\n      decrement: \"decrement\",\n      increment: \"increment\",\n      clearTitle: \"clearTitle\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  }));\n  return DateInputMessages;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet DateInputLocalizedMessagesDirective = /*#__PURE__*/(() => {\n  var _class43;\n  class DateInputLocalizedMessagesDirective extends DateInputMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n  }\n  _class43 = DateInputLocalizedMessagesDirective;\n  _defineProperty(DateInputLocalizedMessagesDirective, \"\\u0275fac\", function _class43_Factory(t) {\n    return new (t || _class43)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(DateInputLocalizedMessagesDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class43,\n    selectors: [[\"\", \"kendoDateInputLocalizedMessages\", \"\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: DateInputMessages,\n      useExisting: forwardRef(() => _class43)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  }));\n  return DateInputLocalizedMessagesDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet nextId = 0;\nconst MIN_DOC_LINK$1 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/api/DateInputComponent/#toc-min';\nconst MAX_DOC_LINK$1 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/api/DateInputComponent/#toc-max';\nconst VALUE_DOC_LINK$3 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/dateinput/#toc-using-with-json';\nconst TWO_DIGIT_YEAR_MAX$2 = 68;\nconst DEFAULT_FORMAT$1 = 'd';\nconst DEFAULT_FORMAT_PLACEHOLDER = 'wide';\nconst DATE_PART_REGEXP = /year|month|<day>/;\nconst TIME_PART_REGEXP = /hour|minute|second|millisecond/;\n/**\n * @hidden\n * Need to overrite `dateFormatNames` parameters order and provide `cldr` object\n * required by the kendo-dateinputs-common package\n */\nclass DateInputIntl {\n  constructor(service) {\n    _defineProperty(this, \"service\", void 0);\n    _defineProperty(this, \"format\", void 0);\n    _defineProperty(this, \"toString\", void 0);\n    _defineProperty(this, \"formatDate\", void 0);\n    _defineProperty(this, \"parseDate\", void 0);\n    _defineProperty(this, \"parseNumber\", void 0);\n    _defineProperty(this, \"formatNumber\", void 0);\n    _defineProperty(this, \"splitDateFormat\", void 0);\n    _defineProperty(this, \"numberSymbols\", void 0);\n    _defineProperty(this, \"firstDay\", void 0);\n    _defineProperty(this, \"weekendRange\", void 0);\n    _defineProperty(this, \"dateFieldName\", void 0);\n    _defineProperty(this, \"dateFormatNames\", void 0);\n    _defineProperty(this, \"cldr\", {});\n    _defineProperty(this, \"localeId\", void 0);\n    this.service = service;\n    this.localeId = service['localeId'];\n    this.format = service.format;\n    this.toString = service.toString;\n    this.formatDate = service.formatDate;\n    this.parseDate = service.parseDate;\n    this.parseNumber = service.parseNumber;\n    this.formatNumber = service.formatNumber;\n    this.splitDateFormat = service.splitDateFormat;\n    this.numberSymbols = service.numberSymbols;\n    this.firstDay = service.firstDay;\n    this.weekendRange = service.weekendRange;\n    this.dateFieldName = service.dateFieldName;\n    this.dateFormatNames = (localeId, options) => this.service.dateFormatNames(options, localeId || this.localeId);\n    const _localeData = localeData(this.localeId);\n    // Setting the `cldr` object from here could be avoided if the logic in the common package is revisited to \n    // directly relies on the `localeId` being set as part of the options => TBD and validated for all suites\n    this.cldr[_localeData.name] = _localeData;\n  }\n}\n/**\n * Represents the [Kendo UI DateInput component for Angular](slug:overview_dateinput).\n */\nlet DateInputComponent = /*#__PURE__*/(() => {\n  var _class45;\n  class DateInputComponent {\n    /**\n     * @hidden\n     */\n    set focusableId(_focusableId) {\n      if (_focusableId) {\n        this._focusableId = _focusableId;\n      }\n    }\n    get focusableId() {\n      return this._focusableId;\n    }\n    /**\n     * @hidden\n     */\n    set pickerType(_pickerType) {\n      if (_pickerType) {\n        this.focusableId = `${_pickerType}-${nextId}`;\n      }\n    }\n    /**\n     * If set to `true`, renders a clear button after the input text or DateInput value has been changed.\n     * Clicking this button resets the value of the component to `null` and triggers the `valueChange` event.\n     * @default false\n     */\n\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n      this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n      return this.tabindex;\n    }\n    /**\n     * @hidden\n     */\n\n    /**\n     * Defines the descriptions of the format sections in the input field.\n     * For more information, refer to the article on\n     * [placeholders]({% slug placeholders_dateinput %}).\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     * <div class=\"row example-wrapper\" [style.min-height.px]=\"450\">\n     *  <div class=\"col-xs-12 col-md-6 example-col\">\n     *    <p>Full-length format description:</p>\n     *    <kendo-dateinput formatPlaceholder=\"wide\"></kendo-dateinput>\n     *  </div>\n     *\n     *  <div class=\"col-xs-12 col-md-6 example-col\">\n     *    <p>Narrow-length format description:</p>\n     *    <kendo-dateinput formatPlaceholder=\"narrow\"></kendo-dateinput>\n     *  </div>\n     *\n     *  <div class=\"col-xs-12 col-md-6 example-col\">\n     *    <p>Short-length format description:</p>\n     *    <kendo-dateinput formatPlaceholder=\"short\"></kendo-dateinput>\n     *  </div>\n     *\n     *  <div class=\"col-xs-12 col-md-6 example-col\">\n     *    <p>Display defined format:</p>\n     *    <kendo-dateinput format=\"MM/dd/yyyy\" formatPlaceholder=\"formatPattern\"></kendo-dateinput>\n     *  </div>\n     *\n     *  <div class=\"col-xs-12 col-md-6 example-col\">\n     *    <p>Custom defined format descriptions</p>\n     *    <kendo-dateinput format=\"G\"\n     *      [formatPlaceholder]=\"{\n     *        year: 'y', month: 'M', day: 'd',\n     *        hour: 'h', minute: 'm', second: 's'\n     *      }\"\n     *    ></kendo-dateinput>\n     *  </div>\n     * </div>\n     * `\n     * })\n     * export class AppComponent { }\n     * ```\n     */\n    set formatPlaceholder(format) {\n      this._formatPlaceholder = format ? format : DEFAULT_FORMAT_PLACEHOLDER;\n    }\n    get formatPlaceholder() {\n      return this._formatPlaceholder;\n    }\n    /**\n     * Specifies the hint the DateInput displays when its value is `null`.\n     * For more information, refer to the article on\n     * [placeholders]({% slug placeholders_dateinput %}).\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-dateinput placeholder=\"Enter birth date...\"></kendo-dateinput>\n     * `\n     * })\n     * export class AppComponent { }\n     * ```\n     */\n\n    /**\n     * Specifies the value of the DateInput component.\n     *\n     * > The `value` has to be a valid [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance or `null`.\n     */\n    set value(value) {\n      this.verifyValue(value);\n      this.showClearButton = value || !value && this.isDateIncomplete ? true : false;\n      this._value = cloneDate(value);\n      this.valueUpdate.emit(cloneDate(value));\n    }\n    get value() {\n      return this._value;\n    }\n    /**\n     * Specifies whether the **Up** and **Down** spin buttons will be rendered.\n     * For more information, refer to the article on\n     * [spinner buttons]({% slug spinbuttons_dateinput %}).\n     */\n\n    /**\n     * Sets the size of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (Default)\n     * * `large`\n     * * `none`\n     *\n     */\n    set size(size) {\n      this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n      const newSize = size ? size : DEFAULT_SIZE;\n      if (newSize !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', newSize));\n      }\n      this._size = newSize;\n    }\n    get size() {\n      return this._size;\n    }\n    /**\n     * Sets the border radius of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (Default)\n     * * `large`\n     * * `full`\n     * * `none`\n     *\n     */\n    set rounded(rounded) {\n      this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n      const newRounded = rounded ? rounded : DEFAULT_ROUNDED;\n      if (newRounded !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n      }\n      this._rounded = newRounded;\n    }\n    get rounded() {\n      return this._rounded;\n    }\n    /**\n     * Sets the fillMode of the component.\n     *\n     * The possible values are:\n     * * `solid` (Default)\n     * * `flat`\n     * * `outline`\n     * * `none`\n     *\n     */\n    set fillMode(fillMode) {\n      this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n      const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE;\n      if (newFillMode !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', newFillMode));\n        if (this.spinners && this.spinup && this.spindown) {\n          this.setSpinnerFill(this.spinup.nativeElement, newFillMode, this.fillMode);\n          this.setSpinnerFill(this.spindown.nativeElement, newFillMode, this.fillMode);\n        }\n      }\n      this._fillMode = newFillMode;\n    }\n    get fillMode() {\n      return this._fillMode;\n    }\n    /**\n     * Sets the HTML attributes of the inner focusable input element. Attributes which are essential for certain component functionalities cannot be changed.\n     */\n    set inputAttributes(attributes) {\n      if (isObjectPresent(this.parsedAttributes)) {\n        removeHTMLAttributes(this.parsedAttributes, this.renderer, this.dateInput.nativeElement);\n      }\n      this._inputAttributes = attributes;\n      this.parsedAttributes = this.inputAttributes ? parseAttributes(this.inputAttributes, this.defaultAttributes) : this.inputAttributes;\n      this.setInputAttributes();\n    }\n    get inputAttributes() {\n      return this._inputAttributes;\n    }\n    /**\n     * Fires each time the user selects a new value\n     * ([see example](slug:events_dateinput)).\n     */\n\n    get wrapperClass() {\n      return true;\n    }\n    get disabledClass() {\n      return this.disabled;\n    }\n    get inputElement() {\n      return this.dateInput ? this.dateInput.nativeElement : null;\n    }\n    get inputValue() {\n      return (this.inputElement || {}).value || '';\n    }\n    get isActive() {\n      return this._active;\n    }\n    set isActive(value) {\n      this._active = value;\n      if (!this.wrapper) {\n        return;\n      }\n      if (!isPresent(this.pickerService)) {\n        const element = this.wrapper.nativeElement;\n        if (value) {\n          this.renderer.addClass(element, 'k-focus');\n        } else {\n          this.renderer.removeClass(element, 'k-focus');\n        }\n      }\n    }\n    /**\n     * @hidden\n     */\n    get formControl() {\n      const ngControl = this.injector.get(NgControl, null);\n      return ngControl?.control || null;\n    }\n    get options() {\n      return {\n        format: this.format,\n        steps: this.steps,\n        readonly: this.readonly,\n        formatPlaceholder: this.formatPlaceholder,\n        placeholder: this.placeholder,\n        autoCorrectParts: this.autoCorrectParts,\n        autoSwitchParts: this.autoSwitchParts,\n        selectPreviousSegmentOnBackspace: true,\n        autoSwitchKeys: this.autoSwitchKeys,\n        twoDigitYearMax: this.twoDigitYearMax,\n        enableMouseWheel: this.enableMouseWheel,\n        selectNearestSegmentOnFocus: true,\n        allowCaretMode: this.allowCaretMode,\n        autoFill: this.autoFill,\n        value: this.value,\n        intlService: new DateInputIntl(this.intl)\n      };\n    }\n    get defaultAttributes() {\n      return {\n        'aria-readonly': this.ariaReadOnly,\n        id: this.focusableId,\n        title: this.title,\n        tabindex: this.tabindex,\n        disabled: this.disabled ? '' : null,\n        readonly: this.readonly ? '' : null,\n        placeholder: this.placeholder,\n        'aria-expanded': this.isPopupOpen,\n        'aria-haspopup': this.hasPopup,\n        required: this.isControlRequired ? '' : null\n      };\n    }\n    get mutableAttributes() {\n      return {\n        autocomplete: 'off',\n        autocorrect: 'off',\n        autocapitalize: 'off',\n        spellcheck: 'false',\n        role: this.role\n      };\n    }\n    constructor(cdr, intl, renderer, wrapper, ngZone, injector, localization, pickerService) {\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"wrapper\", void 0);\n      _defineProperty(this, \"ngZone\", void 0);\n      _defineProperty(this, \"injector\", void 0);\n      _defineProperty(this, \"localization\", void 0);\n      _defineProperty(this, \"pickerService\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"caretAltUpIcon\", caretAltUpIcon);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"xIcon\", xIcon);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"caretAltDownIcon\", caretAltDownIcon);\n      _defineProperty(this, \"clearButton\", false);\n      /**\n       * Sets or gets the `disabled` property of the DateInput and\n       * determines whether the component is active\n       * ([see example]({% slug disabled_dateinput %})).\n       * To learn how to disable the component in reactive forms, refer to the article on [Forms Support](slug:formssupport_dateinput#toc-managing-the-dateinput-disabled-state-in-reactive-forms).\n       */\n      _defineProperty(this, \"disabled\", false);\n      /**\n       * Sets or gets the read-only state of the DateInput\n       * ([see example]({% slug readonly_dateinput %})).\n       *\n       * @default false\n       */\n      _defineProperty(this, \"readonly\", false);\n      /**\n       * Sets the title of the input element of the DateInput.\n       */\n      _defineProperty(this, \"title\", \"\");\n      /**\n       * Sets or gets the `tabIndex` property of the DateInput.\n       */\n      _defineProperty(this, \"tabindex\", 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"role\", 'textbox');\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"ariaReadOnly\", false);\n      _defineProperty(this, \"isRequired\", false);\n      /**\n       * Specifies the date format that is used to display the input value\n       * ([see example]({% slug formats_dateinput %})).\n       *\n       * Format value options:\n       * - `string` - Provide a `string` if a single format is going to be used regardless whether the input is focused or blurred.\n       * - [`FormatSettings`]({% slug api_dateinputs_formatsettings %}) - To display different formats when the component is focused or blurred, provide a settings object with specified `inputFormat` and `displayFormat` values.\n       */\n      _defineProperty(this, \"format\", DEFAULT_FORMAT$1);\n      _defineProperty(this, \"placeholder\", null);\n      /**\n       * Configures the incremental steps of the DateInput.\n       * For more information, refer to the article on\n       * [incremental steps]({% slug incrementalsteps_dateinput %}).\n       *\n       * @example\n       * ```ts\n       * _@Component({\n       * selector: 'my-app',\n       * template: `\n       *  <kendo-dateinput [steps]=\"steps\"></kendo-dateinput>\n       * `\n       * })\n       * export class AppComponent {\n       *   public steps = { year: 10, month: 1, day: 5 };\n       * }\n       * ```\n       */\n      _defineProperty(this, \"steps\", {});\n      /**\n       * Specifies the biggest date that is valid\n       * ([see example]({% slug dateranges_dateinput %})).\n       * By default, the `max` value is `2099-12-31`.\n       */\n      _defineProperty(this, \"max\", void 0);\n      /**\n       * Specifies the smallest date that is valid\n       * ([see example]({% slug dateranges_dateinput %})).\n       * By default, the `min` value is `1900-1-1`.\n       */\n      _defineProperty(this, \"min\", void 0);\n      /**\n       * Determines whether the built-in min or max validators are to be enforced when a form is being validated.\n       */\n      _defineProperty(this, \"rangeValidation\", true);\n      /**\n       * Determines whether to autocorrect invalid segments automatically.\n       *\n       * @default true\n       */\n      _defineProperty(this, \"autoCorrectParts\", true);\n      /**\n       * Determines whether to automatically move to the next segment after the user completes the current one.\n       *\n       * @default true\n       */\n      _defineProperty(this, \"autoSwitchParts\", true);\n      /**\n       * A string array representing custom keys, which will move the focus to the next date format segment.\n       */\n      _defineProperty(this, \"autoSwitchKeys\", []);\n      /**\n       * Determines if the users should see a blinking caret inside the Date Input when possible.\n       *\n       * @default false\n       */\n      _defineProperty(this, \"allowCaretMode\", false);\n      /**\n       * When enabled, the DateInput will autofill the rest of the date to the current date when the component loses focus.\n       *\n       * @default false\n       */\n      _defineProperty(this, \"autoFill\", false);\n      /**\n       * Determines whether the built-in validation for incomplete dates is to be enforced when a form is being validated.\n       */\n      _defineProperty(this, \"incompleteDateValidation\", false);\n      /**\n       * The maximum year to assume to be from the current century when typing two-digit year value\n       * ([see example]({% slug formats_dateinput %}#toc-two-digit-year-format)).\n       *\n       * The default value is 68, indicating that typing any value less than 69\n       * will be assumed to be 20xx, while 69 and larger will be assumed to be 19xx.\n       */\n      _defineProperty(this, \"twoDigitYearMax\", TWO_DIGIT_YEAR_MAX$2);\n      /**\n       * Indicates whether the mouse scroll can be used to increase/decrease the time segments values.\n       *\n       * @default true\n       */\n      _defineProperty(this, \"enableMouseWheel\", true);\n      _defineProperty(this, \"spinners\", false);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"isPopupOpen\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"hasPopup\", void 0);\n      _defineProperty(this, \"valueChange\", new EventEmitter());\n      /**\n       * @hidden\n       * Fires each time the user selects a new value\n       * ([see example](slug:events_dateinput)).\n       */\n      _defineProperty(this, \"valueUpdate\", new EventEmitter());\n      /**\n       * Fires each time the user focuses the input element\n       * ([see example](slug:events_dateinput)).\n       */\n      _defineProperty(this, \"onFocus\", new EventEmitter());\n      /**\n       * Fires each time the input element gets blurred\n       * ([see example](slug:events_dateinput)).\n       */\n      _defineProperty(this, \"onBlur\", new EventEmitter());\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"dateInput\", void 0);\n      _defineProperty(this, \"arrow\", Arrow);\n      _defineProperty(this, \"arrowDirection\", Arrow.None);\n      _defineProperty(this, \"formatSections\", {\n        date: false,\n        time: false\n      });\n      _defineProperty(this, \"hasMousedown\", false);\n      _defineProperty(this, \"focusedPriorToMousedown\", false);\n      _defineProperty(this, \"showClearButton\", false);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"isDateIncomplete\", false);\n      _defineProperty(this, \"currentFormat\", \"\");\n      _defineProperty(this, \"spinup\", void 0);\n      _defineProperty(this, \"spindown\", void 0);\n      _defineProperty(this, \"minValidator\", noop$2);\n      _defineProperty(this, \"maxValidator\", noop$2);\n      _defineProperty(this, \"incompleteValidator\", noop$2);\n      _defineProperty(this, \"_value\", null);\n      _defineProperty(this, \"_active\", false);\n      _defineProperty(this, \"_focusableId\", `dateinput-${nextId++}`);\n      _defineProperty(this, \"_formatPlaceholder\", DEFAULT_FORMAT_PLACEHOLDER);\n      _defineProperty(this, \"kendoDate\", null);\n      _defineProperty(this, \"kendoDateObject\", null);\n      _defineProperty(this, \"domEvents\", []);\n      _defineProperty(this, \"ngControl\", void 0);\n      _defineProperty(this, \"onControlChange\", noop$2);\n      _defineProperty(this, \"onControlTouched\", noop$2);\n      _defineProperty(this, \"onValidatorChange\", noop$2);\n      _defineProperty(this, \"_size\", DEFAULT_SIZE);\n      _defineProperty(this, \"_rounded\", DEFAULT_ROUNDED);\n      _defineProperty(this, \"_fillMode\", DEFAULT_FILL_MODE);\n      _defineProperty(this, \"control\", void 0);\n      _defineProperty(this, \"subs\", new Subscription());\n      _defineProperty(this, \"_inputAttributes\", void 0);\n      _defineProperty(this, \"parsedAttributes\", {});\n      this.cdr = cdr;\n      this.intl = intl;\n      this.renderer = renderer;\n      this.wrapper = wrapper;\n      this.ngZone = ngZone;\n      this.injector = injector;\n      this.localization = localization;\n      this.pickerService = pickerService;\n      validatePackage(packageMetadata);\n      if (this.pickerService) {\n        this.pickerService.input = this;\n      } else {\n        this.ariaReadOnly = null;\n      }\n    }\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty\n     */\n    isEmpty() {\n      const currentValue = this.dateInput.nativeElement.value;\n      return !currentValue || !String(currentValue).trim();\n    }\n    /**\n     * @hidden\n     */\n    handleDragAndDrop(args) {\n      args.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    containsElement(element) {\n      return Boolean(closest(element, node => node === this.wrapper.nativeElement));\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n      if (this.kendoDate) {\n        this.kendoDate.destroy();\n      }\n      this.kendoDate = this.initKendoDate();\n      this.kendoDateObject = this.kendoDate.dateObject;\n      this.updateFormatSections();\n      this.subs.add(this.intl.changes.subscribe(this.intlChange.bind(this)));\n      this.ngControl = this.injector.get(NgControl, null);\n      if (this.wrapper) {\n        this.renderer.removeAttribute(this.wrapper.nativeElement, 'tabindex');\n      }\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n      this.verifyRange();\n      if (anyChanged(['min', 'max', 'rangeValidation', 'incompleteDateValidation'], changes, false)) {\n        this.minValidator = this.rangeValidation ? minValidator(this.min) : noop$2;\n        this.maxValidator = this.rangeValidation ? maxValidator(this.max) : noop$2;\n        this.incompleteValidator = this.incompleteDateValidation ? incompleteDateValidator() : noop$2;\n        this.onValidatorChange();\n      }\n      if (changes['clearButton']) {\n        this.showClearButton = this.clearButton && (isPresent(this.value) || this.isDateIncomplete);\n      }\n      const isEqualToKendoDate = this.kendoDate && isEqual(this.value, this.kendoDate.value);\n      if (!isEqualToKendoDate) {\n        if (!this.kendoDate) {\n          return;\n        }\n        this.kendoDate.writeValue(this.value);\n      }\n      if (changes['format'] || changes['placeholder']) {\n        if (!this.kendoDate) {\n          return;\n        }\n        this.kendoDate?.setOptions(this.options, true);\n        this.updateFormatSections();\n      }\n      if (anyChanged(['enableMouseWheel', 'autoFill', 'autoSwitchParts', 'autoSwitchKeys', 'twoDigitYearMax', 'allowCaretMode', 'autoCorrectParts', 'readonly', 'steps', 'formatPlaceholder'], changes)) {\n        if (!this.kendoDate) {\n          return;\n        }\n        this.kendoDate?.setOptions(this.options, true);\n      }\n    }\n    updateFormatSections() {\n      this.formatSections = this.intl.splitDateFormat(this.kendoDate.inputFormat).reduce(({\n        date,\n        time\n      }, p) => {\n        return {\n          date: date || DATE_PART_REGEXP.test(p.type),\n          time: time || TIME_PART_REGEXP.test(p.type)\n        };\n      }, {\n        date: false,\n        time: false\n      });\n    }\n    updateIncompleteValidationStatus() {\n      const previousValue = this.isDateIncomplete;\n      this.isDateIncomplete = this.kendoDateObject.hasValue() && this.value === null;\n      if (previousValue === this.isDateIncomplete || !this.incompleteDateValidation) {\n        return;\n      }\n      if (isPresent(this.ngControl) && !isPresent(this.pickerService)) {\n        this.cdr.markForCheck();\n        this.ngZone.run(() => this.onValidatorChange());\n      } else if (isPresent(this.pickerService)) {\n        this.pickerService.dateCompletenessChange.emit();\n      }\n    }\n    ngAfterViewInit() {\n      this.setComponentClasses();\n      const formControl = this.injector.get(NgControl, null)?.control;\n      this.control = formControl;\n      this.subs.add(this.formControl?.statusChanges.subscribe(() => this.setAriaInvalid()));\n      this.setAriaInvalid();\n      this.subs.add(this.dateInput?.nativeElement.addEventListener('keydown', this.handleKeyDown, true));\n    }\n    ngOnDestroy() {\n      this.subs.unsubscribe();\n      if (this.pickerService) {\n        this.pickerService.input = null;\n      }\n      this.domEvents.forEach(unbindCallback => unbindCallback());\n    }\n    /**\n     * @hidden\n     */\n    setAriaInvalid() {\n      if (!this.control) {\n        return;\n      }\n      if (this.control.invalid) {\n        this.renderer.setAttribute(this.inputElement, attributeNames.ariaInvalid, 'true');\n      } else {\n        this.renderer.setAttribute(this.inputElement, attributeNames.ariaInvalid, 'false');\n      }\n    }\n    /**\n     * @hidden\n     */\n    get isControlRequired() {\n      return isControlRequired(this.formControl) || this.isRequired;\n    }\n    /**\n     * @hidden\n     */\n    validate(control) {\n      return this.minValidator(control) || this.maxValidator(control) || this.incompleteValidator(control, this.isDateIncomplete);\n    }\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn) {\n      this.onValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n    //ngModel binding\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n      this.verifyValue(value);\n      this.value = cloneDate(value);\n      this.kendoDate?.setOptions(this.options, true);\n      this.kendoDateObject?.setValue(this.value);\n      this.kendoDate?.refreshElementValue();\n    }\n    resetInput() {\n      this.isDateIncomplete = false;\n      this.writeValue(null);\n      // Notify datepicker that a change has happened and emit `valueChange`\n      this.notify();\n      this.showClearButton = false;\n    }\n    /**\n     * @hidden\n     */\n    triggerChange() {\n      const value = this.kendoDate.value;\n      const oneValuePresent = isPresent(value) !== isPresent(this.value);\n      if (+value !== +this.value || oneValuePresent) {\n        this.value = cloneDate(value);\n        this.notify();\n      }\n    }\n    /**\n     * @hidden\n     */\n    notify() {\n      this.ngZone.run(() => {\n        this.showClearButton = this.value ? true : false;\n        this.onControlChange(cloneDate(this.value));\n        this.valueChange.emit(cloneDate(this.value));\n      });\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n      this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n      this.onControlTouched = fn;\n    }\n    /**\n     * Focuses the DateInput component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"dateinput.focus()\">Focus date input</button>\n     *  <kendo-dateinput #dateinput></kendo-dateinput>\n     * `\n     * })\n     * export class AppComponent { }\n     * ```\n     */\n    focus() {\n      this.kendoDate && this.kendoDate.focus();\n    }\n    /**\n     * Blurs the DateInput component.\n     */\n    blur() {\n      const input = this.inputElement;\n      if (input) {\n        input.blur();\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleButtonClick(offset) {\n      this.showClearButton = true;\n      this.arrowDirection = Arrow.None;\n      if (!this.isActive) {\n        this.kendoDate.focus();\n      }\n      this.kendoDate.modifyDateSegmentValue(offset);\n    }\n    initKendoDate() {\n      const kendoDate = new DateInput(this.dateInput.nativeElement, {\n        ...this.options,\n        events: {\n          valueChange: this.onWidgetValueChange.bind(this),\n          inputEnd: this.onWidgetInputEnd.bind(this),\n          focusEnd: this.onWidgetFocus.bind(this),\n          blurEnd: this.onWidgetBlur.bind(this),\n          keydown: this.onWidgetKeyDown.bind(this)\n        }\n      });\n      return kendoDate;\n    }\n    onWidgetValueChange() {\n      this.triggerChange();\n    }\n    onWidgetKeyDown() {\n      this.kendoDateObject = this.kendoDate.dateObject;\n    }\n    onWidgetInputEnd() {\n      this.updateIncompleteValidationStatus();\n      if (this.clearButton) {\n        this.showClearButton = this.value || this.isDateIncomplete ? true : false;\n        this.cdr.markForCheck();\n      }\n    }\n    onWidgetFocus(args) {\n      this.isActive = true;\n      if (hasObservers(this.onFocus)) {\n        this.ngZone.run(() => {\n          this.emitFocus(args.event);\n        });\n      } else {\n        this.emitFocus(args.event);\n      }\n    }\n    onWidgetBlur(args) {\n      this.isActive = false;\n      if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.ngControl)) {\n        this.ngZone.run(() => {\n          this.onControlTouched();\n          this.emitBlur(args.event);\n          this.cdr.markForCheck();\n        });\n      } else {\n        this.emitBlur(args.event);\n      }\n    }\n    handleKeyDown(event) {\n      // an event without keyCode is triggered when using Edge's autofill -> ignore it in the common package\n      if (!isPresent(event.keyCode)) {\n        event.stopImmediatePropagation();\n      }\n    }\n    verifyRange() {\n      if (!isDevMode()) {\n        return;\n      }\n      if (!isValidRange(this.min, this.max)) {\n        throw new Error(`The max value should be bigger than the min. See ${MIN_DOC_LINK$1} and ${MAX_DOC_LINK$1}.`);\n      }\n    }\n    verifyValue(value) {\n      if (!isDevMode()) {\n        return;\n      }\n      if (value && !(value instanceof Date)) {\n        throw new Error(`The 'value' should be a valid JavaScript Date instance or null. Check ${VALUE_DOC_LINK$3} for possible resolution.`);\n      }\n    }\n    intlChange() {\n      this.kendoDate.setOptions(this.options, true);\n      this.updateFormatSections();\n    }\n    emitFocus(args) {\n      this.onFocus.emit();\n      if (this.pickerService) {\n        this.pickerService.onFocus.emit(args);\n      }\n    }\n    emitBlur(args) {\n      this.onBlur.emit();\n      if (this.pickerService) {\n        this.pickerService.onBlur.emit(args);\n      }\n    }\n    setSpinnerFill(spinner, fill, oldFill) {\n      if (oldFill !== 'none') {\n        this.renderer.removeClass(spinner, `k-button-${oldFill}`);\n        this.renderer.removeClass(spinner, `k-button-${oldFill}-base`);\n      }\n      this.renderer.addClass(spinner, `k-button-${fill}`);\n      this.renderer.addClass(spinner, `k-button-${fill}-base`);\n    }\n    setComponentClasses() {\n      if (this.size !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n      }\n      if (this.rounded !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n      }\n      if (this.fillMode !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n      }\n      if (this.spinners && this.fillMode !== 'none') {\n        this.setSpinnerFill(this.spinup.nativeElement, this.fillMode);\n        this.setSpinnerFill(this.spindown.nativeElement, this.fillMode);\n      }\n    }\n    setInputAttributes() {\n      const attributesToRender = Object.assign({}, this.mutableAttributes, this.parsedAttributes);\n      setHTMLAttributes(attributesToRender, this.renderer, this.dateInput.nativeElement, this.ngZone);\n    }\n  }\n  _class45 = DateInputComponent;\n  _defineProperty(DateInputComponent, \"\\u0275fac\", function _class45_Factory(t) {\n    return new (t || _class45)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.IntlService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i1$1.LocalizationService), i0.ɵɵdirectiveInject(PickerService, 8));\n  });\n  _defineProperty(DateInputComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class45,\n    selectors: [[\"kendo-dateinput\"]],\n    viewQuery: function _class45_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c26, 7);\n        i0.ɵɵviewQuery(_c27, 5);\n        i0.ɵɵviewQuery(_c28, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dateInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.spinup = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.spindown = _t.first);\n      }\n    },\n    hostVars: 8,\n    hostBindings: function _class45_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-readonly\", ctx.readonly)(\"k-input\", ctx.wrapperClass)(\"k-dateinput\", ctx.wrapperClass)(\"k-disabled\", ctx.disabledClass);\n      }\n    },\n    inputs: {\n      focusableId: \"focusableId\",\n      pickerType: \"pickerType\",\n      clearButton: \"clearButton\",\n      disabled: \"disabled\",\n      readonly: \"readonly\",\n      title: \"title\",\n      tabindex: \"tabindex\",\n      role: \"role\",\n      ariaReadOnly: \"ariaReadOnly\",\n      tabIndex: \"tabIndex\",\n      isRequired: \"isRequired\",\n      format: \"format\",\n      formatPlaceholder: \"formatPlaceholder\",\n      placeholder: \"placeholder\",\n      steps: \"steps\",\n      max: \"max\",\n      min: \"min\",\n      rangeValidation: \"rangeValidation\",\n      autoCorrectParts: \"autoCorrectParts\",\n      autoSwitchParts: \"autoSwitchParts\",\n      autoSwitchKeys: \"autoSwitchKeys\",\n      allowCaretMode: \"allowCaretMode\",\n      autoFill: \"autoFill\",\n      incompleteDateValidation: \"incompleteDateValidation\",\n      twoDigitYearMax: \"twoDigitYearMax\",\n      enableMouseWheel: \"enableMouseWheel\",\n      value: \"value\",\n      spinners: \"spinners\",\n      isPopupOpen: \"isPopupOpen\",\n      hasPopup: \"hasPopup\",\n      size: \"size\",\n      rounded: \"rounded\",\n      fillMode: \"fillMode\",\n      inputAttributes: \"inputAttributes\"\n    },\n    outputs: {\n      valueChange: \"valueChange\",\n      valueUpdate: \"valueUpdate\",\n      onFocus: \"focus\",\n      onBlur: \"blur\"\n    },\n    exportAs: [\"kendo-dateinput\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => _class45),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => _class45),\n      multi: true\n    }, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.dateinput'\n    }, {\n      provide: KendoInput,\n      useExisting: forwardRef(() => _class45)\n    }, LocalizationService]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 5,\n    vars: 18,\n    consts: function () {\n      let i18n_29;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the **Increment** button in the DateInput\n         * @meaning kendo.dateinput.increment\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_30 = goog.getMsg(\"Increase value\");\n        i18n_29 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_30;\n      } else {\n        i18n_29 = $localize`:kendo.dateinput.increment|The label for the **Increment** button in the DateInput:Increase value`;\n      }\n      let i18n_31;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the **Decrement** button in the DateInput\n         * @meaning kendo.dateinput.decrement\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_32 = goog.getMsg(\"Decrease value\");\n        i18n_31 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_32;\n      } else {\n        i18n_31 = $localize`:kendo.dateinput.decrement|The label for the **Decrement** button in the DateInput:Decrease value`;\n      }\n      let i18n_33;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the clear button\n         * @meaning kendo.dateinput.clearTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_34 = goog.getMsg(\"clear\");\n        i18n_33 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_34;\n      } else {\n        i18n_33 = $localize`:kendo.dateinput.clearTitle|The title of the clear button:clear`;\n      }\n      return [[\"kendoDateInputLocalizedMessages\", \"\", \"increment\", i18n_29, \"decrement\", i18n_31, \"clearTitle\", i18n_33], [\"autocomplete\", \"off\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", \"spellcheck\", \"false\", 1, \"k-input-inner\", 3, \"id\", \"title\", \"tabindex\", \"disabled\", \"readonly\", \"placeholder\", \"kendoEventsOutsideAngular\", \"scope\"], [\"dateInput\", \"\"], [\"class\", \"k-clear-value\", \"role\", \"button\", \"tabindex\", \"-1\", 3, \"click\", \"mousedown\", 4, \"ngIf\"], [\"class\", \"k-input-spinner k-spin-button\", 3, \"mousedown\", 4, \"ngIf\"], [\"role\", \"button\", \"tabindex\", \"-1\", 1, \"k-clear-value\", 3, \"click\", \"mousedown\"], [\"name\", \"x\", 3, \"svgIcon\"], [1, \"k-input-spinner\", \"k-spin-button\", 3, \"mousedown\"], [\"tabindex\", \"-1\", 1, \"k-spinner-increase\", \"k-button\", \"k-icon-button\", 3, \"title\", \"mousedown\", \"mouseleave\", \"click\"], [\"spinup\", \"\"], [\"name\", \"caret-alt-up\", \"innerCssClass\", \"k-button-icon\", 3, \"svgIcon\"], [\"tabindex\", \"-1\", 1, \"k-spinner-decrease\", \"k-button\", \"k-icon-button\", 3, \"title\", \"click\", \"mousedown\", \"mouseleave\"], [\"spindown\", \"\"], [\"name\", \"caret-alt-down\", \"innerCssClass\", \"k-button-icon\", 3, \"svgIcon\"]];\n    },\n    template: function _class45_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n        i0.ɵɵelement(1, \"input\", 1, 2);\n        i0.ɵɵtemplate(3, _class45_span_3_Template, 2, 2, \"span\", 3);\n        i0.ɵɵtemplate(4, _class45_span_4_Template, 7, 10, \"span\", 4);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"id\", ctx.focusableId)(\"title\", ctx.title)(\"tabindex\", ctx.tabindex)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"placeholder\", ctx.placeholder)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(15, _c35, ctx.handleDragAndDrop, ctx.handleDragAndDrop))(\"scope\", ctx);\n        i0.ɵɵattribute(\"required\", ctx.isControlRequired ? \"\" : null)(\"role\", ctx.role)(\"aria-readonly\", ctx.ariaReadOnly)(\"aria-expanded\", ctx.isPopupOpen)(\"aria-haspopup\", ctx.hasPopup);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.clearButton && ctx.showClearButton);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      }\n    },\n    dependencies: [DateInputLocalizedMessagesDirective, EventsOutsideAngularDirective, NgIf, IconWrapperComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return DateInputComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A preventable event instance which is triggered by the `open` and `close` events.\n */\nclass PreventableEvent {\n  /** @hidden */\n  constructor() {\n    _defineProperty(this, \"prevented\", false);\n  }\n  /**\n   * Prevents the default action for a specified event.\n   * In this way, the source component suppresses the built-in behavior that follows the event.\n   */\n  preventDefault() {\n    this.prevented = true;\n  }\n  /**\n   * If the event is prevented by any of its subscribers, returns `true`.\n   *\n   * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n   */\n  isDefaultPrevented() {\n    return this.prevented;\n  }\n}\n\n/**\n * @hidden\n */\nconst disabledDatesValidator = isDateDisabled => {\n  return control => {\n    if (!isDateDisabled || !control.value) {\n      return null;\n    }\n    const error = {\n      disabledDate: true\n    };\n    return isDateDisabled(control.value) ? error : null;\n  };\n};\n\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\nlet CalendarCustomMessagesComponent = /*#__PURE__*/(() => {\n  var _class47;\n  class CalendarCustomMessagesComponent extends CalendarMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n    get override() {\n      return true;\n    }\n  }\n  _class47 = CalendarCustomMessagesComponent;\n  _defineProperty(CalendarCustomMessagesComponent, \"\\u0275fac\", function _class47_Factory(t) {\n    return new (t || _class47)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(CalendarCustomMessagesComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class47,\n    selectors: [[\"kendo-calendar-messages\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CalendarMessages,\n      useExisting: forwardRef(() => _class47)\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function _class47_Template(rf, ctx) {},\n    encapsulation: 2\n  }));\n  return CalendarCustomMessagesComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\nlet DateInputCustomMessagesComponent = /*#__PURE__*/(() => {\n  var _class48;\n  class DateInputCustomMessagesComponent extends DateInputMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n    get override() {\n      return true;\n    }\n  }\n  _class48 = DateInputCustomMessagesComponent;\n  _defineProperty(DateInputCustomMessagesComponent, \"\\u0275fac\", function _class48_Factory(t) {\n    return new (t || _class48)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(DateInputCustomMessagesComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class48,\n    selectors: [[\"kendo-dateinput-messages\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: DateInputMessages,\n      useExisting: forwardRef(() => _class48)\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function _class48_Template(rf, ctx) {},\n    encapsulation: 2\n  }));\n  return DateInputCustomMessagesComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet DatePickerMessages = /*#__PURE__*/(() => {\n  var _class49;\n  class DatePickerMessages extends ComponentMessages {\n    constructor(...args) {\n      super(...args);\n      /**\n       * The **Today** button text in the header of the Calendar.\n       */\n      _defineProperty(this, \"today\", void 0);\n      /**\n       * The title of the **Toggle** button of the DatePicker.\n       */\n      _defineProperty(this, \"toggle\", void 0);\n      /**\n       * The title of the **Prev** button in the header of the Classic Calendar.\n       */\n      _defineProperty(this, \"prevButtonTitle\", void 0);\n      /**\n       * The title of the **Next** button in the header of the Classic Calendar.\n       */\n      _defineProperty(this, \"nextButtonTitle\", void 0);\n      /**\n       * The title of the **Parent View** button in the header of the Calendar.\n       */\n      _defineProperty(this, \"parentViewButtonTitle\", void 0);\n      /**\n       * The title of the **Clear** button of the DatePicker.\n       */\n      _defineProperty(this, \"clearTitle\", void 0);\n    }\n  }\n  _class49 = DatePickerMessages;\n  _defineProperty(DatePickerMessages, \"\\u0275fac\", /* @__PURE__ */function () {\n    let ɵ_class49_BaseFactory;\n    return function _class49_Factory(t) {\n      return (ɵ_class49_BaseFactory || (ɵ_class49_BaseFactory = i0.ɵɵgetInheritedFactory(_class49)))(t || _class49);\n    };\n  }());\n  _defineProperty(DatePickerMessages, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class49,\n    selectors: [[\"kendo-datepicker-messages-base\"]],\n    inputs: {\n      today: \"today\",\n      toggle: \"toggle\",\n      prevButtonTitle: \"prevButtonTitle\",\n      nextButtonTitle: \"nextButtonTitle\",\n      parentViewButtonTitle: \"parentViewButtonTitle\",\n      clearTitle: \"clearTitle\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  }));\n  return DatePickerMessages;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet DatePickerLocalizedMessagesDirective = /*#__PURE__*/(() => {\n  var _class50;\n  class DatePickerLocalizedMessagesDirective extends DatePickerMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n  }\n  _class50 = DatePickerLocalizedMessagesDirective;\n  _defineProperty(DatePickerLocalizedMessagesDirective, \"\\u0275fac\", function _class50_Factory(t) {\n    return new (t || _class50)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(DatePickerLocalizedMessagesDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class50,\n    selectors: [[\"\", \"kendoDatePickerLocalizedMessages\", \"\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: DatePickerMessages,\n      useExisting: forwardRef(() => _class50)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  }));\n  return DatePickerLocalizedMessagesDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst MIN_DOC_LINK = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/api/DatePickerComponent/#toc-min';\nconst MAX_DOC_LINK = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/api/DatePickerComponent/#toc-max';\nconst VALUE_DOC_LINK$2 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/datepicker/#toc-using-with-json';\nconst DEFAULT_FORMAT = 'd';\nconst TWO_DIGIT_YEAR_MAX$1 = 68;\n/**\n * Represents the [Kendo UI DatePicker component for Angular](slug:overview_datepicker).\n */\nlet DatePickerComponent = /*#__PURE__*/(() => {\n  var _class51;\n  class DatePickerComponent extends MultiTabStop {\n    /**\n     * @hidden\n     */\n    set cellTemplateRef(template) {\n      this.cellTemplate = template;\n    }\n    /**\n     * If set to `true`, renders a clear button after the input text or DatePicker value has been changed.\n     * Clicking this button resets the value of the component to `null` and triggers the `valueChange` event.\n     * @default false\n     */\n\n    /**\n     * @hidden\n     */\n    set monthCellTemplateRef(template) {\n      this.monthCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n    /**\n     * @hidden\n     */\n    set yearCellTemplateRef(template) {\n      this.yearCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n    /**\n     * @hidden\n     */\n    set decadeCellTemplateRef(template) {\n      this.decadeCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n    /**\n     * @hidden\n     */\n    set centuryCellTemplateRef(template) {\n      this.centuryCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n    /**\n     * @hidden\n     */\n    set weekNumberTemplateRef(template) {\n      this.weekNumberTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n    /**\n     * @hidden\n     */\n    set headerTitleTemplateRef(template) {\n      this.headerTitleTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n    /**\n     * @hidden\n     */\n    set headerTemplateRef(template) {\n      this.headerTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n    /**\n     * @hidden\n     */\n    set footerTemplateRef(template) {\n      this.footerTemplate = template;\n    }\n    /**\n     * Toggles the visibility of the Calendar footer.\n     * @default false\n     */\n\n    /**\n     * @hidden\n     */\n    set navigationItemTemplateRef(template) {\n      this.navigationItemTemplate = template;\n    }\n    /**\n     * Sets the format of the displayed Calendar week days' names.\n     * @default 'short'\n     */\n\n    /**\n     * Configures the popup options of the DatePicker.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `appendTo: 'root' | 'component' | ViewContainerRef`&mdash;Controls the popup container. By default, the popup will be appended to the root component.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     */\n    set popupSettings(settings) {\n      this._popupSettings = Object.assign({}, {\n        animate: true\n      }, settings);\n    }\n    get popupSettings() {\n      return this._popupSettings;\n    }\n    /**\n     * Sets or gets the `navigation` property of the Calendar\n     * and determines whether the navigation side-bar is displayed.\n     * ([see example]({% slug sidebar_datepicker %})).\n     */\n    set navigation(state) {\n      this._navigation = state;\n    }\n    get navigation() {\n      if (this.isAdaptive) {\n        return;\n      }\n      return this._navigation;\n    }\n    /**\n     * Specifies the value of the DatePicker component.\n     *\n     * > The `value` has to be a valid\n     * [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance or `null`.\n     */\n    set value(value) {\n      this.verifyValue(value);\n      this._value = cloneDate(value);\n    }\n    get value() {\n      return this._value;\n    }\n    /**\n     * Specifies the date format that is used to display the input value\n     * ([see example]({% slug formats_datepicker %})).\n     *\n     * Format value options:\n     * - `string` - Provide a `string` if a single format is going to be used regardless whether the input is focused or blurred.\n     * - [`FormatSettings`]({% slug api_dateinputs_formatsettings %}) - To display different formats when the component is focused or blurred, provide a settings object with specified `inputFormat` and `displayFormat` values.\n     */\n\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n      this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n      return this.tabindex;\n    }\n    /**\n     * Sets the dates of the DatePicker that will be disabled\n     * ([see example]({% slug disabled_dates_datepicker %})).\n     */\n    set disabledDates(value) {\n      this._disabledDates = value;\n      this.disabledDatesService.initialize(value);\n    }\n    get disabledDates() {\n      return this._disabledDates;\n    }\n    /**\n     * Sets the title of the input element of the DatePicker and the title text rendered\n     * in the header of the popup(action sheet). Applicable only when [`AdaptiveMode` is set to `auto`](slug:api_dateinputs_adaptivemode).\n     */\n\n    /**\n     * Sets the subtitle text rendered in the header of the popup(action sheet).\n     * Applicable only when [`AdaptiveMode` is set to `auto`](slug:api_dateinputs_adaptivemode).\n     */\n    set subtitle(subtitle) {\n      this._subtitle = subtitle;\n    }\n    get subtitle() {\n      return this._subtitle || this.placeholder;\n    }\n    /**\n     * Sets the size of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (Default)\n     * * `large`\n     * * `none`\n     *\n     */\n    set size(size) {\n      this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n      this.renderer.removeClass(this.toggleButton.nativeElement, getSizeClass('button', this.size));\n      const newSize = size ? size : DEFAULT_SIZE;\n      if (newSize !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', newSize));\n        this.renderer.addClass(this.toggleButton.nativeElement, getSizeClass('button', newSize));\n      }\n      this._size = newSize;\n    }\n    get size() {\n      return this._size;\n    }\n    /**\n     * Sets the border radius of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (Default)\n     * * `large`\n     * * `full`\n     * * `none`\n     *\n     */\n    set rounded(rounded) {\n      this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n      const newRounded = rounded ? rounded : DEFAULT_ROUNDED;\n      if (newRounded !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n      }\n      this._rounded = newRounded;\n    }\n    get rounded() {\n      return this._rounded;\n    }\n    /**\n     * Sets the fillMode of the component.\n     *\n     * The possible values are:\n     * * `solid` (Default)\n     * * `flat`\n     * * `outline`\n     * * `none`\n     *\n     */\n    set fillMode(fillMode) {\n      this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n      this.renderer.removeClass(this.toggleButton.nativeElement, getFillModeClass('button', this.fillMode));\n      this.renderer.removeClass(this.toggleButton.nativeElement, `k-button-${this.fillMode}-base`);\n      const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE;\n      if (newFillMode !== 'none') {\n        this.renderer.addClass(this.toggleButton.nativeElement, getFillModeClass('button', newFillMode));\n        this.renderer.addClass(this.toggleButton.nativeElement, `k-button-${newFillMode}-base`);\n        this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', newFillMode));\n      }\n      this._fillMode = newFillMode;\n    }\n    get fillMode() {\n      return this._fillMode;\n    }\n    /**\n     * Enables or disables the adaptive mode. By default the adaptive rendering is disabled.\n     */\n\n    /**\n     * @hidden\n     */\n    get disabledClass() {\n      return this.disabled;\n    }\n    get popupUID() {\n      return this.calendar?.popupId;\n    }\n    get isActive() {\n      return this._active;\n    }\n    set isActive(value) {\n      this._active = value;\n      if (!this.wrapper) {\n        return;\n      }\n      const element = this.wrapper.nativeElement;\n      if (value) {\n        this.renderer.addClass(element, 'k-focus');\n      } else {\n        this.renderer.removeClass(element, 'k-focus');\n      }\n    }\n    get show() {\n      return this._show;\n    }\n    set show(show) {\n      if (show && (this.disabled || this.readonly)) {\n        return;\n      }\n      const skipZone = !show && (!this._show || !hasObservers(this.close) && !hasObservers(this.open));\n      if (!skipZone) {\n        this.zone.run(() => {\n          const event = new PreventableEvent();\n          if (!this._show && show) {\n            this.open.emit(event);\n          } else if (this._show && !show) {\n            this.close.emit(event);\n          }\n          if (event.isDefaultPrevented()) {\n            return;\n          }\n          this.toggleCalendar(show);\n        });\n      } else {\n        this.toggleCalendar(show);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n    /**\n     * @hidden\n     */\n    get isControlRequired() {\n      return isControlRequired(this.control);\n    }\n    constructor(zone, localization, cdr, popupService, wrapper, renderer, injector, pickerService, disabledDatesService, adaptiveService) {\n      super();\n      _defineProperty(this, \"zone\", void 0);\n      _defineProperty(this, \"localization\", void 0);\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"popupService\", void 0);\n      _defineProperty(this, \"wrapper\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"injector\", void 0);\n      _defineProperty(this, \"pickerService\", void 0);\n      _defineProperty(this, \"disabledDatesService\", void 0);\n      _defineProperty(this, \"adaptiveService\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"calendarIcon\", calendarIcon);\n      _defineProperty(this, \"container\", void 0);\n      _defineProperty(this, \"popupTemplate\", void 0);\n      _defineProperty(this, \"toggleButton\", void 0);\n      _defineProperty(this, \"actionSheet\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"focusableId\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"cellTemplate\", void 0);\n      _defineProperty(this, \"clearButton\", false);\n      /**\n       * Sets the HTML attributes of the inner focusable input element. Attributes which are essential for certain component functionalities cannot be changed.\n       */\n      _defineProperty(this, \"inputAttributes\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"monthCellTemplate\", void 0);\n      _defineProperty(this, \"yearCellTemplate\", void 0);\n      _defineProperty(this, \"decadeCellTemplate\", void 0);\n      _defineProperty(this, \"centuryCellTemplate\", void 0);\n      _defineProperty(this, \"weekNumberTemplate\", void 0);\n      _defineProperty(this, \"headerTitleTemplate\", void 0);\n      _defineProperty(this, \"headerTemplate\", void 0);\n      _defineProperty(this, \"footerTemplate\", void 0);\n      _defineProperty(this, \"footer\", false);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"navigationItemTemplate\", void 0);\n      _defineProperty(this, \"weekDaysFormat\", \"short\");\n      /**\n       * Displays the days that fall out of the current month in the Calendar ([see example]({% slug viewoptions_calendar %}#toc-displaying-other-month-days)).\n       * The default values per Calendar type are:\n       * - `infinite` - false\n       * - `classic` - true\n       */\n      _defineProperty(this, \"showOtherMonthDays\", void 0);\n      /**\n       * Defines the active view that the Calendar initially renders\n       * ([see example]({% slug viewoptions_calendar %}#toc-active-view)).\n       * By default, the active view is `month`.\n       *\n       * > You have to set `activeView` within the `topView`-`bottomView` range.\n       */\n      _defineProperty(this, \"activeView\", CalendarViewEnum[CalendarViewEnum.month]);\n      /**\n       * Defines the bottommost Calendar view to which the user can navigate\n       * ([see example](slug:datepicker_calendar_options#toc-view-selection-depth)).\n       */\n      _defineProperty(this, \"bottomView\", CalendarViewEnum[CalendarViewEnum.month]);\n      /**\n       * Defines the topmost Calendar view to which the user can navigate\n       * ([see example](slug:datepicker_calendar_options#toc-view-selection-depth)).\n       */\n      _defineProperty(this, \"topView\", CalendarViewEnum[CalendarViewEnum.century]);\n      /**\n       * Specifies the Calendar type.\n       *\n       * The possible values are:\n       * - `infinite` (default)\n       * - `classic`\n       *\n       */\n      _defineProperty(this, \"calendarType\", 'infinite');\n      /**\n       * Determines whether to enable animation when navigating to previous/next Calendar view.\n       * Applies to the [`classic`]({% slug api_dateinputs_datepickercomponent %}#toc-calendartype) Calendar only.\n       *\n       * > This feature uses the [Web Animations API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API). In order to run the animation in browsers that do not support it, you need the `web-animations-js` polyfill.\n       *\n       * @default false\n       */\n      _defineProperty(this, \"animateCalendarNavigation\", false);\n      /**\n       * Sets or gets the `disabled` property of the DatePicker and determines whether the component is active\n       * ([see example]({% slug disabled_datepicker %})).\n       * To learn how to disable the component in reactive forms, refer to the article on [Forms Support](slug:formssupport_datepicker#toc-managing-the-datepicker-disabled-state-in-reactive-forms).\n       */\n      _defineProperty(this, \"disabled\", false);\n      /**\n       * Sets the read-only state of the DatePicker\n       * ([see example]({% slug readonly_datepicker %}#toc-read-only-datepicker)).\n       *\n       * @default false\n       */\n      _defineProperty(this, \"readonly\", false);\n      /**\n       * Sets the read-only state of the DatePicker input field\n       * ([see example]({% slug readonly_datepicker %}#toc-read-only-input)).\n       *\n       * > Note that if you set the [`readonly`]({% slug api_dateinputs_datepickercomponent %}#toc-readonly) property value to `true`,\n       * the input will be rendered in a read-only state regardless of the `readOnlyInput` value.\n       */\n      _defineProperty(this, \"readOnlyInput\", false);\n      _defineProperty(this, \"_navigation\", true);\n      /**\n       * Specifies the smallest valid date\n       * ([see example]({% slug dateranges_datepicker %})).\n       * By default, the `min` value is `1900-1-1`.\n       */\n      _defineProperty(this, \"min\", cloneDate(MIN_DATE));\n      /**\n       * Specifies the biggest valid date\n       * ([see example]({% slug dateranges_datepicker %})).\n       * By default, the `max` value is `2099-12-31`.\n       */\n      _defineProperty(this, \"max\", cloneDate(MAX_DATE));\n      /**\n       * Determines whether the built-in validation for incomplete dates is to be enforced when a form is being validated.\n       */\n      _defineProperty(this, \"incompleteDateValidation\", false);\n      /**\n       * Determines whether to autocorrect invalid segments automatically.\n       *\n       * @default true\n       */\n      _defineProperty(this, \"autoCorrectParts\", true);\n      /**\n       * Determines whether to automatically move to the next segment after the user completes the current one.\n       *\n       * @default true\n       */\n      _defineProperty(this, \"autoSwitchParts\", true);\n      /**\n       * A string array representing custom keys, which will move the focus to the next date format segment.\n       */\n      _defineProperty(this, \"autoSwitchKeys\", []);\n      /**\n       * Indicates whether the mouse scroll can be used to increase/decrease the time segments values.\n       *\n       * @default true\n       */\n      _defineProperty(this, \"enableMouseWheel\", true);\n      /**\n       * Determines if the users should see a blinking caret inside the Date Input when possible.\n       *\n       * @default false\n       */\n      _defineProperty(this, \"allowCaretMode\", false);\n      /**\n       * When enabled, the DatePicker will autofill the rest of the date to the current date when the component loses focus.\n       *\n       * @default false\n       */\n      _defineProperty(this, \"autoFill\", false);\n      /**\n       * Specifies the focused date of the Calendar component\n       * ([see example](slug:datepicker_calendar_options#toc-focused-dates)).\n       */\n      _defineProperty(this, \"focusedDate\", null);\n      _defineProperty(this, \"format\", DEFAULT_FORMAT);\n      /**\n       * The maximum year to assume to be from the current century when typing two-digit year value\n       * ([see example]({% slug formats_datepicker %}#toc-two-digit-year-format)).\n       *\n       * The default value is 68, indicating that typing any value less than 69\n       * will be assumed to be 20xx, while 69 and larger will be assumed to be 19xx.\n       */\n      _defineProperty(this, \"twoDigitYearMax\", TWO_DIGIT_YEAR_MAX$1);\n      /**\n       * Defines the descriptions of the format sections in the input field.\n       * ([more information and examples]({% slug placeholders_datepicker %})).\n       *\n       * @example\n       * ```ts\n       * _@Component({\n       * selector: 'my-app',\n       * template: `\n       * <div class=\"row example-wrapper\" [style.min-height.px]=\"450\">\n       *  <div class=\"col-xs-12 col-md-6 example-col\">\n       *    <p>Full-length format description:</p>\n       *    <kendo-datepicker formatPlaceholder=\"wide\"></kendo-datepicker>\n       *  </div>\n       *\n       *  <div class=\"col-xs-12 col-md-6 example-col\">\n       *    <p>Narrow-length format description:</p>\n       *    <kendo-datepicker formatPlaceholder=\"narrow\"></kendo-datepicker>\n       *  </div>\n       *\n       *  <div class=\"col-xs-12 col-md-6 example-col\">\n       *    <p>Short-length format description:</p>\n       *    <kendo-datepicker formatPlaceholder=\"short\"></kendo-datepicker>\n       *  </div>\n       *\n       *  <div class=\"col-xs-12 col-md-6 example-col\">\n       *    <p>Display defined format:</p>\n       *    <kendo-datepicker format=\"MM/dd/yyyy\" formatPlaceholder=\"formatPattern\"></kendo-datepicker>\n       *  </div>\n       *\n       *  <div class=\"col-xs-12 col-md-6 example-col\">\n       *    <p>Custom defined format descriptions</p>\n       *    <kendo-datepicker format=\"MM/dd/yyyy\"\n       *      [formatPlaceholder]=\"{ year: 'y', month: 'M', day: 'd' }\"\n       *    ></kendo-datepicker>\n       *  </div>\n       * </div>\n       * `\n       * })\n       * export class AppComponent { }\n       * ```\n       */\n      _defineProperty(this, \"formatPlaceholder\", void 0);\n      /**\n       * Specifies the hint the DatePicker displays when its value is `null`.\n       * ([more information and exaples]({% slug placeholders_datepicker %})).\n       *\n       * @example\n       * ```ts\n       * _@Component({\n       * selector: 'my-app',\n       * template: `\n       *  <kendo-datepicker placeholder=\"Enter birth date...\"></kendo-datepicker>\n       * `\n       * })\n       * export class AppComponent { }\n       * ```\n       */\n      _defineProperty(this, \"placeholder\", null);\n      /**\n       * Sets or gets the `tabindex` property of the DatePicker.\n       */\n      _defineProperty(this, \"tabindex\", 0);\n      _defineProperty(this, \"title\", \"\");\n      _defineProperty(this, \"_subtitle\", void 0);\n      /**\n       * Determines whether the built-in min or max validators are enforced when validating a form.\n       */\n      _defineProperty(this, \"rangeValidation\", true);\n      /**\n       * Determines whether the built-in validator for disabled\n       * date ranges is enforced when validating a form\n       * ([see example]( slug:disabled_dates_datepicker#toc-using-a-function)).\n       */\n      _defineProperty(this, \"disabledDatesValidation\", true);\n      /**\n       * Determines whether to display a week number column in the `month` view of the Calendar\n       * ([see example](slug:datepicker_calendar_options#toc-week-number-column)).\n       */\n      _defineProperty(this, \"weekNumber\", false);\n      _defineProperty(this, \"adaptiveMode\", 'none');\n      /**\n       * Fires each time the user selects a new value\n       * ([see example](slug:events_datepicker)).\n       */\n      _defineProperty(this, \"valueChange\", new EventEmitter());\n      /**\n       * Fires each time the user focuses the input element\n       * ([see example](slug:events_datepicker)).\n       */\n      _defineProperty(this, \"onFocus\", new EventEmitter());\n      /**\n       * Fires each time the input element gets blurred\n       * ([see example](slug:events_datepicker)).\n       */\n      _defineProperty(this, \"onBlur\", new EventEmitter());\n      /**\n       * Fires each time the popup is about to open\n       * ([see example](slug:events_datepicker)).\n       * This event is preventable. If you cancel the event, the popup will remain closed.\n       */\n      _defineProperty(this, \"open\", new EventEmitter());\n      /**\n       * Fires each time the popup is about to close\n       * ([see example](slug:events_datepicker)).\n       * This event is preventable. If you cancel the event, the popup will remain open.\n       */\n      _defineProperty(this, \"close\", new EventEmitter());\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"escape\", new EventEmitter());\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"wrapperClasses\", true);\n      _defineProperty(this, \"popupRef\", void 0);\n      _defineProperty(this, \"xIcon\", xIcon);\n      _defineProperty(this, \"_popupSettings\", {\n        animate: true\n      });\n      _defineProperty(this, \"_show\", false);\n      _defineProperty(this, \"_value\", null);\n      _defineProperty(this, \"_active\", false);\n      _defineProperty(this, \"_disabledDates\", void 0);\n      _defineProperty(this, \"onControlChange\", noop$2);\n      _defineProperty(this, \"onControlTouched\", noop$2);\n      _defineProperty(this, \"onValidatorChange\", noop$2);\n      _defineProperty(this, \"minValidateFn\", noop$2);\n      _defineProperty(this, \"maxValidateFn\", noop$2);\n      _defineProperty(this, \"disabledDatesValidateFn\", noop$2);\n      _defineProperty(this, \"incompleteValidator\", noop$2);\n      _defineProperty(this, \"resolvedPromise\", Promise.resolve(null));\n      _defineProperty(this, \"subscription\", void 0);\n      _defineProperty(this, \"pickerSubscriptions\", void 0);\n      _defineProperty(this, \"localizationChangeSubscription\", void 0);\n      _defineProperty(this, \"windowBlurSubscription\", void 0);\n      _defineProperty(this, \"ariaActiveDescendantSubscription\", void 0);\n      _defineProperty(this, \"control\", void 0);\n      _defineProperty(this, \"domEvents\", []);\n      _defineProperty(this, \"_size\", DEFAULT_SIZE);\n      _defineProperty(this, \"_rounded\", DEFAULT_ROUNDED);\n      _defineProperty(this, \"_fillMode\", DEFAULT_FILL_MODE);\n      _defineProperty(this, \"windowSize\", void 0);\n      this.zone = zone;\n      this.localization = localization;\n      this.cdr = cdr;\n      this.popupService = popupService;\n      this.wrapper = wrapper;\n      this.renderer = renderer;\n      this.injector = injector;\n      this.pickerService = pickerService;\n      this.disabledDatesService = disabledDatesService;\n      this.adaptiveService = adaptiveService;\n      validatePackage(packageMetadata);\n      this.pickerSubscriptions = this.pickerService.onFocus.subscribe(this.handleFocus.bind(this));\n      this.pickerSubscriptions.add(this.pickerService.onBlur.subscribe(this.handleBlur.bind(this)));\n      this.pickerSubscriptions.add(this.pickerService.sameDateSelected.subscribe(this.handleSameSelection.bind(this)));\n      this.pickerSubscriptions.add(this.pickerService.dateCompletenessChange.subscribe(this.handleDateCompletenessChange.bind(this)));\n    }\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty.\n     */\n    isEmpty() {\n      return !this.value && this.dateInput.isEmpty();\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n      this.localizationChangeSubscription = this.localization.changes.subscribe(() => this.cdr.markForCheck());\n      this.control = this.injector.get(NgControl, null);\n      if (this.wrapper) {\n        this.renderer.removeAttribute(this.wrapper.nativeElement, 'tabindex');\n        this.zone.runOutsideAngular(() => {\n          this.bindEvents();\n        });\n      }\n      this.focusableId = this.dateInput?.focusableId;\n    }\n    ngAfterViewInit() {\n      this.setComponentClasses();\n      this.windowSize = this.adaptiveService.size;\n      if (this.actionSheet && isDocumentAvailable()) {\n        // The following syntax is used as it does not violate CSP compliance\n        this.actionSheet.element.nativeElement.style.setProperty('--kendo-actionsheet-height', '60vh');\n        this.actionSheet.element.nativeElement.style.setProperty('--kendo-actionsheet-max-height', 'none');\n      }\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n      this.verifySettings();\n      if (changes.min || changes.max || changes.rangeValidation || changes.disabledDatesValidation || changes.disabledDates || changes.incompleteDateValidation) {\n        this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop$2;\n        this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop$2;\n        this.disabledDatesValidateFn = this.disabledDatesValidation ? disabledDatesValidator(this.disabledDatesService.isDateDisabled) : noop$2;\n        this.incompleteValidator = this.incompleteDateValidation ? incompleteDateValidator() : noop$2;\n        this.onValidatorChange();\n      }\n      if (!this.focusableId || changes.focusableId) {\n        this.focusableId = this.dateInput?.focusableId;\n      }\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n      if (this.isAdaptive && this.isOpen) {\n        this.toggleActionSheet(false);\n      }\n      this.isActive = false;\n      this.show = false;\n      if (this.localizationChangeSubscription) {\n        this.localizationChangeSubscription.unsubscribe();\n      }\n      if (this.windowBlurSubscription) {\n        this.windowBlurSubscription.unsubscribe();\n      }\n      this.domEvents.forEach(unbindCallback => unbindCallback());\n      this.pickerSubscriptions.unsubscribe();\n    }\n    /**\n     * Indicates whether the component is currently open. That is when the popup or actionSheet is open.\n     */\n    get isOpen() {\n      return this.show;\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n      this.verifyValue(value);\n      this.value = cloneDate(value);\n      this.cdr.markForCheck();\n      if (!value && this.dateInput) {\n        this.dateInput.placeholder = this.placeholder;\n        this.dateInput.writeValue(value);\n      }\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n      this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n      this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    validate(control) {\n      return this.minValidateFn(control) || this.maxValidateFn(control) || this.disabledDatesValidateFn(control) || this.incompleteValidator(control, this.dateInput && this.dateInput.isDateIncomplete);\n    }\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn) {\n      this.onValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    handleActionSheetCollapse() {\n      // If not handled, the actionsheet expanded state does not get updated when overlay is clicked\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    handleActionSheetClick(e) {\n      e.preventDefault();\n    }\n    /**\n     * Focuses the DatePicker component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"datepicker.focus()\">Focus date picker</button>\n     *  <kendo-datepicker #datepicker></kendo-datepicker>\n     * `\n     * })\n     * export class AppComponent { }\n     * ```\n     */\n    focus() {\n      this.dateInput.focus();\n    }\n    /**\n     * Blurs the DatePicker component.\n     */\n    blur() {\n      (this.calendar || this.dateInput)['blur']();\n    }\n    /**\n     * Toggles the visibility of the popup or actionSheet.\n     * If you use the `toggle` method to show or hide the popup or actionSheet,\n     * the `open` and `close` events do not fire.\n     *\n     * @param show - The state of the popup.\n     */\n    toggle(show) {\n      if (this.disabled || this.readonly) {\n        return;\n      }\n      this.resolvedPromise.then(() => {\n        this.toggleCalendar(show === undefined ? !this.show : show);\n      });\n    }\n    /**\n     * @hidden\n     */\n    handleIconClick(event) {\n      if (this.disabled || this.readonly) {\n        return;\n      }\n      event.preventDefault();\n      this.focusInput();\n      //XXX: explicitly call the handleFocus handler here\n      //due to async IE focus event\n      this.handleFocus();\n      this.show = !this.show;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    handleDateInputClick() {\n      this.windowSize = this.adaptiveService.size;\n      if (this.isAdaptive) {\n        this.show = true;\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleMousedown(args) {\n      args.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    handleChange(value, isInputValueChange) {\n      this.value = value;\n      if (this.show) {\n        if (!isInputValueChange) {\n          this.focusInput();\n        }\n        this.show = false;\n      }\n      this.onControlChange(cloneDate(value));\n      this.valueChange.emit(cloneDate(value));\n    }\n    /**\n     * @hidden\n     */\n    handleInputChange(value) {\n      this.handleChange(this.dateInput.formatSections['time'] ? value : this.mergeTime(value), true);\n    }\n    /**\n     * @hidden\n     */\n    get popupClasses() {\n      return ['k-datepicker-popup', 'k-calendar-container'].concat(this.popupSettings.popupClass || []);\n    }\n    /**\n     * @hidden\n     */\n    get appendTo() {\n      const {\n        appendTo\n      } = this.popupSettings;\n      if (!appendTo || appendTo === 'root') {\n        return undefined;\n      }\n      return appendTo === 'component' ? this.container : appendTo;\n    }\n    get dateInput() {\n      return this.pickerService.input;\n    }\n    get calendar() {\n      return this.pickerService.calendar;\n    }\n    /**\n     * @hidden\n     */\n    get isAdaptiveModeEnabled() {\n      return this.adaptiveMode === 'auto';\n    }\n    /**\n     * @hidden\n     */\n    get isAdaptive() {\n      return this.isAdaptiveModeEnabled && this.windowSize !== 'large';\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n      const currentWindowSize = this.adaptiveService.size;\n      if (!this.isOpen || this.windowSize === currentWindowSize) {\n        return;\n      }\n      if (this.actionSheet.expanded) {\n        this.toggleActionSheet(false);\n      } else {\n        this.togglePopup(false);\n      }\n      this.windowSize = currentWindowSize;\n    }\n    /**\n     * @hidden\n     */\n    mergeTime(value) {\n      return this.value && value ? setTime(value, this.value) : value;\n    }\n    /**\n     * @hidden\n     */\n    handleKeydown(e) {\n      const {\n        altKey,\n        shiftKey,\n        keyCode,\n        target\n      } = e;\n      if (keyCode === Keys$1.Escape) {\n        this.dateInput.focus();\n        this.show = false;\n        hasObservers(this.escape) && this.escape.emit();\n      }\n      if (altKey) {\n        if (keyCode === Keys$1.ArrowDown && !this.show) {\n          this.show = true;\n        }\n        if (keyCode === Keys$1.ArrowUp) {\n          this.dateInput.focus();\n          this.show = false;\n        }\n      }\n      if (keyCode === Keys$1.Tab && this.show && this.calendar.isActive && isTabExitingCalendar(this.calendarType, target, shiftKey)) {\n        this.dateInput.focus();\n        this.show = false;\n      }\n    }\n    toggleCalendar(show) {\n      const previousWindowSize = this.windowSize;\n      this.windowSize = this.adaptiveService.size;\n      if (previousWindowSize !== this.windowSize && !show) {\n        if (previousWindowSize !== 'large') {\n          this.toggleActionSheet(show);\n        } else {\n          this.togglePopup(show);\n        }\n      } else {\n        if (this.isAdaptive) {\n          this.toggleActionSheet(show);\n        } else {\n          this.togglePopup(show);\n        }\n      }\n      this.toggleFocus();\n    }\n    togglePopup(show) {\n      if (show === this._show) {\n        return;\n      }\n      this._show = show;\n      if (show) {\n        const direction = this.localization.rtl ? 'right' : 'left';\n        const appendToComponent = typeof this.popupSettings.appendTo === 'string' && this.popupSettings.appendTo === 'component';\n        this.popupRef = this.popupService.open({\n          anchor: this.wrapper,\n          anchorAlign: {\n            vertical: 'bottom',\n            horizontal: direction\n          },\n          animate: this.popupSettings.animate,\n          appendTo: this.appendTo,\n          content: this.popupTemplate,\n          popupAlign: {\n            vertical: 'top',\n            horizontal: direction\n          },\n          popupClass: this.popupClasses,\n          positionMode: appendToComponent ? 'fixed' : 'absolute'\n        });\n        this.setAriaActiveDescendant();\n        this.popupRef.popupElement.setAttribute('id', this.popupUID);\n        this.renderer.setAttribute(this.dateInput?.inputElement, attributeNames.ariaControls, this.popupUID);\n        this.subscription = this.popupRef.popupAnchorViewportLeave.subscribe(() => this.show = false);\n      } else {\n        this.popupRef.close();\n        this.popupRef = null;\n        this.subscription.unsubscribe();\n        this.ariaActiveDescendantSubscription.unsubscribe();\n        if (this.dateInput) {\n          this.renderer.removeAttribute(this.dateInput.inputElement, attributeNames.ariaControls);\n          this.renderer.removeAttribute(this.dateInput.inputElement, attributeNames.ariaActiveDescendant);\n        }\n        this.cdr.detectChanges();\n      }\n    }\n    toggleActionSheet(show) {\n      if (show === this._show) {\n        return;\n      }\n      if (show && !this.isOpen) {\n        this.actionSheet.toggle();\n        this.updateActionSheetAdaptiveAppearance();\n        this.setAriaActiveDescendant();\n        this.actionSheet.element.nativeElement.setAttribute('id', this.popupUID);\n        this.renderer.setAttribute(this.dateInput?.inputElement, attributeNames.ariaControls, this.popupUID);\n      } else if (!show && this.isOpen) {\n        this.actionSheet.toggle();\n        this.ariaActiveDescendantSubscription.unsubscribe();\n        if (this.dateInput) {\n          this.renderer.removeAttribute(this.dateInput.inputElement, attributeNames.ariaActiveDescendant);\n          this.renderer.removeAttribute(this.dateInput.inputElement, attributeNames.ariaControls);\n        }\n      }\n      this._show = show;\n    }\n    updateActionSheetAdaptiveAppearance() {\n      let element;\n      let animationContainer;\n      if (this.actionSheet) {\n        element = this.actionSheet['element'].nativeElement.querySelector('.k-actionsheet');\n        animationContainer = this.actionSheet['element'].nativeElement.querySelector('.k-child-animation-container');\n        if (this.windowSize === 'medium') {\n          this.renderer.removeClass(element, 'k-actionsheet-fullscreen');\n          this.renderer.removeStyle(animationContainer, 'height');\n        } else if (this.windowSize === 'small') {\n          this.renderer.addClass(element, 'k-actionsheet-fullscreen');\n          this.renderer.setStyle(animationContainer, 'height', '100%');\n        }\n        this.renderer.addClass(element, 'k-adaptive-actionsheet');\n        this.renderer.addClass(element, 'k-actionsheet-bottom');\n        this.renderer.setStyle(animationContainer, 'bottom', '0px');\n      }\n    }\n    setAriaActiveDescendant() {\n      const focusedCellChangeEvent = this.calendar.type === 'infinite' ? this.calendar.monthView.focusedCellChange : this.calendar.multiViewCalendar.viewList.focusedCellChange;\n      this.ariaActiveDescendantSubscription = focusedCellChangeEvent.subscribe(id => this.renderer.setAttribute(this.dateInput?.inputElement, attributeNames.ariaActiveDescendant, id));\n    }\n    focusInput() {\n      if (touchEnabled) {\n        return;\n      }\n      this.dateInput.focus();\n    }\n    toggleFocus() {\n      if (!this.isActive) {\n        return;\n      }\n      if (this.show) {\n        if (!this.calendar) {\n          this.cdr.detectChanges();\n        }\n        if (this.calendar) {\n          this.calendar.focus();\n        }\n      } else if (!touchEnabled) {\n        this.dateInput.focus();\n      } else if (!this.dateInput.isActive) {\n        this.handleBlur();\n      }\n    }\n    verifySettings() {\n      if (!isDevMode()) {\n        return;\n      }\n      if (!isValidRange(this.min, this.max)) {\n        throw new Error(`The max value should be bigger than the min. See ${MIN_DOC_LINK} and ${MAX_DOC_LINK}.`);\n      }\n    }\n    verifyValue(value) {\n      if (!isDevMode()) {\n        return;\n      }\n      if (value && !(value instanceof Date)) {\n        throw new Error(`The 'value' should be a valid JavaScript Date instance or null. Check ${VALUE_DOC_LINK$2} for possible resolution.`);\n      }\n    }\n    bindEvents() {\n      const element = this.wrapper.nativeElement;\n      this.domEvents.push(this.renderer.listen(element, 'keydown', this.handleKeydown.bind(this)));\n      if (isWindowAvailable()) {\n        this.windowBlurSubscription = fromEvent(window, 'blur').subscribe(this.handleWindowBlur.bind(this));\n      }\n    }\n    handleFocus() {\n      if (this.isActive) {\n        return;\n      }\n      this.isActive = true;\n      if (hasObservers(this.onFocus)) {\n        this.zone.run(() => {\n          this.onFocus.emit();\n        });\n      }\n    }\n    handleWindowBlur() {\n      if (!this.isOpen || this.actionSheet.expanded) {\n        return;\n      }\n      this.show = false;\n    }\n    handleBlur(args) {\n      const currentTarget = args && currentFocusTarget(args);\n      const target = args && args.target;\n      const isInsideActionSheet = this.actionSheet && (this.actionSheet.element.nativeElement.contains(target) || this.actionSheet.element.nativeElement.contains(currentTarget));\n      if (currentTarget && (this.dateInput.containsElement(currentTarget) || this.calendar && this.calendar.containsElement(currentTarget) || isInsideActionSheet)) {\n        return;\n      }\n      if (hasObservers(this.onBlur) || this.show && hasObservers(this.close) || requiresZoneOnBlur(this.control)) {\n        this.zone.run(() => {\n          this.blurComponent();\n          this.cdr.markForCheck();\n        });\n      } else {\n        this.blurComponent();\n      }\n    }\n    blurComponent() {\n      this.isActive = false; // order is important ¯\\_(ツ)_/¯\n      this.show = false;\n      this.cdr.detectChanges();\n      this.onControlTouched();\n      this.onBlur.emit();\n    }\n    handleSameSelection() {\n      if (this.show) {\n        this.focusInput();\n        this.show = false;\n      }\n    }\n    handleDateCompletenessChange() {\n      this.cdr.markForCheck();\n      this.zone.run(() => this.onValidatorChange());\n    }\n    setComponentClasses() {\n      if (this.size) {\n        this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n        this.renderer.addClass(this.toggleButton.nativeElement, getSizeClass('button', this.size));\n      }\n      if (this.rounded) {\n        this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n      }\n      if (this.fillMode) {\n        this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n        this.renderer.addClass(this.toggleButton.nativeElement, getFillModeClass('button', this.fillMode));\n        this.renderer.addClass(this.toggleButton.nativeElement, `k-button-${this.fillMode}-base`);\n      }\n    }\n  }\n  _class51 = DatePickerComponent;\n  _defineProperty(DatePickerComponent, \"\\u0275fac\", function _class51_Factory(t) {\n    return new (t || _class51)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$2.PopupService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(PickerService), i0.ɵɵdirectiveInject(DisabledDatesService), i0.ɵɵdirectiveInject(i6.AdaptiveService));\n  });\n  _defineProperty(DatePickerComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class51,\n    selectors: [[\"kendo-datepicker\"]],\n    contentQueries: function _class51_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, MonthCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, YearCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, DecadeCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, CenturyCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, WeekNumberCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, HeaderTitleTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, NavigationItemTemplateDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monthCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.yearCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.decadeCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.centuryCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.weekNumberTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTitleTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.navigationItemTemplate = _t.first);\n      }\n    },\n    viewQuery: function _class51_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c36, 7, ViewContainerRef);\n        i0.ɵɵviewQuery(_c37, 7);\n        i0.ɵɵviewQuery(_c38, 7);\n        i0.ɵɵviewQuery(_c39, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toggleButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.actionSheet = _t.first);\n      }\n    },\n    hostVars: 8,\n    hostBindings: function _class51_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-readonly\", ctx.readonly)(\"k-datepicker\", ctx.wrapperClasses)(\"k-input\", ctx.wrapperClasses)(\"k-disabled\", ctx.disabledClass);\n      }\n    },\n    inputs: {\n      focusableId: \"focusableId\",\n      cellTemplateRef: [\"cellTemplate\", \"cellTemplateRef\"],\n      clearButton: \"clearButton\",\n      inputAttributes: \"inputAttributes\",\n      monthCellTemplateRef: [\"monthCellTemplate\", \"monthCellTemplateRef\"],\n      yearCellTemplateRef: [\"yearCellTemplate\", \"yearCellTemplateRef\"],\n      decadeCellTemplateRef: [\"decadeCellTemplate\", \"decadeCellTemplateRef\"],\n      centuryCellTemplateRef: [\"centuryCellTemplate\", \"centuryCellTemplateRef\"],\n      weekNumberTemplateRef: [\"weekNumberTemplate\", \"weekNumberTemplateRef\"],\n      headerTitleTemplateRef: [\"headerTitleTemplate\", \"headerTitleTemplateRef\"],\n      headerTemplateRef: [\"headerTemplate\", \"headerTemplateRef\"],\n      footerTemplateRef: [\"footerTemplate\", \"footerTemplateRef\"],\n      footer: \"footer\",\n      navigationItemTemplateRef: [\"navigationItemTemplate\", \"navigationItemTemplateRef\"],\n      weekDaysFormat: \"weekDaysFormat\",\n      showOtherMonthDays: \"showOtherMonthDays\",\n      activeView: \"activeView\",\n      bottomView: \"bottomView\",\n      topView: \"topView\",\n      calendarType: \"calendarType\",\n      animateCalendarNavigation: \"animateCalendarNavigation\",\n      disabled: \"disabled\",\n      readonly: \"readonly\",\n      readOnlyInput: \"readOnlyInput\",\n      popupSettings: \"popupSettings\",\n      navigation: \"navigation\",\n      min: \"min\",\n      max: \"max\",\n      incompleteDateValidation: \"incompleteDateValidation\",\n      autoCorrectParts: \"autoCorrectParts\",\n      autoSwitchParts: \"autoSwitchParts\",\n      autoSwitchKeys: \"autoSwitchKeys\",\n      enableMouseWheel: \"enableMouseWheel\",\n      allowCaretMode: \"allowCaretMode\",\n      autoFill: \"autoFill\",\n      focusedDate: \"focusedDate\",\n      value: \"value\",\n      format: \"format\",\n      twoDigitYearMax: \"twoDigitYearMax\",\n      formatPlaceholder: \"formatPlaceholder\",\n      placeholder: \"placeholder\",\n      tabindex: \"tabindex\",\n      tabIndex: \"tabIndex\",\n      disabledDates: \"disabledDates\",\n      title: \"title\",\n      subtitle: \"subtitle\",\n      rangeValidation: \"rangeValidation\",\n      disabledDatesValidation: \"disabledDatesValidation\",\n      weekNumber: \"weekNumber\",\n      size: \"size\",\n      rounded: \"rounded\",\n      fillMode: \"fillMode\",\n      adaptiveMode: \"adaptiveMode\"\n    },\n    outputs: {\n      valueChange: \"valueChange\",\n      onFocus: \"focus\",\n      onBlur: \"blur\",\n      open: \"open\",\n      close: \"close\",\n      escape: \"escape\"\n    },\n    exportAs: [\"kendo-datepicker\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => _class51),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => _class51),\n      multi: true\n    }, {\n      provide: KendoInput,\n      useExisting: forwardRef(() => _class51)\n    }, {\n      provide: MultiTabStop,\n      useExisting: forwardRef(() => _class51)\n    }, LocalizationService, PickerService, DisabledDatesService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.datepicker'\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 17,\n    vars: 42,\n    consts: function () {\n      let i18n_40;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the today button in the calendar header\n         * @meaning kendo.datepicker.today\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_41 = goog.getMsg(\"Today\");\n        i18n_40 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_41;\n      } else {\n        i18n_40 = $localize`:kendo.datepicker.today|The label for the today button in the calendar header:Today`;\n      }\n      let i18n_42;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the toggle button in the datepicker component\n         * @meaning kendo.datepicker.toggle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_43 = goog.getMsg(\"Toggle calendar\");\n        i18n_42 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_43;\n      } else {\n        i18n_42 = $localize`:kendo.datepicker.toggle|The title of the toggle button in the datepicker component:Toggle calendar`;\n      }\n      let i18n_44;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the previous button in the Classic calendar\n         * @meaning kendo.datepicker.prevButtonTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_45 = goog.getMsg(\"Navigate to previous view\");\n        i18n_44 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_45;\n      } else {\n        i18n_44 = $localize`:kendo.datepicker.prevButtonTitle|The title of the previous button in the Classic calendar:Navigate to previous view`;\n      }\n      let i18n_46;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the next button in the Classic calendar\n         * @meaning kendo.datepicker.nextButtonTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_47 = goog.getMsg(\"Navigate to next view\");\n        i18n_46 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_47;\n      } else {\n        i18n_46 = $localize`:kendo.datepicker.nextButtonTitle|The title of the next button in the Classic calendar:Navigate to next view`;\n      }\n      let i18n_48;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the parent view button in the calendar header\n         * @meaning kendo.datepicker.parentViewButtonTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_49 = goog.getMsg(\"Navigate to parent view\");\n        i18n_48 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_49;\n      } else {\n        i18n_48 = $localize`:kendo.datepicker.parentViewButtonTitle|The title of the parent view button in the calendar header:Navigate to parent view`;\n      }\n      let i18n_50;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the clear button\n         * @meaning kendo.datepicker.clearTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_51 = goog.getMsg(\"clear\");\n        i18n_50 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_51;\n      } else {\n        i18n_50 = $localize`:kendo.datepicker.clearTitle|The title of the clear button:clear`;\n      }\n      return [[\"kendoDatePickerLocalizedMessages\", \"\", \"today\", i18n_40, \"toggle\", i18n_42, \"prevButtonTitle\", i18n_44, \"nextButtonTitle\", i18n_46, \"parentViewButtonTitle\", i18n_48, \"clearTitle\", i18n_50], [\"pickerType\", \"datepicker\", \"hasPopup\", \"grid\", \"fillMode\", \"none\", \"rounded\", \"none\", \"size\", \"none\", 3, \"role\", \"isPopupOpen\", \"clearButton\", \"disabled\", \"readonly\", \"ariaReadOnly\", \"tabindex\", \"isRequired\", \"title\", \"focusableId\", \"format\", \"twoDigitYearMax\", \"formatPlaceholder\", \"placeholder\", \"min\", \"max\", \"incompleteDateValidation\", \"autoCorrectParts\", \"autoSwitchParts\", \"autoSwitchKeys\", \"enableMouseWheel\", \"allowCaretMode\", \"autoFill\", \"inputAttributes\", \"value\", \"valueChange\", \"click\"], [\"input\", \"\"], [3, \"clearTitle\"], [\"type\", \"button\", 1, \"k-input-button\", \"k-button\", \"k-icon-button\", 3, \"tabindex\", \"kendoEventsOutsideAngular\", \"scope\"], [\"toggleButton\", \"\"], [\"name\", \"calendar\", \"innerCssClass\", \"k-button-icon\", 3, \"svgIcon\"], [\"container\", \"\"], [\"popupTemplate\", \"\"], [3, \"resize\", 4, \"ngIf\"], [3, \"kendoEventsOutsideAngular\", \"scope\", \"titleId\", \"overlayClick\", \"collapse\"], [\"actionSheet\", \"\"], [\"kendoActionSheetTemplate\", \"\"], [\"calendarTemplate\", \"\"], [4, \"ngTemplateOutlet\"], [3, \"resize\"], [1, \"k-actionsheet-titlebar\"], [1, \"k-actionsheet-titlebar-group\", \"k-hbox\"], [1, \"k-actionsheet-title\"], [1, \"k-text-center\"], [1, \"k-actionsheet-subtitle\", \"k-text-center\"], [1, \"k-actionsheet-actions\"], [\"kendoButton\", \"\", \"type\", \"button\", \"icon\", \"x\", \"fillMode\", \"flat\", \"aria-hidden\", \"true\", \"size\", \"large\", \"innerCssClass\", \"k-button-icon\", 3, \"svgIcon\", \"tabIndex\", \"click\"], [1, \"k-actionsheet-content\", \"!k-overflow-hidden\"], [3, \"type\", \"size\", \"min\", \"max\", \"weekDaysFormat\", \"navigation\", \"animateNavigation\", \"activeView\", \"bottomView\", \"showOtherMonthDays\", \"topView\", \"weekNumber\", \"cellTemplate\", \"monthCellTemplate\", \"yearCellTemplate\", \"decadeCellTemplate\", \"centuryCellTemplate\", \"weekNumberTemplate\", \"headerTitleTemplate\", \"headerTemplate\", \"footerTemplate\", \"footer\", \"navigationItemTemplate\", \"focusedDate\", \"value\", \"kendoEventsOutsideAngular\", \"scope\", \"disabledDates\", \"valueChange\"], [\"calendar\", \"\"], [3, \"today\", \"prevButtonTitle\", \"nextButtonTitle\", \"parentViewButtonTitle\"]];\n    },\n    template: function _class51_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n        i0.ɵɵelementStart(1, \"kendo-dateinput\", 1, 2);\n        i0.ɵɵlistener(\"valueChange\", function _class51_Template_kendo_dateinput_valueChange_1_listener($event) {\n          return ctx.handleInputChange($event);\n        })(\"click\", function _class51_Template_kendo_dateinput_click_1_listener() {\n          return ctx.handleDateInputClick();\n        });\n        i0.ɵɵelement(3, \"kendo-dateinput-messages\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 4, 5);\n        i0.ɵɵelement(6, \"kendo-icon-wrapper\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainer(7, null, 7);\n        i0.ɵɵtemplate(9, _class51_ng_template_9_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(11, _class51_kendo_resize_sensor_11_Template, 1, 0, \"kendo-resize-sensor\", 9);\n        i0.ɵɵelementStart(12, \"kendo-actionsheet\", 10, 11);\n        i0.ɵɵlistener(\"overlayClick\", function _class51_Template_kendo_actionsheet_overlayClick_12_listener() {\n          return ctx.show = false;\n        })(\"collapse\", function _class51_Template_kendo_actionsheet_collapse_12_listener() {\n          return ctx.handleActionSheetCollapse();\n        });\n        i0.ɵɵtemplate(14, _class51_ng_template_14_Template, 11, 6, \"ng-template\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, _class51_ng_template_15_Template, 3, 34, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"role\", \"combobox\")(\"isPopupOpen\", ctx.show)(\"clearButton\", ctx.clearButton)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly || ctx.readOnlyInput)(\"ariaReadOnly\", ctx.readonly)(\"tabindex\", ctx.tabindex)(\"isRequired\", ctx.isControlRequired)(\"title\", ctx.title)(\"focusableId\", ctx.focusableId)(\"format\", ctx.format)(\"twoDigitYearMax\", ctx.twoDigitYearMax)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"placeholder\", ctx.placeholder)(\"min\", ctx.min)(\"max\", ctx.max)(\"incompleteDateValidation\", ctx.incompleteDateValidation)(\"autoCorrectParts\", ctx.autoCorrectParts)(\"autoSwitchParts\", ctx.autoSwitchParts)(\"autoSwitchKeys\", ctx.autoSwitchKeys)(\"enableMouseWheel\", ctx.enableMouseWheel)(\"allowCaretMode\", ctx.allowCaretMode)(\"autoFill\", ctx.autoFill)(\"inputAttributes\", ctx.inputAttributes)(\"value\", ctx.value);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"clearTitle\", ctx.localization.get(\"clearTitle\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"tabindex\", -1)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(37, _c53, ctx.handleIconClick, ctx.handleMousedown))(\"scope\", ctx);\n        i0.ɵɵattribute(\"title\", ctx.localization.get(\"toggle\"))(\"aria-label\", ctx.localization.get(\"toggle\"))(\"disabled\", ctx.disabled ? \"\" : null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"svgIcon\", ctx.calendarIcon);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAdaptiveModeEnabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(40, _c5, ctx.handleActionSheetClick))(\"scope\", ctx)(\"titleId\", ctx.calendar == null ? null : ctx.calendar.headerId);\n      }\n    },\n    dependencies: [DatePickerLocalizedMessagesDirective, DateInputComponent, DateInputCustomMessagesComponent, EventsOutsideAngularDirective, IconWrapperComponent, NgTemplateOutlet, NgIf, ResizeSensorComponent, ActionSheetComponent, ActionSheetTemplateDirective, ButtonComponent, CalendarComponent, CalendarCustomMessagesComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return DatePickerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nconst TIME_PART = {\n  dayperiod: 'dayperiod',\n  hour: 'hour',\n  millisecond: 'millisecond',\n  minute: 'minute',\n  second: 'second'\n};\nconst div = domContainerFactory('div');\nconst ul = domContainerFactory('ul');\nconst li = domContainerFactory('li');\nconst span = domContainerFactory('span');\nconst listTitle = () => span('hour', 'k-title k-timeselector-title');\nconst listItem = () => li('<span>02</span>', 'k-item');\nconst list = () => ul([listItem()], 'k-reset');\nconst scrollable = () => div([list()], 'k-time-container k-flex k-content k-scrollable');\nconst actionSheetContent = isDateTimePicker => [isDateTimePicker ? div([div('button', 'k-button k-button-lg')], 'k-datetime-buttongroup') : null, div([div([span('title', 'k-title')], 'k-time-header'), div([listTitle(), div([scrollable()], 'k-time-list')], 'k-time-list-wrapper')], 'k-timeselector k-timeselector-lg')];\nconst timeListWrapper = (isAdaptiveEnabled = false, windowSize, isDateTimePicker) => {\n  if (!isDocumentAvailable()) {\n    return null;\n  }\n  if (!isAdaptiveEnabled) {\n    return div([listTitle(), div([scrollable()], 'k-time-list')], 'k-time-list-wrapper', {\n      left: '-10000px',\n      position: 'absolute'\n    });\n  }\n  return div([div([div([div([div([], 'k-i-x k-button-icon k-icon')], 'k-icon-wrapper-host')], 'k-button k-icon-button k-button-lg')], 'k-actionsheet-titlebar'), div([isDateTimePicker ? div([...actionSheetContent(isDateTimePicker)], 'k-datetime-wrap k-time-tab') : actionSheetContent(isDateTimePicker)[1]], 'k-actionsheet-content'), div([div('button', 'k-button k-button-lg')], 'k-adaptive-actionsheet k-actionsheet-footer')], `k-actionsheet k-adaptive-actionsheet ${windowSize === 'small' ? 'k-actionsheet-fullscreen' : ''}`, {\n    height: windowSize === 'small' ? '100%' : '60vh',\n    left: '-10000px',\n    position: 'absolute',\n    top: 0\n  });\n};\n/**\n * @hidden\n */\nlet TimePickerDOMService = /*#__PURE__*/(() => {\n  var _class52;\n  class TimePickerDOMService {\n    constructor(adaptiveService) {\n      _defineProperty(this, \"adaptiveService\", void 0);\n      _defineProperty(this, \"itemHeight\", void 0);\n      _defineProperty(this, \"timeListHeight\", void 0);\n      _defineProperty(this, \"isAdaptiveEnabled\", void 0);\n      _defineProperty(this, \"isDateTimePicker\", void 0);\n      this.adaptiveService = adaptiveService;\n    }\n    get windowSize() {\n      return this.adaptiveService.size;\n    }\n    ensureHeights() {\n      if (this.timeListHeight !== undefined) {\n        return;\n      }\n      this.calculateHeights();\n    }\n    calculateHeights(container) {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n      let wrapper;\n      let hostContainer;\n      if (!this.isAdaptiveEnabled || this.windowSize === 'large') {\n        // not adaptive            \n        const listContainer = container && container.querySelector('.k-time-list-container');\n        hostContainer = listContainer || document.body;\n        wrapper = hostContainer.appendChild(timeListWrapper());\n      } else {\n        // adaptive mode\n        hostContainer = document.body;\n        wrapper = hostContainer.appendChild(timeListWrapper(true, this.windowSize, this.isDateTimePicker));\n      }\n      this.timeListHeight = wrapper.querySelector('.k-scrollable').offsetHeight;\n      this.itemHeight = wrapper.querySelector('li').offsetHeight;\n      hostContainer.removeChild(wrapper);\n    }\n    isActive(element) {\n      if (!isDocumentAvailable() || !element) {\n        return false;\n      }\n      return (element.nativeElement || element) === document.activeElement;\n    }\n  }\n  _class52 = TimePickerDOMService;\n  _defineProperty(TimePickerDOMService, \"\\u0275fac\", function _class52_Factory(t) {\n    return new (t || _class52)(i0.ɵɵinject(i6.AdaptiveService));\n  });\n  _defineProperty(TimePickerDOMService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class52,\n    factory: _class52.ɵfac,\n    providedIn: 'root'\n  }));\n  return TimePickerDOMService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst HOURS_IN_DAY = 24;\nconst clampToRange$3 = rangeValue => value => value % rangeValue;\nconst clamp$3 = clampToRange$3(HOURS_IN_DAY);\nconst stepper$3 = (start, step) => idx => clamp$3(start + idx * step);\nconst distanceFromMin$3 = (value, min) => clamp$3(HOURS_IN_DAY + value - min);\nconst limit$3 = borderValue => (barrier, value) => {\n  const useBarrier = !value || getDate(barrier).getTime() === getDate(value).getTime();\n  return useBarrier ? barrier : setHours$1(barrier, borderValue);\n};\nconst limitDown$3 = limit$3(0);\nconst limitUp$3 = limit$3(HOURS_IN_DAY - 1);\n/**\n * @hidden\n */\nlet HoursService = /*#__PURE__*/(() => {\n  var _class53;\n  class HoursService {\n    constructor(intl) {\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"boundRange\", false);\n      _defineProperty(this, \"insertUndividedMax\", false);\n      _defineProperty(this, \"min\", void 0);\n      _defineProperty(this, \"max\", void 0);\n      _defineProperty(this, \"step\", void 0);\n      _defineProperty(this, \"toListItem\", void 0);\n      this.intl = intl;\n    }\n    apply(value, candidate) {\n      return setHours$1(value, candidate.getHours());\n    }\n    configure(settings) {\n      const {\n        boundRange = this.boundRange,\n        insertUndividedMax = this.insertUndividedMax,\n        min = this.min,\n        max = this.max,\n        part,\n        step = this.step\n      } = settings;\n      this.boundRange = boundRange;\n      this.insertUndividedMax = insertUndividedMax;\n      this.toListItem = hour => {\n        const date = setHours$1(MIDNIGHT_DATE, hour);\n        return {\n          text: this.intl.formatDate(date, part.pattern),\n          value: date\n        };\n      };\n      this.min = min;\n      this.max = max;\n      this.step = step;\n    }\n    data(selectedValue) {\n      const [min] = this.range(selectedValue);\n      const getHour = stepper$3(min, this.step);\n      const convertToItem = idx => this.toListItem(getHour(idx));\n      const data = range(0, this.countFromMin(selectedValue)).map(convertToItem);\n      this.addLast(data);\n      this.addMissing(data, selectedValue);\n      return data;\n    }\n    isRangeChanged(min, max) {\n      return !isEqual(this.min, min) || !isEqual(this.max, max);\n    }\n    limitRange(min, max, value) {\n      return this.boundRange ? [limitDown$3(min, value), limitUp$3(max, value)] : [min, max];\n    }\n    total(value) {\n      const last = this.insertUndividedMax && this.isLastMissing(value) ? 1 : 0;\n      const missing = this.isMissing(value) ? 1 : 0;\n      return this.countFromMin(value) + missing + last;\n    }\n    selectedIndex(value) {\n      return Math.ceil(this.divideByStep(value));\n    }\n    valueInList(value) {\n      if (!value) {\n        return true;\n      }\n      const matchMax = this.insertUndividedMax && this.lastHour(value) === value.getHours();\n      return matchMax || !this.isMissing(value);\n    }\n    addLast(data, value) {\n      if (this.insertUndividedMax && this.isLastMissing(value)) {\n        data.push(this.toListItem(this.lastHour(value)));\n      }\n      return data;\n    }\n    addMissing(data, value) {\n      if (this.valueInList(value)) {\n        return data;\n      }\n      const missingItem = this.toListItem(value.getHours());\n      data.splice(this.selectedIndex(value), 0, missingItem);\n      return data;\n    }\n    countFromMin(value) {\n      const [min, max] = this.range(value);\n      return Math.floor(distanceFromMin$3(max, min) / this.step) + 1; /* include min */\n    }\n\n    isMissing(value) {\n      if (!value) {\n        return false;\n      }\n      return this.selectedIndex(value) !== this.divideByStep(value);\n    }\n    isLastMissing(value) {\n      return this.isMissing(setHours$1(this.max, this.lastHour(value)));\n    }\n    divideByStep(value) {\n      return distanceFromMin$3(value.getHours(), this.min.getHours()) / this.step;\n    }\n    lastHour(value) {\n      return this.range(value)[1];\n    }\n    range(value) {\n      const [min, max] = this.limitRange(this.min, this.max, value);\n      return [min.getHours(), max.getHours()];\n    }\n  }\n  _class53 = HoursService;\n  _defineProperty(HoursService, \"\\u0275fac\", function _class53_Factory(t) {\n    return new (t || _class53)(i0.ɵɵinject(i1.IntlService));\n  });\n  _defineProperty(HoursService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class53,\n    factory: _class53.ɵfac,\n    providedIn: 'root'\n  }));\n  return HoursService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst MINUTES_IN_HOUR = 60;\nconst clampToRange$2 = rangeValue => value => value % rangeValue;\nconst clamp$2 = clampToRange$2(MINUTES_IN_HOUR);\nconst stepper$2 = (start, step) => idx => clamp$2(start + idx * step);\nconst distanceFromMin$2 = (value, min) => clamp$2(MINUTES_IN_HOUR + value - min);\nconst limit$2 = borderValue => (barrier, value) => {\n  const useBarrier = !value || barrier.getHours() === value.getHours();\n  return useBarrier ? barrier : setMinutes(barrier, borderValue);\n};\nconst limitDown$2 = limit$2(0);\nconst limitUp$2 = limit$2(MINUTES_IN_HOUR - 1);\n/**\n * @hidden\n */\nlet MinutesService = /*#__PURE__*/(() => {\n  var _class54;\n  class MinutesService {\n    constructor(intl) {\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"toListItem\", void 0);\n      _defineProperty(this, \"min\", void 0);\n      _defineProperty(this, \"max\", void 0);\n      _defineProperty(this, \"step\", void 0);\n      _defineProperty(this, \"insertUndividedMax\", false);\n      this.intl = intl;\n    }\n    apply(value, candidate) {\n      return setMinutes(value, candidate.getMinutes());\n    }\n    configure(settings) {\n      const {\n        insertUndividedMax = this.insertUndividedMax,\n        min = this.min,\n        max = this.max,\n        part,\n        step = this.step\n      } = settings;\n      this.insertUndividedMax = insertUndividedMax;\n      this.toListItem = minute => {\n        const date = setMinutes(MIDNIGHT_DATE, minute);\n        return {\n          text: this.intl.formatDate(date, part.pattern),\n          value: date\n        };\n      };\n      this.min = min;\n      this.max = max;\n      this.step = step;\n    }\n    data(selectedValue) {\n      const [min] = this.range(selectedValue);\n      const getMinute = stepper$2(min, this.step);\n      const convertToItem = idx => this.toListItem(getMinute(idx));\n      const data = range(0, this.countFromMin(selectedValue)).map(convertToItem);\n      this.addLast(data);\n      this.addMissing(data, selectedValue);\n      return data;\n    }\n    isRangeChanged(min, max) {\n      return !isEqual(this.min, min) || !isEqual(this.max, max);\n    }\n    limitRange(min, max, value) {\n      return [limitDown$2(min, value), limitUp$2(max, value)];\n    }\n    total(value) {\n      const last = this.insertUndividedMax && this.isLastMissing(value) ? 1 : 0;\n      const missing = this.isMissing(value) ? 1 : 0;\n      return this.countFromMin(value) + missing + last;\n    }\n    selectedIndex(value) {\n      return Math.ceil(this.divideByStep(value));\n    }\n    valueInList(value) {\n      if (!value) {\n        return true;\n      }\n      const matchMax = this.insertUndividedMax && this.lastMinute(value) === value.getMinutes();\n      return matchMax || !this.isMissing(value);\n    }\n    addLast(data, value) {\n      if (this.insertUndividedMax && this.isLastMissing(value)) {\n        data.push(this.toListItem(this.lastMinute(value)));\n      }\n      return data;\n    }\n    addMissing(data, value) {\n      if (this.valueInList(value)) {\n        return data;\n      }\n      const missingItem = this.toListItem(value.getMinutes());\n      data.splice(this.selectedIndex(value), 0, missingItem);\n      return data;\n    }\n    countFromMin(value) {\n      const [min, max] = this.range(value);\n      return Math.floor(distanceFromMin$2(max, min) / this.step) + 1; /* include min */\n    }\n\n    isMissing(value) {\n      if (!value) {\n        return false;\n      }\n      return this.selectedIndex(value) !== this.divideByStep(value);\n    }\n    isLastMissing(value) {\n      return this.isMissing(setMinutes(this.max, this.lastMinute(value)));\n    }\n    divideByStep(value) {\n      return distanceFromMin$2(value.getMinutes(), this.min.getMinutes()) / this.step;\n    }\n    lastMinute(value) {\n      return this.range(value)[1];\n    }\n    range(value) {\n      const [min, max] = this.limitRange(this.min, this.max, value);\n      return [min.getMinutes(), max.getMinutes()];\n    }\n  }\n  _class54 = MinutesService;\n  _defineProperty(MinutesService, \"\\u0275fac\", function _class54_Factory(t) {\n    return new (t || _class54)(i0.ɵɵinject(i1.IntlService));\n  });\n  _defineProperty(MinutesService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class54,\n    factory: _class54.ɵfac,\n    providedIn: 'root'\n  }));\n  return MinutesService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SECONDS_IN_HOUR = 60;\nconst clampToRange$1 = rangeValue => value => value % rangeValue;\nconst clamp$1 = clampToRange$1(SECONDS_IN_HOUR);\nconst stepper$1 = (start, step) => idx => clamp$1(start + idx * step);\nconst distanceFromMin$1 = (value, min) => clamp$1(SECONDS_IN_HOUR + value - min);\nconst limit$1 = borderValue => (barrier, value) => {\n  const useBarrier = !value || barrier.getHours() === value.getHours() && barrier.getMinutes() === value.getMinutes();\n  return useBarrier ? barrier : setSeconds(barrier, borderValue);\n};\nconst limitDown$1 = limit$1(0);\nconst limitUp$1 = limit$1(SECONDS_IN_HOUR - 1);\n/**\n * @hidden\n */\nlet SecondsService = /*#__PURE__*/(() => {\n  var _class55;\n  class SecondsService {\n    constructor(intl) {\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"toListItem\", void 0);\n      _defineProperty(this, \"min\", void 0);\n      _defineProperty(this, \"max\", void 0);\n      _defineProperty(this, \"step\", void 0);\n      _defineProperty(this, \"insertUndividedMax\", false);\n      this.intl = intl;\n    }\n    apply(value, candidate) {\n      return setSeconds(value, candidate.getSeconds());\n    }\n    configure(settings) {\n      const {\n        insertUndividedMax = this.insertUndividedMax,\n        min = this.min,\n        max = this.max,\n        part,\n        step = this.step\n      } = settings;\n      this.insertUndividedMax = insertUndividedMax;\n      this.toListItem = second => {\n        const date = setSeconds(MIDNIGHT_DATE, second);\n        return {\n          text: this.intl.formatDate(date, part.pattern),\n          value: date\n        };\n      };\n      this.min = min;\n      this.max = max;\n      this.step = step;\n    }\n    data(selectedValue) {\n      const [min] = this.range(selectedValue);\n      const getSecond = stepper$1(min, this.step);\n      const convertToItem = idx => this.toListItem(getSecond(idx));\n      const data = range(0, this.countFromMin(selectedValue)).map(convertToItem);\n      this.addLast(data);\n      this.addMissing(data, selectedValue);\n      return data;\n    }\n    isRangeChanged(min, max) {\n      return !isEqual(this.min, min) || !isEqual(this.max, max);\n    }\n    limitRange(min, max, value) {\n      return [limitDown$1(min, value), limitUp$1(max, value)];\n    }\n    total(value) {\n      const last = this.insertUndividedMax && this.isLastMissing(value) ? 1 : 0;\n      const missing = this.isMissing(value) ? 1 : 0;\n      return this.countFromMin(value) + missing + last;\n    }\n    selectedIndex(value) {\n      return Math.ceil(this.divideByStep(value));\n    }\n    valueInList(value) {\n      if (!value) {\n        return true;\n      }\n      const matchMax = this.insertUndividedMax && this.lastSecond(value) === value.getSeconds();\n      return matchMax || !this.isMissing(value);\n    }\n    divideByStep(value) {\n      return distanceFromMin$1(value.getSeconds(), this.min.getSeconds()) / this.step;\n    }\n    addLast(data, value) {\n      if (this.insertUndividedMax && this.isLastMissing(value)) {\n        data.push(this.toListItem(this.lastSecond(value)));\n      }\n      return data;\n    }\n    addMissing(data, value) {\n      if (this.valueInList(value)) {\n        return data;\n      }\n      const missingItem = this.toListItem(value.getSeconds());\n      data.splice(this.selectedIndex(value), 0, missingItem);\n      return data;\n    }\n    countFromMin(value) {\n      const [min, max] = this.range(value);\n      return Math.floor(distanceFromMin$1(max, min) / this.step) + 1; /* include min */\n    }\n\n    isMissing(value) {\n      if (!value) {\n        return false;\n      }\n      return this.selectedIndex(value) !== this.divideByStep(value);\n    }\n    isLastMissing(value) {\n      return this.isMissing(setSeconds(this.max, this.lastSecond(value)));\n    }\n    lastSecond(value) {\n      return this.range(value)[1];\n    }\n    range(value) {\n      const [min, max] = this.limitRange(this.min, this.max, value);\n      return [min.getSeconds(), max.getSeconds()];\n    }\n  }\n  _class55 = SecondsService;\n  _defineProperty(SecondsService, \"\\u0275fac\", function _class55_Factory(t) {\n    return new (t || _class55)(i0.ɵɵinject(i1.IntlService));\n  });\n  _defineProperty(SecondsService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class55,\n    factory: _class55.ɵfac,\n    providedIn: 'root'\n  }));\n  return SecondsService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst MILLISECONDS_IN_SECOND = 1000;\nconst clampToRange = rangeValue => value => value % rangeValue;\nconst clamp = clampToRange(MILLISECONDS_IN_SECOND);\nconst stepper = (start, step) => idx => clamp(start + idx * step);\nconst distanceFromMin = (value, min) => clamp(MILLISECONDS_IN_SECOND + value - min);\nconst limit = borderValue => (barrier, value) => {\n  const useBarrier = !value || barrier.getHours() === value.getHours() && barrier.getMinutes() === value.getMinutes() && barrier.getSeconds() === value.getSeconds();\n  return useBarrier ? barrier : setMilliseconds(barrier, borderValue);\n};\nconst limitDown = limit(0);\nconst limitUp = limit(MILLISECONDS_IN_SECOND - 1);\n/**\n * @hidden\n */\nlet MillisecondsService = /*#__PURE__*/(() => {\n  var _class56;\n  class MillisecondsService {\n    constructor(intl) {\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"toListItem\", void 0);\n      _defineProperty(this, \"min\", void 0);\n      _defineProperty(this, \"max\", void 0);\n      _defineProperty(this, \"step\", void 0);\n      _defineProperty(this, \"insertUndividedMax\", false);\n      this.intl = intl;\n    }\n    apply(value, candidate) {\n      return setMilliseconds(value, candidate.getMilliseconds());\n    }\n    configure(settings) {\n      const {\n        insertUndividedMax = this.insertUndividedMax,\n        min = this.min,\n        max = this.max,\n        step = this.step\n      } = settings;\n      this.insertUndividedMax = insertUndividedMax;\n      this.toListItem = millisecond => {\n        const date = setMilliseconds(MIDNIGHT_DATE, millisecond);\n        return {\n          text: this.intl.formatDate(date, \"SSS\"),\n          value: date\n        };\n      };\n      this.min = min;\n      this.max = max;\n      this.step = step;\n    }\n    data(selectedValue) {\n      const [min] = this.range(selectedValue);\n      const getMillisecond = stepper(min, this.step);\n      const convertToItem = idx => this.toListItem(getMillisecond(idx));\n      const data = range(0, this.countFromMin(selectedValue)).map(convertToItem);\n      this.addLast(data);\n      this.addMissing(data, selectedValue);\n      return data;\n    }\n    isRangeChanged(min, max) {\n      return !isEqual(this.min, min) || !isEqual(this.max, max);\n    }\n    limitRange(min, max, value) {\n      return [limitDown(min, value), limitUp(max, value)];\n    }\n    total(value) {\n      const last = this.insertUndividedMax && this.isLastMissing(value) ? 1 : 0;\n      const missing = this.isMissing(value) ? 1 : 0;\n      return this.countFromMin(value) + missing + last;\n    }\n    selectedIndex(value) {\n      return Math.ceil(this.divideByStep(value));\n    }\n    valueInList(value) {\n      if (!value) {\n        return true;\n      }\n      const matchMax = this.insertUndividedMax && this.lastMillisecond(value) === value.getMilliseconds();\n      return matchMax || !this.isMissing(value);\n    }\n    divideByStep(value) {\n      return distanceFromMin(value.getMilliseconds(), this.min.getMilliseconds()) / this.step;\n    }\n    addLast(data, value) {\n      if (this.insertUndividedMax && this.isLastMissing(value)) {\n        data.push(this.toListItem(this.lastMillisecond(value)));\n      }\n      return data;\n    }\n    addMissing(data, value) {\n      if (this.valueInList(value)) {\n        return data;\n      }\n      const missingItem = this.toListItem(value.getMilliseconds());\n      data.splice(this.selectedIndex(value), 0, missingItem);\n      return data;\n    }\n    countFromMin(value) {\n      const [min, max] = this.range(value);\n      return Math.floor(distanceFromMin(max, min) / this.step) + 1; /* include min */\n    }\n\n    isMissing(value) {\n      if (!value) {\n        return false;\n      }\n      return this.selectedIndex(value) !== this.divideByStep(value);\n    }\n    isLastMissing(value) {\n      return this.isMissing(setMilliseconds(this.max, this.lastMillisecond(value)));\n    }\n    lastMillisecond(value) {\n      return this.range(value)[1];\n    }\n    range(value) {\n      const [min, max] = this.limitRange(this.min, this.max, value);\n      return [min.getMilliseconds(), max.getMilliseconds()];\n    }\n  }\n  _class56 = MillisecondsService;\n  _defineProperty(MillisecondsService, \"\\u0275fac\", function _class56_Factory(t) {\n    return new (t || _class56)(i0.ɵɵinject(i1.IntlService));\n  });\n  _defineProperty(MillisecondsService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class56,\n    factory: _class56.ɵfac,\n    providedIn: 'root'\n  }));\n  return MillisecondsService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst setHours = (date, hours) => {\n  const clone = cloneDate(date);\n  clone.setHours(hours);\n  return clone;\n};\nconst isAM = value => value !== null && value < 12;\nconst isPM = value => value !== null && (!value || value > 11);\nconst inRange = (value, min, max) => !min && !max || value >= min && value <= max;\nconst inReverseRange = (value, min, max) => !min && !max || value >= min || value <= max;\n/**\n * @hidden\n */\nlet DayPeriodService = /*#__PURE__*/(() => {\n  var _class57;\n  class DayPeriodService {\n    constructor(intl) {\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"min\", void 0);\n      _defineProperty(this, \"max\", void 0);\n      _defineProperty(this, \"part\", void 0);\n      this.intl = intl;\n    }\n    /**\n     * @hidden\n     */\n    apply(value, candidate) {\n      const hour = value.getHours();\n      const hourAM = isAM(hour);\n      const candidateAM = isAM(candidate.getHours());\n      if (hourAM && candidateAM || !hourAM && !candidateAM) {\n        return value;\n      }\n      const [min, max = 24] = this.normalizedRange();\n      const result = hour + (candidateAM ? -12 : 12);\n      return setHours(value, Math.min(Math.max(min, result), max || 24));\n    }\n    /**\n     * @hidden\n     */\n    configure(settings) {\n      const {\n        min = this.min,\n        max = this.max,\n        part = this.part\n      } = settings;\n      this.min = min;\n      this.max = max;\n      this.part = part;\n    }\n    /**\n     * @hidden\n     */\n    data(_) {\n      const names = this.part.names;\n      if (!names) {\n        return [];\n      }\n      const data = [];\n      const [min, max] = this.normalizedRange();\n      const dayPeriod = this.intl.dateFormatNames(names);\n      if (isAM(min)) {\n        data.push({\n          text: dayPeriod.am,\n          value: setHours(this.min, min)\n        });\n      }\n      if (isPM(max)) {\n        data.push({\n          text: dayPeriod.pm,\n          value: setHours(this.min, Math.max(12, max))\n        });\n      }\n      return this.min.getHours() !== min ? data.reverse() : data;\n    }\n    /**\n     * @hidden\n     */\n    isRangeChanged(_, __) {\n      return false;\n    }\n    /**\n     * @hidden\n     */\n    limitRange(min, max, _) {\n      return [min, max];\n    }\n    /**\n     * @hidden\n     */\n    total() {\n      const [min, max] = this.normalizedRange();\n      if (!min && !max) {\n        return 2;\n      }\n      if (min > 11 || max < 12) {\n        return 1;\n      }\n      return 2;\n    }\n    /**\n     * @hidden\n     */\n    selectedIndex(value) {\n      if (!this.valueInList(value)) {\n        return -1;\n      }\n      const index = Math.floor(value.getHours() / 12);\n      return this.min.getHours() === this.normalizedRange()[0] ? index : index === 0 ? 1 : 0;\n    }\n    /**\n     * @hidden\n     */\n    valueInList(value) {\n      const reverse = this.min.getHours() !== this.normalizedRange()[0];\n      const isInRange = reverse ? inReverseRange : inRange;\n      return isInRange(value.getHours(), this.min.getHours(), this.max.getHours());\n    }\n    normalizedRange() {\n      const minHour = this.min.getHours();\n      const maxHour = this.max.getHours();\n      return [Math.min(minHour, maxHour), Math.max(minHour, maxHour)];\n    }\n  }\n  _class57 = DayPeriodService;\n  _defineProperty(DayPeriodService, \"\\u0275fac\", function _class57_Factory(t) {\n    return new (t || _class57)(i0.ɵɵinject(i1.IntlService));\n  });\n  _defineProperty(DayPeriodService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class57,\n    factory: _class57.ɵfac,\n    providedIn: 'root'\n  }));\n  return DayPeriodService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/* eslint-disable @angular-eslint/component-selector */\nconst SNAP_THRESHOLD = 0.05; //% of the item height\nconst SCROLL_THRESHOLD = 2; //< 2px threshold\nconst nil = () => null;\nconst getters = {\n  35: (data, _) => data[data.length - 1],\n  36: (data, _) => data[0],\n  38: (data, index) => data[index - 1],\n  40: (data, index) => data[index + 1]\n};\nconst services = {\n  [TIME_PART.dayperiod]: DayPeriodService,\n  [TIME_PART.hour]: HoursService,\n  [TIME_PART.minute]: MinutesService,\n  [TIME_PART.second]: SecondsService,\n  [TIME_PART.millisecond]: MillisecondsService\n};\n/**\n * @hidden\n */\nlet TimeListComponent = /*#__PURE__*/(() => {\n  var _class58;\n  class TimeListComponent {\n    get tabIndex() {\n      return this.disabled ? undefined : 0;\n    }\n    get isDayPeriod() {\n      return this.part?.type === 'dayperiod';\n    }\n    get currentSelectedIndex() {\n      return this.selectedIndex(this.value);\n    }\n    get roleAttribute() {\n      return 'listbox';\n    }\n    get ariaLabel() {\n      return this.localization.get(this.part?.type);\n    }\n    constructor(element, injector, dom, renderer, zone, localization) {\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"injector\", void 0);\n      _defineProperty(this, \"dom\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"zone\", void 0);\n      _defineProperty(this, \"localization\", void 0);\n      _defineProperty(this, \"min\", cloneDate(MIDNIGHT_DATE));\n      _defineProperty(this, \"max\", cloneDate(MAX_TIME));\n      _defineProperty(this, \"part\", void 0);\n      _defineProperty(this, \"step\", 1);\n      _defineProperty(this, \"disabled\", false);\n      _defineProperty(this, \"value\", void 0);\n      _defineProperty(this, \"isLast\", false);\n      _defineProperty(this, \"isFirst\", false);\n      _defineProperty(this, \"valueChange\", new EventEmitter());\n      _defineProperty(this, \"tabOutLastPart\", new EventEmitter());\n      _defineProperty(this, \"tabOutFirstPart\", new EventEmitter());\n      _defineProperty(this, \"virtualization\", void 0);\n      _defineProperty(this, \"componentClass\", true);\n      _defineProperty(this, \"animateToIndex\", true);\n      _defineProperty(this, \"isActive\", false);\n      _defineProperty(this, \"skip\", 0);\n      _defineProperty(this, \"total\", 60);\n      _defineProperty(this, \"service\", void 0);\n      _defineProperty(this, \"itemHeight\", void 0);\n      _defineProperty(this, \"listHeight\", void 0);\n      _defineProperty(this, \"topOffset\", void 0);\n      _defineProperty(this, \"bottomOffset\", void 0);\n      _defineProperty(this, \"bottomThreshold\", void 0);\n      _defineProperty(this, \"topThreshold\", void 0);\n      _defineProperty(this, \"style\", void 0);\n      _defineProperty(this, \"data\", []);\n      _defineProperty(this, \"indexToScroll\", -1);\n      _defineProperty(this, \"scrollSubscription\", void 0);\n      _defineProperty(this, \"domEvents\", []);\n      this.element = element;\n      this.injector = injector;\n      this.dom = dom;\n      this.renderer = renderer;\n      this.zone = zone;\n      this.localization = localization;\n    }\n    ngOnChanges(changes) {\n      if (changes.part) {\n        this.service = this.injector.get(services[this.part.type]);\n        this.service.configure(this.serviceSettings());\n      }\n      const value = this.value;\n      const valueChanges = changes.value || {};\n      const [min, max] = this.service.limitRange(this.min, this.max, value);\n      if (this.service.isRangeChanged(min, max) || changes.min || changes.max || changes.step) {\n        this.data = [];\n        this.service.configure(this.serviceSettings({\n          min,\n          max\n        }));\n      }\n      // Skip the rendering of the list whenever possible\n      if (!this.data.length || this.hasMissingValue(valueChanges)) {\n        this.animateToIndex = false;\n        this.data = this.service.data(value);\n      }\n      this.animateToIndex = this.animateToIndex && this.textHasChanged(valueChanges);\n      this.total = this.service.total(value);\n      this.indexToScroll = this.selectedIndex(value);\n    }\n    ngOnInit() {\n      this.animateToIndex = true;\n      this.dom.ensureHeights();\n      this.itemHeight = this.dom.itemHeight;\n      this.listHeight = this.dom.timeListHeight;\n      this.topOffset = (this.listHeight - this.itemHeight) / 2;\n      this.bottomOffset = this.listHeight - this.itemHeight;\n      this.topThreshold = this.itemHeight * SNAP_THRESHOLD;\n      this.bottomThreshold = this.itemHeight * (1 - SNAP_THRESHOLD);\n      const translate = `translateY(${this.topOffset}px)`;\n      this.style = {\n        transform: translate,\n        '-ms-transform': translate\n      };\n      if (this.element) {\n        this.zone.runOutsideAngular(() => {\n          this.bindEvents();\n        });\n      }\n    }\n    ngOnDestroy() {\n      this.scrollSubscription.unsubscribe();\n      this.domEvents.forEach(unbindCallback => unbindCallback());\n    }\n    ngAfterViewInit() {\n      this.scrollOnce(index => this.virtualization.scrollToIndex(index));\n    }\n    ngAfterViewChecked() {\n      this.scrollOnce(index => {\n        const action = this.animateToIndex ? 'animateToIndex' : 'scrollToIndex';\n        this.virtualization[action](index);\n        this.animateToIndex = true;\n      });\n    }\n    getCurrentItem() {\n      return this.indexToScroll >= 0 ? this.data[this.indexToScroll] : null;\n    }\n    handleChange(dataItem) {\n      const candidate = this.service.apply(this.value, dataItem.value);\n      if (this.value.getTime() === candidate.getTime()) {\n        return;\n      }\n      this.indexToScroll = this.data.indexOf(dataItem);\n      this.value = candidate;\n      this.valueChange.emit(candidate);\n    }\n    handleItemClick(args) {\n      const item = closestInScope(args.target, node => node.hasAttribute('data-timelist-item-index'), this.element.nativeElement);\n      if (item) {\n        const index = item.getAttribute('data-timelist-item-index');\n        this.handleChange(this.data[index]);\n      }\n    }\n    /**\n     * Focuses the host element of the TimeList.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"timelist.focus()\">Focus TimeList</button>\n     *  <kendo-timelist #timelist></kendo-timelist>\n     * `\n     * })\n     * export class AppComponent { }\n     * ```\n     */\n    focus() {\n      if (!this.element) {\n        return;\n      }\n      this.element.nativeElement.focus();\n    }\n    /**\n     * Blurs the TimeList component.\n     */\n    blur() {\n      if (!this.element) {\n        return;\n      }\n      this.element.nativeElement.blur();\n    }\n    itemOffset(scrollTop) {\n      const valueIndex = this.selectedIndex(this.value);\n      const activeIndex = this.virtualization.activeIndex();\n      const offset = this.virtualization.itemOffset(activeIndex);\n      const distance = Math.abs(Math.ceil(scrollTop) - offset);\n      if (valueIndex === activeIndex && distance < SCROLL_THRESHOLD) {\n        return offset;\n      }\n      const scrollUp = valueIndex > activeIndex;\n      const moveToNext = scrollUp && distance >= this.bottomThreshold || !scrollUp && distance > this.topThreshold;\n      return moveToNext ? this.virtualization.itemOffset(activeIndex + 1) : offset;\n    }\n    hasMissingValue({\n      previousValue,\n      currentValue\n    }) {\n      const isPreviousMissing = previousValue && !this.service.valueInList(previousValue);\n      const isCurrentMissing = currentValue && !this.service.valueInList(currentValue);\n      return isPreviousMissing || isCurrentMissing;\n    }\n    scrollOnce(action) {\n      if (this.indexToScroll !== -1) {\n        action(this.indexToScroll);\n        this.indexToScroll = -1;\n      }\n    }\n    serviceSettings(settings) {\n      const defaults = {\n        boundRange: false,\n        insertUndividedMax: false,\n        max: this.max,\n        min: this.min,\n        part: this.part,\n        step: this.step\n      };\n      const result = Object.assign({}, defaults, settings);\n      result.boundRange = result.part.type !== 'hour';\n      return result;\n    }\n    selectedIndex(value) {\n      if (!value) {\n        return -1;\n      }\n      return this.service.selectedIndex(value);\n    }\n    textHasChanged({\n      previousValue,\n      currentValue\n    }) {\n      if (!previousValue || !currentValue) {\n        return false;\n      }\n      const oldData = this.data[this.selectedIndex(previousValue)];\n      const newData = this.data[this.selectedIndex(currentValue)];\n      return oldData && newData && oldData.text !== newData.text;\n    }\n    handleKeyDown(e) {\n      if (e.keyCode === Keys$1.Tab && !e.shiftKey && this.isLast) {\n        e.preventDefault();\n        this.tabOutLastPart.emit();\n      }\n      if (e.keyCode === Keys$1.Tab && e.shiftKey && this.isFirst) {\n        e.preventDefault();\n        this.tabOutFirstPart.emit();\n      }\n      const getter = getters[e.keyCode] || nil;\n      const dataItem = getter(this.data, this.service.selectedIndex(this.value));\n      if (dataItem) {\n        this.handleChange(dataItem);\n        e.preventDefault();\n      }\n    }\n    bindEvents() {\n      this.scrollSubscription = this.virtualization.scroll$().pipe(debounceTime(100), map(e => e.target.scrollTop), map(top => this.itemOffset(top)), map(itemOffset => this.virtualization.itemIndex(itemOffset))).subscribe(index => {\n        this.virtualization.scrollToIndex(index);\n        this.handleChange(this.data[index]);\n      });\n      const element = this.element.nativeElement;\n      this.domEvents.push(this.renderer.listen(element, 'mouseover', () => !this.isActive && this.focus()), this.renderer.listen(element, 'click', () => this.focus()), this.renderer.listen(element, 'blur', () => this.isActive = false), this.renderer.listen(element, 'focus', () => this.isActive = true), this.renderer.listen(element, 'keydown', this.handleKeyDown.bind(this)));\n    }\n  }\n  _class58 = TimeListComponent;\n  _defineProperty(TimeListComponent, \"\\u0275fac\", function _class58_Factory(t) {\n    return new (t || _class58)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(TimePickerDOMService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(TimeListComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class58,\n    selectors: [[\"kendo-timelist\"]],\n    viewQuery: function _class58_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(VirtualizationComponent, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.virtualization = _t.first);\n      }\n    },\n    hostVars: 3,\n    hostBindings: function _class58_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx.tabIndex);\n        i0.ɵɵclassProp(\"k-time-list\", ctx.componentClass);\n      }\n    },\n    inputs: {\n      min: \"min\",\n      max: \"max\",\n      part: \"part\",\n      step: \"step\",\n      disabled: \"disabled\",\n      value: \"value\",\n      isLast: \"isLast\",\n      isFirst: \"isFirst\"\n    },\n    outputs: {\n      valueChange: \"valueChange\",\n      tabOutLastPart: \"tabOutLastPart\",\n      tabOutFirstPart: \"tabOutFirstPart\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 16,\n    consts: [[\"tabindex\", \"-1\", 1, \"k-time-container\", 3, \"skip\", \"take\", \"total\", \"itemHeight\", \"maxScrollDifference\", \"topOffset\", \"bottomOffset\"], [1, \"k-reset\", 3, \"ngStyle\", \"kendoEventsOutsideAngular\", \"scope\"], [\"class\", \"k-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"k-item\"]],\n    template: function _class58_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"kendo-virtualization\", 0)(1, \"ul\", 1);\n        i0.ɵɵtemplate(2, _class58_li_2_Template, 3, 4, \"li\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"skip\", ctx.skip)(\"take\", ctx.total)(\"total\", ctx.total)(\"itemHeight\", ctx.itemHeight)(\"maxScrollDifference\", ctx.listHeight)(\"topOffset\", ctx.topOffset)(\"bottomOffset\", ctx.bottomOffset);\n        i0.ɵɵattribute(\"role\", ctx.roleAttribute)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(14, _c5, ctx.handleItemClick))(\"scope\", ctx);\n        i0.ɵɵattribute(\"role\", \"presentation\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.data);\n      }\n    },\n    dependencies: [VirtualizationComponent, NgStyle, EventsOutsideAngularDirective, NgFor],\n    encapsulation: 2\n  }));\n  return TimeListComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst isEqualTillMinute = (value, min) => value.getHours() === min.getHours() && value.getMinutes() === min.getMinutes();\nconst isEqualTillSecond = (value, min) => isEqualTillMinute(value, min) && value.getSeconds() === min.getSeconds();\nconst isEqualTillMillisecond = (value, min) => isEqualTillSecond(value, min) && value.getMilliseconds() === min.getMilliseconds();\nconst defaultGetters = [{\n  type: TIME_PART.hour,\n  getter: value => value.getHours(),\n  minGetter: (_, min) => min.getHours()\n}, {\n  type: TIME_PART.minute,\n  getter: value => value.getMinutes(),\n  minGetter: (value, min) => isEqualTillMinute(value, min) ? min.getMinutes() : 0\n}, {\n  type: TIME_PART.second,\n  getter: value => value.getSeconds(),\n  minGetter: (value, min) => isEqualTillSecond(value, min) ? min.getSeconds() : 0\n}, {\n  type: TIME_PART.millisecond,\n  getter: value => value.getMilliseconds(),\n  minGetter: (value, min) => isEqualTillMillisecond(value, min) ? min.getMilliseconds() : 0\n}];\nconst left = getter => (origin, _) => getter(origin);\nconst right = getter => (_, candidate) => getter(candidate);\nconst convertToObject = parts => parts.reduce((obj, p) => {\n  obj[p.type] = p.type;\n  return obj;\n}, {});\nconst getterByPart = parts => g => parts[g.type] ? right(g.getter) : left(g.getter);\nconst gettersFactory = getters => parts => getters.map(getterByPart(convertToObject(parts)));\nconst snapValue = (getter, minGetter, step) => (date, min) => {\n  const value = getter(date);\n  const minValue = minGetter(date, min);\n  const rest = value - minValue;\n  if (rest < 0) {\n    return minValue;\n  }\n  const mod = rest % step;\n  return value - mod + (mod > step / 2 ? step : 0);\n};\nconst snappersFactory = getters => steps => getters.map(g => {\n  const step = steps[g.type];\n  return step ? snapValue(g.getter, g.minGetter, step) : g.getter;\n});\n/**\n * @hidden\n */\nconst generateGetters = gettersFactory(defaultGetters);\n/**\n * @hidden\n */\nconst generateSnappers = snappersFactory(defaultGetters);\n/**\n * @hidden\n */\nconst valueMerger = getters => (origin, candidate) => {\n  origin.setHours(...getters.map(g => g(origin, candidate)));\n  return origin;\n};\n/**\n * @hidden\n */\nconst snapTime = snappers => (candidate, min) => {\n  const date = cloneDate(candidate);\n  date.setHours(...snappers.map(s => s(date, min)));\n  return date;\n};\n\n/**\n * @hidden\n */\nlet TimePickerMessages = /*#__PURE__*/(() => {\n  var _class59;\n  class TimePickerMessages extends ComponentMessages {\n    constructor(...args) {\n      super(...args);\n      /**\n       * The text of the **Accept** button in the popup footer of the TimeList.\n       */\n      _defineProperty(this, \"accept\", void 0);\n      /**\n       * The label of the **Accept** button in the popup footer of the TimeList.\n       */\n      _defineProperty(this, \"acceptLabel\", void 0);\n      /**\n       * The text of the **Cancel** button in the popup footer of the TimeList.\n       */\n      _defineProperty(this, \"cancel\", void 0);\n      /**\n       * The label of the **Cancel** button in the popup footer of the TimeList.\n       */\n      _defineProperty(this, \"cancelLabel\", void 0);\n      /**\n       * The text of the **Now** button in the popup header of the TimeList.\n       */\n      _defineProperty(this, \"now\", void 0);\n      /**\n       * The label of the **Now** button in the popup header of the TimeList.\n       */\n      _defineProperty(this, \"nowLabel\", void 0);\n      /**\n       * The title of the **Toggle** button of the TimePicker.\n       */\n      _defineProperty(this, \"toggle\", void 0);\n      /**\n       * The label of the **Hour** part in the TimePicker.\n       */\n      _defineProperty(this, \"hour\", void 0);\n      /**\n       * The label of the **Minute** part in the TimePicker.\n       */\n      _defineProperty(this, \"minute\", void 0);\n      /**\n       * The label of the **Second** part in the TimePicker.\n       */\n      _defineProperty(this, \"second\", void 0);\n      /**\n       * The label of the **Millisecond** part in the TimePicker.\n       */\n      _defineProperty(this, \"millisecond\", void 0);\n      /**\n       * The label of the **Dayperiod** part in the TimePicker.\n       */\n      _defineProperty(this, \"dayperiod\", void 0);\n      /**\n       * The title of the **Clear** button of the TimePicker.\n       */\n      _defineProperty(this, \"clearTitle\", void 0);\n    }\n  }\n  _class59 = TimePickerMessages;\n  _defineProperty(TimePickerMessages, \"\\u0275fac\", /* @__PURE__ */function () {\n    let ɵ_class59_BaseFactory;\n    return function _class59_Factory(t) {\n      return (ɵ_class59_BaseFactory || (ɵ_class59_BaseFactory = i0.ɵɵgetInheritedFactory(_class59)))(t || _class59);\n    };\n  }());\n  _defineProperty(TimePickerMessages, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class59,\n    selectors: [[\"kendo-timepicker-messages-base\"]],\n    inputs: {\n      accept: \"accept\",\n      acceptLabel: \"acceptLabel\",\n      cancel: \"cancel\",\n      cancelLabel: \"cancelLabel\",\n      now: \"now\",\n      nowLabel: \"nowLabel\",\n      toggle: \"toggle\",\n      hour: \"hour\",\n      minute: \"minute\",\n      second: \"second\",\n      millisecond: \"millisecond\",\n      dayperiod: \"dayperiod\",\n      clearTitle: \"clearTitle\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  }));\n  return TimePickerMessages;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet TimeSelectorLocalizedMessagesDirective = /*#__PURE__*/(() => {\n  var _class60;\n  class TimeSelectorLocalizedMessagesDirective extends TimePickerMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n  }\n  _class60 = TimeSelectorLocalizedMessagesDirective;\n  _defineProperty(TimeSelectorLocalizedMessagesDirective, \"\\u0275fac\", function _class60_Factory(t) {\n    return new (t || _class60)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(TimeSelectorLocalizedMessagesDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class60,\n    selectors: [[\"\", \"kendoTimeSelectorLocalizedMessages\", \"\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TimePickerMessages,\n      useExisting: forwardRef(() => _class60)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  }));\n  return TimeSelectorLocalizedMessagesDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst listReducer = (state, list, idx, all) => {\n  if (state.length || !list.isActive) {\n    return state;\n  }\n  return [{\n    next: all[idx + 1] || list,\n    prev: all[idx - 1] || list\n  }];\n};\nvar Direction = /*#__PURE__*/function (Direction) {\n  Direction[Direction[\"Left\"] = 0] = \"Left\";\n  Direction[Direction[\"Right\"] = 1] = \"Right\";\n  return Direction;\n}(Direction || {});\n/**\n * @hidden\n *\n * Represents the Kendo UI TimeSelector component for Angular.\n */\nlet TimeSelectorComponent = /*#__PURE__*/(() => {\n  var _class61;\n  class TimeSelectorComponent {\n    /**\n     * @hidden\n     */\n    get disabledClass() {\n      return this.disabled;\n    }\n    /**\n     * Specifies the time format used to display the time list columns.\n     */\n\n    /**\n     * Configures the incremental steps of the TimeSelector.\n     *\n     * The available options are:\n     * - `hour: Number`&mdash;Controls the incremental step of the hour value.\n     * - `minute: Number`&mdash;Controls the incremental step of the minute value.\n     * - `second: Number`&mdash;Controls the incremental step of the second value.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-timeselector format=\"HH:mm:ss\" [steps]=\"steps\"></kendo-timeselector>\n     * `\n     * })\n     * export class AppComponent {\n     *   public steps = { hour: 2, minute: 15, second: 15 };\n     * }\n     * ```\n     *\n     * > If the incremental step is greater than `1`, the **Now** button will be hidden.\n     */\n    set steps(steps) {\n      this._steps = steps || {};\n    }\n    get steps() {\n      return this._steps;\n    }\n    /**\n     * Specifies the value of the TimeSelector component.\n     */\n\n    set current(value) {\n      this._current = timeInRange(this.snapTime(cloneDate(value || MIDNIGHT_DATE), this.min), this.min, this.max);\n      if (!NgZone.isInAngularZone()) {\n        this.cdr.detectChanges();\n      }\n    }\n    get current() {\n      return this._current;\n    }\n    get activeListIndex() {\n      return this._activeListIndex;\n    }\n    set activeListIndex(value) {\n      this._activeListIndex = value;\n      if (!this.timeListWrappers || !this.timeListWrappers.length) {\n        return;\n      }\n      this.timeListWrappers.forEach(listWrapper => {\n        this.renderer.removeClass(listWrapper.nativeElement, 'k-focus');\n      });\n      if (value >= 0) {\n        const listIndex = this.listIndex(value);\n        const focusedWrapper = this.timeListWrappers.toArray()[listIndex];\n        if (focusedWrapper) {\n          this.renderer.addClass(focusedWrapper.nativeElement, 'k-focus');\n        }\n      }\n    }\n    constructor(localization, cdr, element, intl, dom, zone, renderer, pickerService) {\n      _defineProperty(this, \"localization\", void 0);\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"dom\", void 0);\n      _defineProperty(this, \"zone\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"pickerService\", void 0);\n      _defineProperty(this, \"accept\", void 0);\n      _defineProperty(this, \"cancel\", void 0);\n      _defineProperty(this, \"now\", void 0);\n      _defineProperty(this, \"timeLists\", void 0);\n      _defineProperty(this, \"timeListWrappers\", void 0);\n      _defineProperty(this, \"format\", 't');\n      /**\n       * Specifies the smallest valid time value.\n       */\n      _defineProperty(this, \"min\", cloneDate(MIN_TIME));\n      /**\n       * Specifies the biggest valid time value.\n       */\n      _defineProperty(this, \"max\", cloneDate(MAX_TIME));\n      /**\n       * Determines whether to display the **Cancel** button in the popup.\n       */\n      _defineProperty(this, \"cancelButton\", true);\n      /**\n       * Determines whether to display the **Set** button in the popup.\n       */\n      _defineProperty(this, \"setButton\", true);\n      /**\n       * Determines whether to display the **Now** button in the popup.\n       *\n       * > If the current time is out of range or the incremental step is greater than `1`, the **Now** button will be hidden.\n       */\n      _defineProperty(this, \"nowButton\", true);\n      /**\n       * Sets or gets the `disabled` property of the TimeSelector and determines whether the component is active.\n       */\n      _defineProperty(this, \"disabled\", false);\n      /**\n       * Needed in order to set it in the dom service so that timeselector height can be properly calculated\n       */\n      _defineProperty(this, \"isAdaptiveEnabled\", void 0);\n      _defineProperty(this, \"isDateTimePicker\", void 0);\n      _defineProperty(this, \"value\", null);\n      /**\n       * Fires each time the user selects a new value.\n       */\n      _defineProperty(this, \"valueChange\", new EventEmitter());\n      /**\n       * Fires each time the user cancels the selected value.\n       */\n      _defineProperty(this, \"valueReject\", new EventEmitter());\n      _defineProperty(this, \"tabOutLastPart\", new EventEmitter());\n      _defineProperty(this, \"tabOutFirstPart\", new EventEmitter());\n      _defineProperty(this, \"tabOutNow\", new EventEmitter());\n      _defineProperty(this, \"dateFormatParts\", void 0);\n      _defineProperty(this, \"isActive\", false);\n      _defineProperty(this, \"showNowButton\", true);\n      _defineProperty(this, \"mergeValue\", void 0);\n      _defineProperty(this, \"snapTime\", void 0);\n      _defineProperty(this, \"_activeListIndex\", -1);\n      _defineProperty(this, \"_current\", void 0);\n      _defineProperty(this, \"_steps\", {});\n      _defineProperty(this, \"subscriptions\", void 0);\n      _defineProperty(this, \"domEvents\", []);\n      this.localization = localization;\n      this.cdr = cdr;\n      this.element = element;\n      this.intl = intl;\n      this.dom = dom;\n      this.zone = zone;\n      this.renderer = renderer;\n      this.pickerService = pickerService;\n      if (this.pickerService) {\n        this.pickerService.timeSelector = this;\n      }\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n      this.subscriptions = this.intl.changes.subscribe(this.intlChange.bind(this));\n      if (this.localization) {\n        this.subscriptions.add(this.localization.changes.subscribe(() => this.cdr.markForCheck()));\n      }\n      this.renderer.addClass(this.element.nativeElement, 'k-timeselector');\n      this.dom.isAdaptiveEnabled = this.isAdaptiveEnabled;\n      this.dom.isDateTimePicker = this.isDateTimePicker;\n      this.dom.calculateHeights(this.element.nativeElement);\n      this.init();\n      this.bindEvents();\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges() {\n      this.init();\n    }\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n      if (this.pickerService) {\n        this.pickerService.timeSelector = null;\n      }\n      this.domEvents.forEach(unbindCallback => unbindCallback());\n    }\n    /**\n     * Focuses the TimeSelector component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"timeselector.focus()\">Focus time picker</button>\n     *  <kendo-timeselector #timeselector></kendo-timeselector>\n     * `\n     * })\n     * export class AppComponent { }\n     * ```\n     */\n    focus() {\n      const list = this.timeLists.first;\n      if (!list) {\n        return;\n      }\n      list.focus();\n    }\n    /**\n     * Blurs the TimeSelector component.\n     */\n    blur() {\n      const list = this.timeLists.first;\n      if (!list) {\n        return;\n      }\n      list.blur();\n    }\n    /**\n     * @hidden\n     */\n    handleAccept() {\n      this.handleChange(this.mergeValue(cloneDate(this.value || getDate(getNow())), this.current));\n    }\n    /**\n     * @hidden\n     */\n    handleNow() {\n      this.current = getNow();\n      this.handleChange(this.current);\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    handleReject() {\n      this.current = this.value;\n      this.valueReject.emit();\n    }\n    /**\n     * @hidden\n     */\n    handleFocus(args) {\n      if (this.isActive) {\n        return;\n      }\n      this.isActive = true;\n      this.emitFocus(args);\n    }\n    /**\n     * @hidden\n     */\n    handleListFocus(args) {\n      const index = parseInt(args.target.getAttribute('data-timelist-index'), 10);\n      this.activeListIndex = index;\n      this.handleFocus(args);\n    }\n    /**\n     * @hidden\n     */\n    handleBlur(args) {\n      const currentTarget = currentFocusTarget(args);\n      if (currentTarget && this.containsElement(currentTarget)) {\n        return;\n      }\n      this.activeListIndex = -1;\n      this.isActive = false;\n      this.emitBlur(args);\n    }\n    /**\n     * @hidden\n     */\n    containsElement(element) {\n      return Boolean(closest(element, node => node === this.element.nativeElement));\n    }\n    /**\n     * @hidden\n     */\n    handleTabOut(event) {\n      const {\n        keyCode,\n        shiftKey\n      } = event;\n      if (event.target === this.now?.nativeElement && keyCode === Keys$1.Tab && shiftKey) {\n        event.preventDefault();\n        if (this.isDateTimePicker) {\n          this.tabOutNow.emit();\n        } else {\n          this.cancel ? this.cancel.nativeElement.focus() : this.accept?.nativeElement.focus();\n        }\n        return;\n      }\n      if (keyCode === Keys$1.Tab && !shiftKey && event.target !== this.now?.nativeElement) {\n        event.preventDefault();\n        if (document.activeElement === this.accept.nativeElement) {\n          if (this.cancel) {\n            this.cancel.nativeElement.focus();\n          } else {\n            this.now ? this.now.nativeElement.focus() : this.timeLists.first.focus();\n          }\n        } else {\n          this.now ? this.now.nativeElement.focus() : this.timeLists.first.focus();\n        }\n      }\n    }\n    partStep(part) {\n      return this.steps[part.type] || 1;\n    }\n    init(changes) {\n      if (!changes || hasChange(changes, 'format')) {\n        this.dateFormatParts = this.intl.splitDateFormat(this.format);\n        this.mergeValue = valueMerger(generateGetters(this.dateFormatParts));\n      }\n      if (!changes || hasChange(changes, 'steps')) {\n        this.snapTime = snapTime(generateSnappers(this.steps));\n      }\n      if (!changes || hasChange(changes, 'value')) {\n        this.current = this.value;\n      }\n      this.showNowButton = !this.hasSteps() && this.nowButton && isInTimeRange(getNow(), this.min, this.max);\n    }\n    focusList(dir) {\n      if (!this.timeLists.length) {\n        return;\n      }\n      this.timeLists.reduce(listReducer, []).map(state => dir === Direction.Right ? state.next : state.prev).map(list => list && list.focus());\n    }\n    handleChange(value) {\n      this.value = value;\n      this.valueChange.emit(cloneDate(value));\n    }\n    hasActiveButton() {\n      if (!this.accept) {\n        return false;\n      }\n      return [this.accept, this.cancel, this.now].reduce((isActive, el) => isActive || this.dom.isActive(el), false);\n    }\n    hasSteps() {\n      const keys = Object.keys(this.steps);\n      return keys.length !== keys.reduce((acc, k) => acc + this.steps[k], 0);\n    }\n    intlChange() {\n      this.dateFormatParts = this.intl.splitDateFormat(this.format);\n      this.mergeValue = valueMerger(generateGetters(this.dateFormatParts));\n      this.cdr.markForCheck();\n    }\n    bindEvents() {\n      if (this.element) {\n        this.zone.runOutsideAngular(() => {\n          this.domEvents.push(this.renderer.listen(this.element.nativeElement, 'keydown', this.handleKeydown.bind(this)));\n        });\n      }\n    }\n    handleKeydown(args) {\n      const {\n        keyCode,\n        altKey\n      } = args;\n      // reserve the alt + arrow key commands for the picker\n      const arrowKeyPressed = [Keys$1.ArrowLeft, Keys$1.ArrowRight].indexOf(keyCode) !== -1;\n      if (isPresent(this.pickerService) && arrowKeyPressed && altKey) {\n        return;\n      }\n      if (keyCode === Keys$1.Enter && !this.hasActiveButton()) {\n        this.handleAccept();\n      } else if (keyCode === Keys$1.ArrowLeft || keyCode === Keys$1.ArrowRight) {\n        this.focusList(keyCode === Keys$1.ArrowLeft ? Direction.Left : Direction.Right);\n      }\n    }\n    emitBlur(args) {\n      if (this.pickerService) {\n        this.pickerService.onBlur.emit(args);\n      }\n    }\n    emitFocus(args) {\n      if (this.pickerService) {\n        this.pickerService.onFocus.emit(args);\n      }\n    }\n    listIndex(partIndex) {\n      let listIdx = 0;\n      let partIdx = 0;\n      while (partIdx < partIndex) {\n        if (this.dateFormatParts[partIdx].type !== 'literal') {\n          listIdx++;\n        }\n        partIdx++;\n      }\n      return listIdx;\n    }\n  }\n  _class61 = TimeSelectorComponent;\n  _defineProperty(TimeSelectorComponent, \"\\u0275fac\", function _class61_Factory(t) {\n    return new (t || _class61)(i0.ɵɵdirectiveInject(i1$1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.IntlService), i0.ɵɵdirectiveInject(TimePickerDOMService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PickerService, 8));\n  });\n  _defineProperty(TimeSelectorComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class61,\n    selectors: [[\"kendo-timeselector\"]],\n    viewQuery: function _class61_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c54, 5);\n        i0.ɵɵviewQuery(_c55, 5);\n        i0.ɵɵviewQuery(_c56, 5);\n        i0.ɵɵviewQuery(TimeListComponent, 5);\n        i0.ɵɵviewQuery(_c57, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.accept = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cancel = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.now = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.timeLists = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.timeListWrappers = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function _class61_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-disabled\", ctx.disabledClass);\n      }\n    },\n    inputs: {\n      format: \"format\",\n      min: \"min\",\n      max: \"max\",\n      cancelButton: \"cancelButton\",\n      setButton: \"setButton\",\n      nowButton: \"nowButton\",\n      disabled: \"disabled\",\n      isAdaptiveEnabled: \"isAdaptiveEnabled\",\n      isDateTimePicker: \"isDateTimePicker\",\n      steps: \"steps\",\n      value: \"value\"\n    },\n    outputs: {\n      valueChange: \"valueChange\",\n      valueReject: \"valueReject\",\n      tabOutLastPart: \"tabOutLastPart\",\n      tabOutFirstPart: \"tabOutFirstPart\",\n      tabOutNow: \"tabOutNow\"\n    },\n    exportAs: [\"kendo-timeselector\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([LocalizationService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.timeselector'\n    }]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 9,\n    vars: 4,\n    consts: function () {\n      let i18n_58;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Accept button text in the timeselector component\n         * @meaning kendo.timeselector.accept\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_59 = goog.getMsg(\"Set\");\n        i18n_58 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_59;\n      } else {\n        i18n_58 = $localize`:kendo.timeselector.accept|The Accept button text in the timeselector component:Set`;\n      }\n      let i18n_60;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Accept button in the timeselector component\n         * @meaning kendo.timeselector.acceptLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_61 = goog.getMsg(\"Set time\");\n        i18n_60 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_61;\n      } else {\n        i18n_60 = $localize`:kendo.timeselector.acceptLabel|The label for the Accept button in the timeselector component:Set time`;\n      }\n      let i18n_62;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Cancel button text in the timeselector component\n         * @meaning kendo.timeselector.cancel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_63 = goog.getMsg(\"Cancel\");\n        i18n_62 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_63;\n      } else {\n        i18n_62 = $localize`:kendo.timeselector.cancel|The Cancel button text in the timeselector component:Cancel`;\n      }\n      let i18n_64;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Cancel button in the timeselector component\n         * @meaning kendo.timeselector.cancelLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_65 = goog.getMsg(\"Cancel changes\");\n        i18n_64 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_65;\n      } else {\n        i18n_64 = $localize`:kendo.timeselector.cancelLabel|The label for the Cancel button in the timeselector component:Cancel changes`;\n      }\n      let i18n_66;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Now button text in the timeselector component\n         * @meaning kendo.timeselector.now\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_67 = goog.getMsg(\"Now\");\n        i18n_66 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_67;\n      } else {\n        i18n_66 = $localize`:kendo.timeselector.now|The Now button text in the timeselector component:Now`;\n      }\n      let i18n_68;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Now button in the timeselector component\n         * @meaning kendo.timeselector.nowLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_69 = goog.getMsg(\"Select now\");\n        i18n_68 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_69;\n      } else {\n        i18n_68 = $localize`:kendo.timeselector.nowLabel|The label for the Now button in the timeselector component:Select now`;\n      }\n      return [[\"kendoTimeSelectorLocalizedMessages\", \"\", \"accept\", i18n_58, \"acceptLabel\", i18n_60, \"cancel\", i18n_62, \"cancelLabel\", i18n_64, \"now\", i18n_66, \"nowLabel\", i18n_68], [1, \"k-time-header\"], [1, \"k-title\", \"k-timeselector-title\"], [\"type\", \"button\", \"class\", \"k-button k-button-md k-rounded-md k-button-flat k-button-flat-primary k-time-now\", 3, \"kendoEventsOutsideAngular\", \"scope\", \"disabled\", 4, \"ngIf\"], [1, \"k-time-list-container\"], [1, \"k-time-highlight\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"k-time-footer k-actions k-actions-stretched k-actions-horizontal\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"k-button\", \"k-button-md\", \"k-rounded-md\", \"k-button-flat\", \"k-button-flat-primary\", \"k-time-now\", 3, \"kendoEventsOutsideAngular\", \"scope\", \"disabled\"], [\"now\", \"\"], [\"class\", \"k-time-list-wrapper\", \"role\", \"presentation\", \"tabindex\", \"-1\", 4, \"ngIf\"], [\"class\", \"k-time-separator\", 4, \"ngIf\"], [\"role\", \"presentation\", \"tabindex\", \"-1\", 1, \"k-time-list-wrapper\"], [\"listWrapper\", \"\"], [3, \"isLast\", \"isFirst\", \"min\", \"max\", \"part\", \"step\", \"disabled\", \"value\", \"kendoEventsOutsideAngular\", \"scope\", \"valueChange\", \"tabOutLastPart\", \"tabOutFirstPart\"], [1, \"k-time-separator\"], [1, \"k-time-footer\", \"k-actions\", \"k-actions-stretched\", \"k-actions-horizontal\"], [\"type\", \"button\", \"class\", \"k-button k-time-accept k-button-md k-rounded-md k-button-solid k-button-solid-primary\", 3, \"kendoEventsOutsideAngular\", \"scope\", \"disabled\", 4, \"ngIf\"], [\"class\", \"k-button k-time-cancel k-button-md k-rounded-md k-button-solid k-button-solid-base\", \"type\", \"button\", 3, \"kendoEventsOutsideAngular\", \"scope\", \"disabled\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"k-button\", \"k-time-accept\", \"k-button-md\", \"k-rounded-md\", \"k-button-solid\", \"k-button-solid-primary\", 3, \"kendoEventsOutsideAngular\", \"scope\", \"disabled\"], [\"accept\", \"\"], [\"type\", \"button\", 1, \"k-button\", \"k-time-cancel\", \"k-button-md\", \"k-rounded-md\", \"k-button-solid\", \"k-button-solid-base\", 3, \"kendoEventsOutsideAngular\", \"scope\", \"disabled\"], [\"cancel\", \"\"]];\n    },\n    template: function _class61_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, _class61_button_4_Template, 3, 11, \"button\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelement(6, \"span\", 5);\n        i0.ɵɵtemplate(7, _class61_ng_template_7_Template, 2, 2, \"ng-template\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, _class61_div_8_Template, 3, 2, \"div\", 7);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.intl.formatDate(ctx.current, ctx.format), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showNowButton);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dateFormatParts);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.setButton || ctx.cancelButton);\n      }\n    },\n    dependencies: [TimeSelectorLocalizedMessagesDirective, NgIf, EventsOutsideAngularDirective, NgFor, TimeListComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return TimeSelectorComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nconst timeRangeValidator = (min, max) => {\n  return control => {\n    if (!min || !max || !control.value) {\n      return null;\n    }\n    const err = {\n      timeRangeError: {\n        maxValue: max,\n        minValue: min,\n        value: control.value\n      }\n    };\n    return isInTimeRange(control.value, min, max) ? null : err;\n  };\n};\n\n/**\n * @hidden\n *\n * Custom component messages override default component messages.\n */\nlet TimeSelectorCustomMessagesComponent = /*#__PURE__*/(() => {\n  var _class62;\n  class TimeSelectorCustomMessagesComponent extends TimePickerMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n    get override() {\n      return true;\n    }\n  }\n  _class62 = TimeSelectorCustomMessagesComponent;\n  _defineProperty(TimeSelectorCustomMessagesComponent, \"\\u0275fac\", function _class62_Factory(t) {\n    return new (t || _class62)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(TimeSelectorCustomMessagesComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class62,\n    selectors: [[\"kendo-timeselector-messages\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TimePickerMessages,\n      useExisting: forwardRef(() => _class62)\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function _class62_Template(rf, ctx) {},\n    encapsulation: 2\n  }));\n  return TimeSelectorCustomMessagesComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet TimePickerLocalizedMessagesDirective = /*#__PURE__*/(() => {\n  var _class63;\n  class TimePickerLocalizedMessagesDirective extends TimePickerMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n  }\n  _class63 = TimePickerLocalizedMessagesDirective;\n  _defineProperty(TimePickerLocalizedMessagesDirective, \"\\u0275fac\", function _class63_Factory(t) {\n    return new (t || _class63)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(TimePickerLocalizedMessagesDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class63,\n    selectors: [[\"\", \"kendoTimePickerLocalizedMessages\", \"\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TimePickerMessages,\n      useExisting: forwardRef(() => _class63)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  }));\n  return TimePickerLocalizedMessagesDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst VALUE_DOC_LINK$1 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/timepicker/#toc-integration-with-json';\nconst INTL_DATE_FORMAT = 'https://github.com/telerik/kendo-intl/blob/master/docs/date-formatting/index.md';\nconst formatRegExp = new RegExp(`${TIME_PART.hour}|${TIME_PART.minute}|${TIME_PART.second}|${TIME_PART.millisecond}|${TIME_PART.dayperiod}|literal`);\nconst ACCEPT_BUTTON_SELECTOR$1 = '.k-button.k-time-accept';\nconst CANCEL_BUTTON_SELECTOR = '.k-button.k-time-cancel';\n/**\n * Represents the [Kendo UI TimePicker component for Angular](slug:overview_timepicker).\n */\nlet TimePickerComponent = /*#__PURE__*/(() => {\n  var _class64;\n  class TimePickerComponent extends MultiTabStop {\n    /**\n     * Specifies the smallest valid time value\n     * ([see example]({% slug timeranges_timepicker %})).\n     */\n    set min(min) {\n      this._min = cloneDate(min || MIN_TIME);\n    }\n    get min() {\n      return this._min;\n    }\n    /**\n     * Specifies the biggest valid time value\n     * ([see example]({% slug timeranges_timepicker %})).\n     */\n    set max(max) {\n      this._max = cloneDate(max || MAX_TIME);\n    }\n    get max() {\n      return this._max;\n    }\n    /**\n     * Determines whether the built-in validation for incomplete dates is to be enforced when a form is being validated.\n     */\n\n    /**\n     * Configures the incremental steps of the TimePicker.\n     * For more information, refer to the article on\n     * [incremental steps]({% slug incrementalsteps_timepicker %}).\n     *\n     * > If the incremental step is greater than `1`, the **Now** button will be hidden.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-timepicker format=\"HH:mm:ss\" [steps]=\"steps\"></kendo-timepicker>\n     * `\n     * })\n     * class AppComponent {\n     *   public steps = { hour: 2, minute: 15, second: 15, millisecond: 10 };\n     * }\n     * ```\n     *\n     */\n    set steps(steps) {\n      this._steps = steps || {};\n    }\n    get steps() {\n      return this._steps;\n    }\n    /**\n     * Configures the popup of the TimePicker.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `appendTo: 'root' | 'component' | ViewContainerRef`&mdash;Controls the popup container. By default, the popup will be appended to the root component.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     */\n    set popupSettings(settings) {\n      this._popupSettings = Object.assign({}, {\n        animate: true\n      }, settings);\n    }\n    get popupSettings() {\n      return this._popupSettings;\n    }\n    /**\n     * Sets or gets the `tabindex` property of the TimePicker.\n     */\n\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n      this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n      return this.tabindex;\n    }\n    /**\n     * Sets the title of the input element of the TimePicker and the title text rendered\n     * in the header of the popup(action sheet). Applicable only when [`AdaptiveMode` is set to `auto`](slug:api_dateinputs_adaptivemode).\n     */\n\n    /**\n     * Sets the subtitle text rendered in the header of the popup(action sheet).\n     * Applicable only when [`AdaptiveMode` is set to `auto`](slug:api_dateinputs_adaptivemode).\n     */\n    set subtitle(subtitle) {\n      this._subtitle = subtitle;\n    }\n    get subtitle() {\n      return this._subtitle || this.placeholder;\n    }\n    /**\n     * Specifies the value of the TimePicker component.\n     *\n     * > The `value` has to be a valid [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance or `null`.\n     */\n    set value(value) {\n      this.verifyValue(value);\n      this._value = cloneDate(value);\n    }\n    get value() {\n      return this._value;\n    }\n    /**\n     * Sets the size of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (Default)\n     * * `large`\n     * * `none`\n     *\n     */\n    set size(size) {\n      this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n      this.renderer.removeClass(this.toggleButton.nativeElement, getSizeClass('button', this.size));\n      const newSize = size ? size : DEFAULT_SIZE;\n      if (newSize !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', newSize));\n        this.renderer.addClass(this.toggleButton.nativeElement, getSizeClass('button', newSize));\n      }\n      this._size = newSize;\n    }\n    get size() {\n      return this._size;\n    }\n    /**\n     * Sets the border radius of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (Default)\n     * * `large`\n     * * `full`\n     * * `none`\n     *\n     */\n    set rounded(rounded) {\n      this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n      const newRounded = rounded ? rounded : DEFAULT_ROUNDED;\n      if (newRounded !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n      }\n      this._rounded = newRounded;\n    }\n    get rounded() {\n      return this._rounded;\n    }\n    /**\n     * Sets the fillMode of the component.\n     *\n     * The possible values are:\n     * * `solid` (Default)\n     * * `flat`\n     * * `outline`\n     * * `none`\n     *\n     */\n    set fillMode(fillMode) {\n      this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n      this.renderer.removeClass(this.toggleButton.nativeElement, getFillModeClass('button', this.fillMode));\n      this.renderer.removeClass(this.toggleButton.nativeElement, `k-button-${this.fillMode}-base`);\n      const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE;\n      if (newFillMode !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', newFillMode));\n        this.renderer.addClass(this.toggleButton.nativeElement, getFillModeClass('button', newFillMode));\n        this.renderer.addClass(this.toggleButton.nativeElement, `k-button-${newFillMode}-base`);\n      }\n      this._fillMode = newFillMode;\n    }\n    get fillMode() {\n      return this._fillMode;\n    }\n    /**\n     * Sets the HTML attributes of the inner focusable input element. Attributes which are essential for certain component functionalities cannot be changed.\n     */\n\n    /**\n     * @hidden\n     */\n    get disabledClass() {\n      return this.disabled;\n    }\n    get popupUID() {\n      return `k-timepicker-popup-${this.bus.calendarId}-`;\n    }\n    get isActive() {\n      return this._active;\n    }\n    set isActive(value) {\n      this._active = value;\n      if (!this.wrapper) {\n        return;\n      }\n      const element = this.wrapper.nativeElement;\n      if (value) {\n        this.renderer.addClass(element, 'k-focus');\n      } else {\n        this.renderer.removeClass(element, 'k-focus');\n      }\n    }\n    get show() {\n      return this._show;\n    }\n    set show(show) {\n      if (show && (this.disabled || this.readonly)) {\n        return;\n      }\n      const skipZone = !show && (!this._show || !hasObservers(this.close) && !hasObservers(this.open));\n      if (!skipZone) {\n        this.zone.run(() => {\n          const event = new PreventableEvent();\n          if (!this._show && show) {\n            this.open.emit(event);\n          } else if (this._show && !show) {\n            this.close.emit(event);\n          }\n          if (event.isDefaultPrevented()) {\n            return;\n          }\n          this.toggleTimeSelector(show);\n        });\n      } else {\n        this.toggleTimeSelector(show);\n      }\n    }\n    get dateInput() {\n      return this.pickerService.input;\n    }\n    get timeSelector() {\n      return this.pickerService.timeSelector;\n    }\n    /**\n     * @hidden\n     */\n    get isControlRequired() {\n      return isControlRequired(this.control);\n    }\n    get adaptiveAcceptButton() {\n      return this.actionSheet.element.nativeElement.querySelector(ACCEPT_BUTTON_SELECTOR$1);\n    }\n    get adaptiveCancelButton() {\n      return this.actionSheet.element.nativeElement.querySelector(CANCEL_BUTTON_SELECTOR);\n    }\n    get inputElement() {\n      return this.wrapper.nativeElement.querySelector('input');\n    }\n    constructor(bus, zone, localization, cdr, popupService, wrapper, renderer, injector, pickerService, intl, adaptiveService) {\n      super();\n      _defineProperty(this, \"bus\", void 0);\n      _defineProperty(this, \"zone\", void 0);\n      _defineProperty(this, \"localization\", void 0);\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"popupService\", void 0);\n      _defineProperty(this, \"wrapper\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"injector\", void 0);\n      _defineProperty(this, \"pickerService\", void 0);\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"adaptiveService\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"clockIcon\", clockIcon);\n      _defineProperty(this, \"container\", void 0);\n      _defineProperty(this, \"popupTemplate\", void 0);\n      _defineProperty(this, \"toggleButton\", void 0);\n      _defineProperty(this, \"actionSheet\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"focusableId\", void 0);\n      /**\n       * Sets or gets the `disabled` property of the TimePicker and\n       * determines whether the component is active\n       * ([see example]({% slug disabled_timepicker %})).\n       * To learn how to disable the component in reactive forms, refer to the article on [Forms Support](slug:formssupport_timepicker#toc-managing-the-timepicker-disabled-state-in-reactive-forms).\n       */\n      _defineProperty(this, \"disabled\", false);\n      /**\n       * Sets the read-only state of the TimePicker\n       * ([see example]({% slug readonly_timepicker %}#toc-read-only-timepicker)).\n       *\n       * @default false\n       */\n      _defineProperty(this, \"readonly\", false);\n      /**\n       * Sets the read-only state of the TimePicker input field\n       * ([see example]({% slug readonly_timepicker %}#toc-read-only-input)).\n       *\n       * > Note that if you set the [`readonly`]({% slug api_dateinputs_timepickercomponent %}#toc-readonly) property value to `true`,\n       * the input will be rendered in a read-only state regardless of the `readOnlyInput` value.\n       */\n      _defineProperty(this, \"readOnlyInput\", false);\n      /**\n       * If set to `true`, renders a clear button after the input text or TimePicker value has been changed.\n       * Clicking this button resets the value of the component to `null` and triggers the `valueChange` event.\n       * @default false\n       */\n      _defineProperty(this, \"clearButton\", false);\n      /**\n       * Specifies the time format that is used to display the input value\n       * ([see example]({% slug formats_timepicker %})).\n       */\n      _defineProperty(this, \"format\", 't');\n      /**\n       * Defines the descriptions of the format sections in the input field.\n       * For more information, refer to the article on\n       * [placeholders]({% slug placeholders_timepicker %}).\n       *\n       * @example\n       * ```ts\n       * _@Component({\n       * selector: 'my-app',\n       * template: `\n       * <div class=\"row example-wrapper\" [style.min-height.px]=\"450\">\n       *  <div class=\"col-xs-12 col-md-6 example-col\">\n       *    <p>Full-length format description:</p>\n       *    <kendo-timepicker formatPlaceholder=\"wide\"></kendo-timepicker>\n       *  </div>\n       *\n       *  <div class=\"col-xs-12 col-md-6 example-col\">\n       *    <p>Narrow-length format description:</p>\n       *    <kendo-timepicker formatPlaceholder=\"narrow\"></kendo-timepicker>\n       *  </div>\n       *\n       *  <div class=\"col-xs-12 col-md-6 example-col\">\n       *    <p>Short-length format description:</p>\n       *    <kendo-timepicker formatPlaceholder=\"short\"></kendo-timepicker>\n       *  </div>\n       *\n       *  <div class=\"col-xs-12 col-md-6 example-col\">\n       *    <p>Display defined format:</p>\n       *    <kendo-timepicker format=\"HH:mm:ss\" formatPlaceholder=\"formatPattern\"></kendo-timepicker>\n       *  </div>\n       *\n       *  <div class=\"col-xs-12 col-md-6 example-col\">\n       *    <p>Custom defined format descriptions</p>\n       *    <kendo-timepicker format=\"HH:mm:ss\"\n       *      [formatPlaceholder]=\"{ hour: 'H', minute: 'm', second: 's' }\"\n       *    ></kendo-timepicker>\n       *  </div>\n       * </div>\n       * `\n       * })\n       * export class AppComponent { }\n       * ```\n       */\n      _defineProperty(this, \"formatPlaceholder\", void 0);\n      /**\n       * Specifies the hint the TimePicker displays when its value is `null`.\n       * For more information, refer to the article on\n       * [placeholders]({% slug placeholders_timepicker %}).\n       *\n       * @example\n       * ```ts\n       * _@Component({\n       * selector: 'my-app',\n       * template: `\n       *  <kendo-timepicker placeholder=\"Enter start...\"></kendo-timepicker>\n       * `\n       * })\n       * export class AppComponent { }\n       * ```\n       */\n      _defineProperty(this, \"placeholder\", null);\n      _defineProperty(this, \"incompleteDateValidation\", false);\n      /**\n       * Determines whether to automatically move to the next segment after the user completes the current one.\n       *\n       * @default true\n       */\n      _defineProperty(this, \"autoSwitchParts\", true);\n      /**\n       * A string array representing custom keys, which will move the focus to the next date format segment.\n       */\n      _defineProperty(this, \"autoSwitchKeys\", []);\n      /**\n       * Indicates whether the mouse scroll can be used to increase/decrease the time segments values.\n       *\n       * @default true\n       */\n      _defineProperty(this, \"enableMouseWheel\", true);\n      /**\n       * Determines if the users should see a blinking caret inside the Date Input when possible.\n       *\n       * @default false\n       */\n      _defineProperty(this, \"allowCaretMode\", false);\n      /**\n       * Determines whether to display the **Cancel** button in the popup.\n       */\n      _defineProperty(this, \"cancelButton\", true);\n      /**\n       * Determines whether to display the **Now** button in the popup.\n       *\n       * > If the current time is out of range or the incremental step is greater than `1`, the **Now** button will be hidden.\n       */\n      _defineProperty(this, \"nowButton\", true);\n      _defineProperty(this, \"tabindex\", 0);\n      _defineProperty(this, \"title\", \"\");\n      _defineProperty(this, \"_subtitle\", void 0);\n      /**\n       * Determines whether the built-in min or max validators are enforced when a form is being validated.\n       */\n      _defineProperty(this, \"rangeValidation\", true);\n      /**\n       * Enables or disables the adaptive mode. By default the adaptive rendering is disabled.\n       */\n      _defineProperty(this, \"adaptiveMode\", 'none');\n      _defineProperty(this, \"inputAttributes\", void 0);\n      /**\n       * Fires each time the user selects a new value\n       * ([see example](slug:events_timepicker)).\n       */\n      _defineProperty(this, \"valueChange\", new EventEmitter());\n      /**\n       * Fires each time the user focuses the input element\n       * ([see example](slug:events_timepicker)).\n       */\n      _defineProperty(this, \"onFocus\", new EventEmitter());\n      /**\n       * Fires each time the input element gets blurred\n       * ([see example](slug:events_timepicker)).\n       */\n      _defineProperty(this, \"onBlur\", new EventEmitter());\n      /**\n       * Fires each time the popup is about to open\n       * ([see example](slug:events_timepicker)).\n       * This event is preventable. If you cancel the event, the popup will remain closed.\n       */\n      _defineProperty(this, \"open\", new EventEmitter());\n      /**\n       * Fires each time the popup is about to close\n       * ([see example](slug:events_timepicker)).\n       * This event is preventable. If you cancel the event, the popup will remain open.\n       */\n      _defineProperty(this, \"close\", new EventEmitter());\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"escape\", new EventEmitter());\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"wrapperClasses\", true);\n      _defineProperty(this, \"popupRef\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"xIcon\", xIcon);\n      _defineProperty(this, \"onControlChange\", noop$2);\n      _defineProperty(this, \"onControlTouched\", noop$2);\n      _defineProperty(this, \"onValidatorChange\", noop$2);\n      _defineProperty(this, \"resolvedPromise\", Promise.resolve(null));\n      _defineProperty(this, \"timeRangeValidateFn\", noop$2);\n      _defineProperty(this, \"incompleteValidator\", noop$2);\n      _defineProperty(this, \"_min\", cloneDate(MIN_TIME));\n      _defineProperty(this, \"_max\", cloneDate(MAX_TIME));\n      _defineProperty(this, \"_popupSettings\", {\n        animate: true\n      });\n      _defineProperty(this, \"_show\", false);\n      _defineProperty(this, \"_steps\", {});\n      _defineProperty(this, \"_value\", null);\n      _defineProperty(this, \"_active\", false);\n      _defineProperty(this, \"localizationChangeSubscription\", void 0);\n      _defineProperty(this, \"pickerSubscriptions\", void 0);\n      _defineProperty(this, \"windowBlurSubscription\", void 0);\n      _defineProperty(this, \"control\", void 0);\n      _defineProperty(this, \"domEvents\", []);\n      _defineProperty(this, \"_size\", DEFAULT_SIZE);\n      _defineProperty(this, \"_rounded\", DEFAULT_ROUNDED);\n      _defineProperty(this, \"_fillMode\", DEFAULT_FILL_MODE);\n      _defineProperty(this, \"windowSize\", void 0);\n      this.bus = bus;\n      this.zone = zone;\n      this.localization = localization;\n      this.cdr = cdr;\n      this.popupService = popupService;\n      this.wrapper = wrapper;\n      this.renderer = renderer;\n      this.injector = injector;\n      this.pickerService = pickerService;\n      this.intl = intl;\n      this.adaptiveService = adaptiveService;\n      validatePackage(packageMetadata);\n      this.pickerSubscriptions = this.pickerService.onFocus.subscribe(this.handleFocus.bind(this));\n      this.pickerSubscriptions.add(this.pickerService.onBlur.subscribe(this.handleBlur.bind(this)));\n      this.pickerSubscriptions.add(this.pickerService.dateCompletenessChange.subscribe(this.handleDateCompletenessChange.bind(this)));\n    }\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty\n     */\n    isEmpty() {\n      return !this.value && this.dateInput.isEmpty();\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n      this.localizationChangeSubscription = this.localization.changes.subscribe(() => this.cdr.markForCheck());\n      this.control = this.injector.get(NgControl, null);\n      if (this.wrapper) {\n        this.renderer.removeAttribute(this.wrapper.nativeElement, 'tabindex');\n        this.zone.runOutsideAngular(() => {\n          this.bindEvents();\n        });\n      }\n      this.focusableId = this.dateInput?.focusableId;\n    }\n    /**\n     * @hidden\n     */\n    ngAfterViewInit() {\n      this.setComponentClasses();\n      this.windowSize = this.adaptiveService.size;\n      if (this.actionSheet && isDocumentAvailable()) {\n        // The following syntax is used as it does not violate CSP compliance\n        this.actionSheet.element.nativeElement.style.setProperty('--kendo-actionsheet-height', '60vh');\n        this.actionSheet.element.nativeElement.style.setProperty('--kendo-actionsheet-max-height', 'none');\n      }\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n      if (changes.min || changes.max || changes.rangeValidation || changes.incompleteDateValidation) {\n        this.timeRangeValidateFn = this.rangeValidation ? timeRangeValidator(this.min, this.max) : noop$2;\n        this.incompleteValidator = this.incompleteDateValidation ? incompleteDateValidator() : noop$2;\n        this.onValidatorChange();\n      }\n      if (changes.format) {\n        this.verifyFormat();\n      }\n      if (!this.focusableId || changes.focusableId) {\n        this.focusableId = this.dateInput?.focusableId;\n      }\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n      this.isActive = false;\n      this.show = false;\n      if (this.localizationChangeSubscription) {\n        this.localizationChangeSubscription.unsubscribe();\n      }\n      if (this.windowBlurSubscription) {\n        this.windowBlurSubscription.unsubscribe();\n      }\n      this.domEvents.forEach(unbindCallback => unbindCallback());\n      this.pickerSubscriptions.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n    handleKeydown(event) {\n      const {\n        altKey,\n        keyCode\n      } = event;\n      if (keyCode === Keys$1.Escape) {\n        this.focusInput();\n        this.show = false;\n        hasObservers(this.escape) && this.escape.emit();\n        this.cdr.detectChanges();\n        return;\n      }\n      if (altKey) {\n        if (keyCode === Keys$1.ArrowUp) {\n          event.preventDefault();\n          this.focusInput();\n          this.show = false;\n          this.cdr.detectChanges();\n        }\n        if (keyCode === Keys$1.ArrowDown && !this.show) {\n          event.preventDefault();\n          this.show = true;\n        }\n      }\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n      this.verifyValue(value);\n      this.value = cloneDate(value);\n      this.cdr.markForCheck();\n      if (!value && this.dateInput) {\n        this.dateInput.placeholder = this.placeholder;\n        this.dateInput.writeValue(value);\n      }\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n      this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n      this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    validate(control) {\n      return this.timeRangeValidateFn(control) || this.incompleteValidator(control, this.dateInput && this.dateInput.isDateIncomplete);\n    }\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn) {\n      this.onValidatorChange = fn;\n    }\n    /**\n     * Focuses the TimePicker component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"timepicker.focus()\">Focus time picker</button>\n     *  <kendo-timepicker #timepicker></kendo-timepicker>\n     * `\n     * })\n     * export class AppComponent { }\n     * ```\n     */\n    focus() {\n      this.dateInput.focus();\n    }\n    /**\n     * Blurs the TimePicker component.\n     */\n    blur() {\n      (this.timeSelector || this.dateInput)['blur']();\n    }\n    /**\n     * Toggles the visibility of the popup or actionSheet.\n     * If you use the `toggle` method to show or hide the popup or actionSheet,\n     * the `open` and `close` events do not fire.\n     *\n     * @param show - The state of the popup.\n     */\n    toggle(show) {\n      if (this.disabled || this.readonly) {\n        return;\n      }\n      this.resolvedPromise.then(() => {\n        this.toggleTimeSelector(show === undefined ? !this.show : show);\n      });\n    }\n    /**\n     * Indicates whether the component is currently open. That is when the popup or actionSheet is open.\n     */\n    get isOpen() {\n      return this.show;\n    }\n    /**\n     * @hidden\n     */\n    get appendTo() {\n      const {\n        appendTo\n      } = this.popupSettings;\n      if (!appendTo || appendTo === 'root') {\n        return undefined;\n      }\n      return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * @hidden\n     */\n    handleChange(value) {\n      if (isEqual(this.value, value)) {\n        if (this.show) {\n          this.focusInput();\n          this.show = false;\n        }\n        if (this.incompleteDateValidation) {\n          this.onControlChange(cloneDate(value));\n        }\n        return;\n      }\n      this.value = cloneDate(value);\n      this.zone.run(() => {\n        if (this.show) {\n          this.focusInput();\n          this.show = false;\n        }\n        this.dateInput.showClearButton = true;\n        this.onControlChange(cloneDate(value));\n        this.valueChange.emit(cloneDate(value));\n      });\n    }\n    /**\n     * @hidden\n     */\n    handleActionSheetAccept() {\n      this.timeSelector.handleAccept();\n    }\n    /**\n     * @hidden\n     */\n    handleActionSheetCollapse() {\n      // If not handled, the actionsheet expanded state does not get updated when overlay is clicked\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    handleReject() {\n      this.focusInput();\n      this.show = false;\n    }\n    /**\n     * @hidden\n     */\n    handleInputChange(value) {\n      const val = this.dateInput.formatSections['date'] ? value : this.mergeTime(value);\n      this.handleChange(val);\n    }\n    /**\n     * @hidden\n     */\n    handleDateInputClick() {\n      this.windowSize = this.adaptiveService.size;\n      if (this.isAdaptive) {\n        this.show = true;\n      }\n    }\n    /**\n     * @hidden\n     */\n    onTabOutNow() {\n      if (!this.timeSelector.showNowButton) {\n        this.cancelButton ? this.timeSelector.cancel.nativeElement.focus() : this.timeSelector.accept.nativeElement.focus();\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleMousedown(args) {\n      args.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    handleIconClick(event) {\n      if (this.disabled || this.readonly) {\n        return;\n      }\n      event.preventDefault();\n      this.focusInput();\n      //XXX: explicit call handleFocus handler here\n      //due to async IE focus event\n      this.handleFocus();\n      this.show = !this.show;\n      this.cdr.detectChanges();\n    }\n    /**\n     * @hidden\n     */\n    get popupClasses() {\n      return ['k-timepicker-popup'].concat(this.popupSettings.popupClass || []);\n    }\n    /**\n     * @hidden\n     */\n    get isAdaptiveModeEnabled() {\n      return this.adaptiveMode === 'auto';\n    }\n    /**\n     * @hidden\n     */\n    get isAdaptive() {\n      return this.isAdaptiveModeEnabled && this.windowSize !== 'large';\n    }\n    /**\n     * @hidden\n     */\n    normalizeTime(date) {\n      return setTime(MIDNIGHT_DATE, date);\n    }\n    /**\n     * @hidden\n     */\n    mergeTime(value) {\n      return this.value && value ? setTime(this.value, value) : value;\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n      const currentWindowSize = this.adaptiveService.size;\n      if (!this.isOpen || this.windowSize === currentWindowSize) {\n        return;\n      }\n      if (this.actionSheet.expanded) {\n        this.toggleActionSheet(false);\n      } else {\n        this.togglePopup(false);\n      }\n      this.windowSize = currentWindowSize;\n    }\n    /**\n     * @hidden\n     */\n    onTabOutLastPart() {\n      this.renderer.removeClass(this.timeSelector.timeListWrappers.last.nativeElement, 'k-focus');\n      if (this.isAdaptive) {\n        this.cancelButton ? this.adaptiveCancelButton.focus() : this.adaptiveAcceptButton.focus();\n      } else {\n        this.timeSelector.accept.nativeElement.focus();\n      }\n    }\n    /**\n     * @hidden\n     */\n    onTabOutFirstPart() {\n      this.renderer.removeClass(this.timeSelector.timeListWrappers.first.nativeElement, 'k-focus');\n      if (this.timeSelector.showNowButton) {\n        this.timeSelector.now.nativeElement.focus();\n      } else {\n        this.cancelButton ? this.timeSelector.cancel.nativeElement.focus() : this.timeSelector.accept.nativeElement.focus();\n      }\n    }\n    toggleTimeSelector(show) {\n      const previousWindowSize = this.windowSize;\n      this.windowSize = this.adaptiveService.size;\n      if (previousWindowSize !== this.windowSize && !show) {\n        if (previousWindowSize !== 'large') {\n          this.toggleActionSheet(show);\n        } else {\n          this.togglePopup(show);\n        }\n      } else {\n        if (this.isAdaptive) {\n          this.toggleActionSheet(show);\n        } else {\n          this.togglePopup(show);\n        }\n      }\n      this.toggleFocus();\n    }\n    toggleActionSheet(show) {\n      if (show === this._show) {\n        return;\n      }\n      if (show && !this.isOpen) {\n        this.actionSheet.toggle();\n        this.updateActionSheetAdaptiveAppearance();\n        this.renderer.setAttribute(this.actionSheet.element.nativeElement, 'id', this.popupUID);\n        this.renderer.setAttribute(this.dateInput?.inputElement, attributeNames.ariaControls, this.popupUID);\n      } else if (!show && this.isOpen) {\n        // Need to disable the pointer events to avoid triggering focus on the timelist when acionsheet close down animation starts\n        this.renderer.setStyle(this.timeSelector.element.nativeElement, 'pointer-events', 'none');\n        if (this.dateInput) {\n          this.renderer.removeAttribute(this.dateInput.inputElement, attributeNames.ariaControls);\n        }\n        this.actionSheet.toggle();\n      }\n      this._show = show;\n    }\n    togglePopup(show) {\n      if (show === this.isOpen) {\n        return;\n      }\n      this._show = show;\n      this.cdr.markForCheck();\n      if (show) {\n        const direction = this.localization.rtl ? 'right' : 'left';\n        const appendToComponent = typeof this.popupSettings.appendTo === 'string' && this.popupSettings.appendTo === 'component';\n        this.popupRef = this.popupService.open({\n          anchor: this.wrapper,\n          anchorAlign: {\n            vertical: 'bottom',\n            horizontal: direction\n          },\n          animate: this.popupSettings.animate,\n          appendTo: this.appendTo,\n          content: this.popupTemplate,\n          popupAlign: {\n            vertical: 'top',\n            horizontal: direction\n          },\n          popupClass: this.popupClasses,\n          positionMode: appendToComponent ? 'fixed' : 'absolute'\n        });\n        this.popupRef.popupElement.setAttribute('id', this.popupUID);\n        this.renderer.setAttribute(this.dateInput?.inputElement, attributeNames.ariaControls, this.popupUID);\n        this.popupRef.popupAnchorViewportLeave.subscribe(() => this.show = false);\n      } else {\n        this.popupRef.close();\n        this.popupRef = null;\n        if (this.dateInput) {\n          this.renderer.removeAttribute(this.dateInput?.inputElement, attributeNames.ariaControls);\n        }\n      }\n    }\n    updateActionSheetAdaptiveAppearance() {\n      let element;\n      let animationContainer;\n      if (this.actionSheet) {\n        element = this.actionSheet['element'].nativeElement.querySelector('.k-actionsheet');\n        animationContainer = this.actionSheet['element'].nativeElement.querySelector('.k-child-animation-container');\n        if (this.windowSize === 'medium') {\n          this.renderer.removeClass(element, 'k-actionsheet-fullscreen');\n          this.renderer.removeStyle(animationContainer, 'height');\n        } else if (this.windowSize === 'small') {\n          this.renderer.addClass(element, 'k-actionsheet-fullscreen');\n          this.renderer.setStyle(animationContainer, 'height', '100%');\n        }\n        this.renderer.addClass(element, 'k-adaptive-actionsheet');\n        this.renderer.addClass(element, 'k-actionsheet-bottom');\n        this.renderer.setStyle(animationContainer, 'bottom', '0px');\n      }\n    }\n    focusInput() {\n      if (touchEnabled) {\n        return;\n      }\n      this.dateInput.focus();\n    }\n    toggleFocus() {\n      if (!this.isActive) {\n        return;\n      }\n      if (this.show) {\n        if (!this.timeSelector) {\n          this.cdr.detectChanges();\n        }\n        if (this.isActive) {\n          this.timeSelector.focus();\n        }\n      } else if (!touchEnabled) {\n        this.dateInput.focus();\n      } else if (!this.dateInput.isActive) {\n        this.handleBlur();\n      }\n    }\n    verifyValue(value) {\n      if (!isDevMode()) {\n        return;\n      }\n      if (value && !(value instanceof Date)) {\n        throw new Error(`The 'value' should be a valid JavaScript Date instance or null. Check ${VALUE_DOC_LINK$1} for possible resolution.`);\n      }\n    }\n    verifyFormat() {\n      if (!isDevMode()) {\n        return;\n      }\n      const formatContainsDateParts = this.intl.splitDateFormat(this.format).some(part => !formatRegExp.test(part.type));\n      if (formatContainsDateParts) {\n        throw new Error(`Provided format is not supported. Supported specifiers are T|t|H|h|m|s|S|a. See ${INTL_DATE_FORMAT}`);\n      }\n    }\n    bindEvents() {\n      const element = this.wrapper.nativeElement;\n      this.domEvents.push(this.renderer.listen(element, 'keydown', this.handleKeydown.bind(this)));\n      if (isWindowAvailable()) {\n        this.windowBlurSubscription = fromEvent(window, 'blur').subscribe(this.handleWindowBlur.bind(this));\n      }\n    }\n    handleWindowBlur() {\n      if (!this.isOpen || this.actionSheet.expanded) {\n        return;\n      }\n      this.show = false;\n    }\n    handleFocus() {\n      if (this.isActive) {\n        return;\n      }\n      this.isActive = true;\n      if (hasObservers(this.onFocus)) {\n        this.zone.run(() => {\n          this.onFocus.emit();\n        });\n      }\n    }\n    handleBlur(args) {\n      const currentTarget = args && currentFocusTarget(args); // relatedTarget || activeElement\n      const target = args && args.target;\n      const isInsideActionSheet = this.actionSheet && (this.actionSheet.element.nativeElement.contains(target) || this.actionSheet.element.nativeElement.contains(currentTarget));\n      if (currentTarget && (this.dateInput.containsElement(currentTarget) || this.timeSelector && this.timeSelector.containsElement(currentTarget) || isInsideActionSheet)) {\n        return;\n      }\n      if (hasObservers(this.onBlur) || this.show && hasObservers(this.close) || requiresZoneOnBlur(this.control)) {\n        this.zone.run(() => {\n          this.blurComponent();\n          this.cdr.markForCheck();\n        });\n      } else {\n        this.blurComponent();\n      }\n      this.cdr.detectChanges();\n    }\n    blurComponent() {\n      this.isActive = false; // order is important ¯\\_(ツ)_/¯\n      this.show = false;\n      this.onControlTouched();\n      this.onBlur.emit();\n    }\n    handleDateCompletenessChange() {\n      this.cdr.markForCheck();\n      this.zone.run(() => this.onValidatorChange());\n    }\n    setComponentClasses() {\n      if (this.size) {\n        this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n        this.renderer.addClass(this.toggleButton.nativeElement, getSizeClass('button', this.size));\n      }\n      if (this.rounded) {\n        this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n      }\n      if (this.fillMode) {\n        this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n        this.renderer.addClass(this.toggleButton.nativeElement, getFillModeClass('button', this.fillMode));\n        this.renderer.addClass(this.toggleButton.nativeElement, `k-button-${this.fillMode}-base`);\n      }\n    }\n  }\n  _class64 = TimePickerComponent;\n  _defineProperty(TimePickerComponent, \"\\u0275fac\", function _class64_Factory(t) {\n    return new (t || _class64)(i0.ɵɵdirectiveInject(BusViewService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$2.PopupService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(PickerService), i0.ɵɵdirectiveInject(i1.IntlService), i0.ɵɵdirectiveInject(i6.AdaptiveService));\n  });\n  _defineProperty(TimePickerComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class64,\n    selectors: [[\"kendo-timepicker\"]],\n    viewQuery: function _class64_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c36, 5, ViewContainerRef);\n        i0.ɵɵviewQuery(_c37, 5);\n        i0.ɵɵviewQuery(_c38, 7);\n        i0.ɵɵviewQuery(_c39, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toggleButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.actionSheet = _t.first);\n      }\n    },\n    hostVars: 8,\n    hostBindings: function _class64_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-readonly\", ctx.readonly)(\"k-timepicker\", ctx.wrapperClasses)(\"k-input\", ctx.wrapperClasses)(\"k-disabled\", ctx.disabledClass);\n      }\n    },\n    inputs: {\n      focusableId: \"focusableId\",\n      disabled: \"disabled\",\n      readonly: \"readonly\",\n      readOnlyInput: \"readOnlyInput\",\n      clearButton: \"clearButton\",\n      format: \"format\",\n      formatPlaceholder: \"formatPlaceholder\",\n      placeholder: \"placeholder\",\n      min: \"min\",\n      max: \"max\",\n      incompleteDateValidation: \"incompleteDateValidation\",\n      autoSwitchParts: \"autoSwitchParts\",\n      autoSwitchKeys: \"autoSwitchKeys\",\n      enableMouseWheel: \"enableMouseWheel\",\n      allowCaretMode: \"allowCaretMode\",\n      cancelButton: \"cancelButton\",\n      nowButton: \"nowButton\",\n      steps: \"steps\",\n      popupSettings: \"popupSettings\",\n      tabindex: \"tabindex\",\n      tabIndex: \"tabIndex\",\n      title: \"title\",\n      subtitle: \"subtitle\",\n      rangeValidation: \"rangeValidation\",\n      adaptiveMode: \"adaptiveMode\",\n      value: \"value\",\n      size: \"size\",\n      rounded: \"rounded\",\n      fillMode: \"fillMode\",\n      inputAttributes: \"inputAttributes\"\n    },\n    outputs: {\n      valueChange: \"valueChange\",\n      onFocus: \"focus\",\n      onBlur: \"blur\",\n      open: \"open\",\n      close: \"close\",\n      escape: \"escape\"\n    },\n    exportAs: [\"kendo-timepicker\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => _class64),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => _class64),\n      multi: true\n    }, {\n      provide: KendoInput,\n      useExisting: forwardRef(() => _class64)\n    }, {\n      provide: MultiTabStop,\n      useExisting: forwardRef(() => _class64)\n    }, LocalizationService, BusViewService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.timepicker'\n    }, PickerService]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 17,\n    vars: 35,\n    consts: function () {\n      let i18n_72;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Accept button text in the timepicker component\n         * @meaning kendo.timepicker.accept\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_73 = goog.getMsg(\"Set\");\n        i18n_72 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_73;\n      } else {\n        i18n_72 = $localize`:kendo.timepicker.accept|The Accept button text in the timepicker component:Set`;\n      }\n      let i18n_74;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Accept button in the timepicker component\n         * @meaning kendo.timepicker.acceptLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_75 = goog.getMsg(\"Set time\");\n        i18n_74 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_75;\n      } else {\n        i18n_74 = $localize`:kendo.timepicker.acceptLabel|The label for the Accept button in the timepicker component:Set time`;\n      }\n      let i18n_76;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Cancel button text in the timepicker component\n         * @meaning kendo.timepicker.cancel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_77 = goog.getMsg(\"Cancel\");\n        i18n_76 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_77;\n      } else {\n        i18n_76 = $localize`:kendo.timepicker.cancel|The Cancel button text in the timepicker component:Cancel`;\n      }\n      let i18n_78;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Cancel button in the timepicker component\n         * @meaning kendo.timepicker.cancelLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_79 = goog.getMsg(\"Cancel changes\");\n        i18n_78 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_79;\n      } else {\n        i18n_78 = $localize`:kendo.timepicker.cancelLabel|The label for the Cancel button in the timepicker component:Cancel changes`;\n      }\n      let i18n_80;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Now button text in the timepicker component\n         * @meaning kendo.timepicker.now\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_81 = goog.getMsg(\"Now\");\n        i18n_80 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_81;\n      } else {\n        i18n_80 = $localize`:kendo.timepicker.now|The Now button text in the timepicker component:Now`;\n      }\n      let i18n_82;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Now button in the timepicker component\n         * @meaning kendo.timepicker.nowLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_83 = goog.getMsg(\"Select now\");\n        i18n_82 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_83;\n      } else {\n        i18n_82 = $localize`:kendo.timepicker.nowLabel|The label for the Now button in the timepicker component:Select now`;\n      }\n      let i18n_84;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the toggle button in the timepicker component\n         * @meaning kendo.timepicker.toggle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_85 = goog.getMsg(\"Toggle time list\");\n        i18n_84 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_85;\n      } else {\n        i18n_84 = $localize`:kendo.timepicker.toggle|The label for the toggle button in the timepicker component:Toggle time list`;\n      }\n      let i18n_86;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the hour part in the timepicker component\n         * @meaning kendo.timepicker.hour\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_87 = goog.getMsg(\"Hour\");\n        i18n_86 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_87;\n      } else {\n        i18n_86 = $localize`:kendo.timepicker.hour|The label for the hour part in the timepicker component:Hour`;\n      }\n      let i18n_88;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the minute part in the timepicker component\n         * @meaning kendo.timepicker.minute\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_89 = goog.getMsg(\"Minute\");\n        i18n_88 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_89;\n      } else {\n        i18n_88 = $localize`:kendo.timepicker.minute|The label for the minute part in the timepicker component:Minute`;\n      }\n      let i18n_90;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the second part in the timepicker component\n         * @meaning kendo.timepicker.second\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_91 = goog.getMsg(\"Second\");\n        i18n_90 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_91;\n      } else {\n        i18n_90 = $localize`:kendo.timepicker.second|The label for the second part in the timepicker component:Second`;\n      }\n      let i18n_92;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the millisecond part in the timepicker component\n         * @meaning kendo.timepicker.millisecond\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_93 = goog.getMsg(\"Millisecond\");\n        i18n_92 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_93;\n      } else {\n        i18n_92 = $localize`:kendo.timepicker.millisecond|The label for the millisecond part in the timepicker component:Millisecond`;\n      }\n      let i18n_94;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the dayperiod part in the timepicker component\n         * @meaning kendo.timepicker.dayperiod\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_95 = goog.getMsg(\"Dayperiod\");\n        i18n_94 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_95;\n      } else {\n        i18n_94 = $localize`:kendo.timepicker.dayperiod|The label for the dayperiod part in the timepicker component:Dayperiod`;\n      }\n      let i18n_96;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the clear button\n         * @meaning kendo.timepicker.clearTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_97 = goog.getMsg(\"clear\");\n        i18n_96 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_97;\n      } else {\n        i18n_96 = $localize`:kendo.timepicker.clearTitle|The title of the clear button:clear`;\n      }\n      return [[\"kendoTimePickerLocalizedMessages\", \"\", \"accept\", i18n_72, \"acceptLabel\", i18n_74, \"cancel\", i18n_76, \"cancelLabel\", i18n_78, \"now\", i18n_80, \"nowLabel\", i18n_82, \"toggle\", i18n_84, \"hour\", i18n_86, \"minute\", i18n_88, \"second\", i18n_90, \"millisecond\", i18n_92, \"dayperiod\", i18n_94, \"clearTitle\", i18n_96], [\"pickerType\", \"timepicker\", \"hasPopup\", \"dialog\", \"fillMode\", \"none\", \"rounded\", \"none\", \"size\", \"none\", 3, \"isPopupOpen\", \"disabled\", \"clearButton\", \"readonly\", \"role\", \"ariaReadOnly\", \"format\", \"formatPlaceholder\", \"placeholder\", \"focusableId\", \"min\", \"max\", \"incompleteDateValidation\", \"autoSwitchParts\", \"autoSwitchKeys\", \"enableMouseWheel\", \"allowCaretMode\", \"steps\", \"tabindex\", \"isRequired\", \"title\", \"inputAttributes\", \"value\", \"valueChange\", \"click\"], [\"input\", \"\"], [3, \"clearTitle\"], [\"type\", \"button\", \"tabindex\", \"-1\", 1, \"k-input-button\", \"k-button\", \"k-icon-button\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [\"toggleButton\", \"\"], [\"name\", \"clock\", \"innerCssClass\", \"k-button-icon\", 3, \"svgIcon\"], [\"popupTemplate\", \"\"], [\"container\", \"\"], [3, \"resize\", 4, \"ngIf\"], [3, \"titleId\", \"overlayClick\", \"collapse\"], [\"actionSheet\", \"\"], [\"kendoActionSheetTemplate\", \"\"], [\"timeSelectorTemplate\", \"\"], [4, \"ngTemplateOutlet\"], [3, \"resize\"], [1, \"k-actionsheet-titlebar\"], [1, \"k-actionsheet-titlebar-group\", \"k-hbox\"], [1, \"k-actionsheet-title\"], [1, \"k-text-center\"], [1, \"k-actionsheet-subtitle\", \"k-text-center\"], [1, \"k-actionsheet-actions\"], [\"kendoButton\", \"\", \"type\", \"button\", \"icon\", \"x\", \"fillMode\", \"flat\", \"size\", \"large\", \"aria-hidden\", \"true\", \"innerCssClass\", \"k-button-icon\", 3, \"svgIcon\", \"tabIndex\", \"click\"], [1, \"k-actionsheet-content\", \"!k-overflow-hidden\"], [1, \"k-actions\", \"k-actions-stretched\", \"k-actions-horizontal\", \"k-actionsheet-footer\"], [\"kendoButton\", \"\", \"type\", \"button\", \"size\", \"large\", 1, \"k-time-cancel\", 3, \"click\"], [\"kendoButton\", \"\", \"type\", \"button\", \"size\", \"large\", \"themeColor\", \"primary\", 1, \"k-time-accept\", 3, \"click\"], [3, \"cancelButton\", \"setButton\", \"nowButton\", \"format\", \"min\", \"max\", \"steps\", \"value\", \"isAdaptiveEnabled\", \"kendoEventsOutsideAngular\", \"scope\", \"valueChange\", \"valueReject\", \"tabOutLastPart\", \"tabOutFirstPart\", \"tabOutNow\"], [\"timeSelector\", \"\"], [3, \"acceptLabel\", \"accept\", \"cancelLabel\", \"cancel\", \"nowLabel\", \"now\", \"hour\", \"minute\", \"second\", \"millisecond\", \"dayperiod\"]];\n    },\n    template: function _class64_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n        i0.ɵɵelementStart(1, \"kendo-dateinput\", 1, 2);\n        i0.ɵɵlistener(\"valueChange\", function _class64_Template_kendo_dateinput_valueChange_1_listener($event) {\n          return ctx.handleInputChange($event);\n        })(\"click\", function _class64_Template_kendo_dateinput_click_1_listener() {\n          return ctx.handleDateInputClick();\n        });\n        i0.ɵɵelement(3, \"kendo-dateinput-messages\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 4, 5);\n        i0.ɵɵelement(6, \"kendo-icon-wrapper\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, _class64_ng_template_7_Template, 1, 1, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementContainer(9, null, 8);\n        i0.ɵɵtemplate(11, _class64_kendo_resize_sensor_11_Template, 1, 0, \"kendo-resize-sensor\", 9);\n        i0.ɵɵelementStart(12, \"kendo-actionsheet\", 10, 11);\n        i0.ɵɵlistener(\"overlayClick\", function _class64_Template_kendo_actionsheet_overlayClick_12_listener() {\n          return ctx.show = false;\n        })(\"collapse\", function _class64_Template_kendo_actionsheet_collapse_12_listener() {\n          return ctx.handleActionSheetCollapse();\n        });\n        i0.ɵɵtemplate(14, _class64_ng_template_14_Template, 16, 12, \"ng-template\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, _class64_ng_template_15_Template, 3, 27, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"isPopupOpen\", ctx.show)(\"disabled\", ctx.disabled)(\"clearButton\", ctx.clearButton)(\"readonly\", ctx.readonly || ctx.readOnlyInput)(\"role\", \"combobox\")(\"ariaReadOnly\", ctx.readonly)(\"format\", ctx.format)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"placeholder\", ctx.placeholder)(\"focusableId\", ctx.focusableId)(\"min\", ctx.normalizeTime(ctx.min))(\"max\", ctx.normalizeTime(ctx.max))(\"incompleteDateValidation\", ctx.incompleteDateValidation)(\"autoSwitchParts\", ctx.autoSwitchParts)(\"autoSwitchKeys\", ctx.autoSwitchKeys)(\"enableMouseWheel\", ctx.enableMouseWheel)(\"allowCaretMode\", ctx.allowCaretMode)(\"steps\", ctx.steps)(\"tabindex\", !ctx.show ? ctx.tabindex : -1)(\"isRequired\", ctx.isControlRequired)(\"title\", ctx.title)(\"inputAttributes\", ctx.inputAttributes)(\"value\", ctx.value);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"clearTitle\", ctx.localization.get(\"clearTitle\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(32, _c53, ctx.handleIconClick, ctx.handleMousedown))(\"scope\", ctx);\n        i0.ɵɵattribute(\"title\", ctx.localization.get(\"toggle\"))(\"aria-label\", ctx.localization.get(\"toggle\"))(\"disabled\", ctx.disabled ? \"\" : null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"svgIcon\", ctx.clockIcon);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAdaptiveModeEnabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"titleId\", ctx.focusableId);\n      }\n    },\n    dependencies: [TimePickerLocalizedMessagesDirective, DateInputComponent, DateInputCustomMessagesComponent, EventsOutsideAngularDirective, IconWrapperComponent, NgTemplateOutlet, NgIf, ResizeSensorComponent, ActionSheetComponent, ActionSheetTemplateDirective, ButtonComponent, TimeSelectorComponent, TimeSelectorCustomMessagesComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return TimePickerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet DateTimePickerMessages = /*#__PURE__*/(() => {\n  var _class65;\n  class DateTimePickerMessages extends ComponentMessages {\n    constructor(...args) {\n      super(...args);\n      /**\n       * The title of the **Toggle** button of the DateTimePicker.\n       */\n      _defineProperty(this, \"toggle\", void 0);\n      /**\n       * The text of the **Date** tab in the popup header of the DateTimePicker.\n       */\n      _defineProperty(this, \"dateTab\", void 0);\n      /**\n       * The label of the **Date** tab in the popup header of the DateTimePicker.\n       */\n      _defineProperty(this, \"dateTabLabel\", void 0);\n      /**\n       * The text of the **Time** tab in the popup header of the DateTimePicker.\n       */\n      _defineProperty(this, \"timeTab\", void 0);\n      /**\n       * The label of the **Time** tab in the popup header of the DateTimePicker.\n       */\n      _defineProperty(this, \"timeTabLabel\", void 0);\n      /**\n       * The text of the **Accept** button in the popup footer of the DateTimePicker.\n       */\n      _defineProperty(this, \"accept\", void 0);\n      /**\n       * The label of the **Accept** button in the popup footer of the DateTimePicker.\n       */\n      _defineProperty(this, \"acceptLabel\", void 0);\n      /**\n       * The text of the **Cancel** button in the popup footer of the DateTimePicker.\n       */\n      _defineProperty(this, \"cancel\", void 0);\n      /**\n       * The label of the **Cancel** button in the popup footer of the DateTimePicker.\n       */\n      _defineProperty(this, \"cancelLabel\", void 0);\n      /**\n       * The **Today** button text in the header of the Calendar.\n       */\n      _defineProperty(this, \"today\", void 0);\n      /**\n       * The text of the **Now** button in the popup header of the TimePicker.\n       */\n      _defineProperty(this, \"now\", void 0);\n      /**\n       * The label of the **Now** button in the popup header of the TimePicker.\n       */\n      _defineProperty(this, \"nowLabel\", void 0);\n      /**\n       * The title of the **Prev** button in the header of the Classic Calendar.\n       */\n      _defineProperty(this, \"prevButtonTitle\", void 0);\n      /**\n       * The title of the **Next** button in the header of the Classic Calendar.\n       */\n      _defineProperty(this, \"nextButtonTitle\", void 0);\n      /**\n       * The title of the **Parent View** button in the header of the Calendar.\n       */\n      _defineProperty(this, \"parentViewButtonTitle\", void 0);\n      /**\n       * The label of the **Hour** part in the TimePicker.\n       */\n      _defineProperty(this, \"hour\", void 0);\n      /**\n       * The label of the **Minute** part in the TimePicker.\n       */\n      _defineProperty(this, \"minute\", void 0);\n      /**\n       * The label of the **Second** part in the TimePicker.\n       */\n      _defineProperty(this, \"second\", void 0);\n      /**\n       * The label of the **Millisecond** part in the TimePicker.\n       */\n      _defineProperty(this, \"millisecond\", void 0);\n      /**\n       * The label of the **Dayperiod** part in the TimePicker.\n       */\n      _defineProperty(this, \"dayperiod\", void 0);\n      /**\n       * The title of the **Clear** button of the DateTimePicker.\n       */\n      _defineProperty(this, \"clearTitle\", void 0);\n    }\n  }\n  _class65 = DateTimePickerMessages;\n  _defineProperty(DateTimePickerMessages, \"\\u0275fac\", /* @__PURE__ */function () {\n    let ɵ_class65_BaseFactory;\n    return function _class65_Factory(t) {\n      return (ɵ_class65_BaseFactory || (ɵ_class65_BaseFactory = i0.ɵɵgetInheritedFactory(_class65)))(t || _class65);\n    };\n  }());\n  _defineProperty(DateTimePickerMessages, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class65,\n    selectors: [[\"kendo-datetimepicker-messages-base\"]],\n    inputs: {\n      toggle: \"toggle\",\n      dateTab: \"dateTab\",\n      dateTabLabel: \"dateTabLabel\",\n      timeTab: \"timeTab\",\n      timeTabLabel: \"timeTabLabel\",\n      accept: \"accept\",\n      acceptLabel: \"acceptLabel\",\n      cancel: \"cancel\",\n      cancelLabel: \"cancelLabel\",\n      today: \"today\",\n      now: \"now\",\n      nowLabel: \"nowLabel\",\n      prevButtonTitle: \"prevButtonTitle\",\n      nextButtonTitle: \"nextButtonTitle\",\n      parentViewButtonTitle: \"parentViewButtonTitle\",\n      hour: \"hour\",\n      minute: \"minute\",\n      second: \"second\",\n      millisecond: \"millisecond\",\n      dayperiod: \"dayperiod\",\n      clearTitle: \"clearTitle\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  }));\n  return DateTimePickerMessages;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet LocalizedMessagesDirective = /*#__PURE__*/(() => {\n  var _class66;\n  class LocalizedMessagesDirective extends DateTimePickerMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n  }\n  _class66 = LocalizedMessagesDirective;\n  _defineProperty(LocalizedMessagesDirective, \"\\u0275fac\", function _class66_Factory(t) {\n    return new (t || _class66)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(LocalizedMessagesDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class66,\n    selectors: [[\"\", \"kendoDateTimePickerLocalizedMessages\", \"\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: DateTimePickerMessages,\n      useExisting: forwardRef(() => _class66)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  }));\n  return LocalizedMessagesDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst timeFormatRegExp = new RegExp(`${TIME_PART.hour}|${TIME_PART.minute}|${TIME_PART.second}|${TIME_PART.dayperiod}|literal`);\nconst VALUE_DOC_LINK = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/datetimepicker/integration-with-json/';\nconst MIN_MAX_DOC_LINK = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/datetimepicker/date-time-limits/';\nconst DEFAULT_ACTIVE_TAB = 'date';\nconst DEFAULT_DATEINPUT_FORMAT = 'g';\nconst DEFAULT_TIMESELECTOR_FORMAT = 't';\nconst TWO_DIGIT_YEAR_MAX = 68;\nconst ACCEPT_BUTTON_SELECTOR = '.k-button.k-time-accept';\nconst CANCEL_BUTTON_SELECOTR = '.k-button.k-time-cancel';\nconst DATE_TAB_BUTTON_SELECTOR = '.k-button.k-group-start';\nconst TIME_TAB_BUTTON_SELECTOR = '.k-button.k-group-end';\nconst TODAY_BUTTON_SELECTOR = '.k-button.k-calendar-nav-today';\n/**\n * Represents the [Kendo UI DateTimePicker component for Angular]({% slug overview_datetimepicker %}).\n */\nlet DateTimePickerComponent = /*#__PURE__*/(() => {\n  var _class67;\n  class DateTimePickerComponent extends MultiTabStop {\n    /**\n     * @hidden\n     */\n    get disabledClass() {\n      return this.disabled;\n    }\n    /**\n     * @hidden\n     */\n\n    /**\n     * @hidden\n     */\n    get dateInput() {\n      return this.pickerService.input;\n    }\n    /**\n     * @hidden\n     */\n    get calendar() {\n      return this.pickerService.calendar;\n    }\n    /**\n     * @hidden\n     */\n    get timeSelector() {\n      return this.pickerService.timeSelector;\n    }\n    /**\n     * @hidden\n     */\n\n    /**\n     * Specifies the value of the DateTimePicker component.\n     *\n     * > The `value` has to be a valid [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance or `null`.\n     */\n    set value(value) {\n      this.verifyValue(value);\n      this._value = cloneDate(value);\n      this.setCalendarValue(value);\n      this.cdr.markForCheck();\n    }\n    get value() {\n      return this._value;\n    }\n    /**\n     * Specifies the date format for displaying the input value\n     * ([see example]({% slug formats_datetimepicker %}))\n     *\n     * Format value options:\n     * - `string` - Provide a `string` if a single format is going to be used regardless whether the input is focused or blurred.\n     * - [`FormatSettings`]({% slug api_dateinputs_formatsettings %}) - To display different formats when the component is focused or blurred, provide a settings object with specified `inputFormat` and `displayFormat` values.\n     *\n     * > If a [`FormatSettings`]({% slug api_dateinputs_formatsettings %}) object is provided, the `displayFormat` value will be used for the popup TimePicker.\n     */\n    set format(format) {\n      this._format = format;\n      const displayFormat = this.getDisplayFormat(format);\n      this.timeSelectorFormat = this.getTimeSelectorFormat(displayFormat);\n    }\n    get format() {\n      return this._format;\n    }\n    /**\n     * The maximum year to assume to be from the current century when typing two-digit year value\n     * ([see example]({% slug formats_datetimepicker %}#toc-two-digit-year-format)).\n     *\n     * The default value is 68, indicating that typing any value less than 69\n     * will be assumed to be 20xx, while 69 and larger will be assumed to be 19xx.\n     */\n\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the DateTimePicker.\n     */\n    set tabindex(value) {\n      const tabindex = Number(value);\n      const defaultValue = 0;\n      this._tabindex = !isNaN(tabindex) ? tabindex : defaultValue;\n    }\n    get tabindex() {\n      return this.disabled ? -1 : this._tabindex;\n    }\n    /**\n     * Sets the dates of the DateTimePicker that will be disabled\n     * ([see example]({% slug disabled_dates_datetimepicker %})).\n     */\n    set disabledDates(value) {\n      this._disabledDates = value;\n      this.disabledDatesService.initialize(value);\n    }\n    get disabledDates() {\n      return this._disabledDates;\n    }\n    /**\n     * Configures the popup settings of the DateTimePicker\n     * ([see example]({% slug datetimepicker_popup_options %}#toc-customizing-the-popup)).\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `appendTo: 'root' | 'component' | ViewContainerRef`&mdash;Controls the popup container. By default, the popup will be appended to the root component.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     */\n    set popupSettings(settings) {\n      this._popupSettings = Object.assign({}, {\n        animate: true\n      }, settings);\n    }\n    get popupSettings() {\n      return this._popupSettings;\n    }\n    /**\n     * Sets the title of the input element of the DateTimePicker and the title text rendered\n     * in the header of the popup(action sheet). Applicable only when [`AdaptiveMode` is set to `auto`](slug:api_dateinputs_adaptivemode).\n     */\n\n    /**\n     * Sets the subtitle text rendered in the header of the popup(action sheet).\n     * Applicable only when [`AdaptiveMode` is set to `auto`](slug:api_dateinputs_adaptivemode).\n     */\n    set subtitle(subtitle) {\n      this._subtitle = subtitle;\n    }\n    get subtitle() {\n      return this._subtitle || this.placeholder;\n    }\n    /**\n     * Specifies the smallest valid date.\n     * The Calendar will not display dates before this value.\n     * If the `min` value of the Calendar is selected, the TimePicker will not display\n     * time entries before the specified time portion of this value\n     * ([see example]({% slug dateranges_datetimepicker %})).\n     */\n    set min(value) {\n      this._min = cloneDate(value);\n      this.calendarMin = getDate(value || MIN_DATE);\n    }\n    get min() {\n      return this._min;\n    }\n    /**\n     * Specifies the biggest valid date.\n     * The Calendar will not display dates after this value.\n     * If the `max` value of the Calendar is selected, the TimePicker will not display\n     * time entries after the specified time portion of this value\n     * ([see example]({% slug dateranges_datetimepicker %})).\n     */\n    set max(value) {\n      this._max = cloneDate(value);\n      this.calendarMax = lastMillisecondOfDate(value || MAX_DATE);\n    }\n    get max() {\n      return this._max;\n    }\n    /**\n     * Determines whether the built-in min or max validators are enforced when validating a form\n     * ([see example](slug:dateranges_datetimepicker)).\n     */\n\n    /**\n     * Indicates whether the component is currently open. That is when the popup or actionSheet is open.\n     */\n    get isOpen() {\n      return isTruthy(this.actionSheet?.expanded) || isPresent(this.popupRef);\n    }\n    /**\n     * Indicates whether the component or its popup content is focused.\n     */\n    get isActive() {\n      return this._isActive;\n    }\n    set isActive(value) {\n      if (value) {\n        this.renderer.addClass(this.wrapper.nativeElement, 'k-focus');\n      } else {\n        this.renderer.removeClass(this.wrapper.nativeElement, 'k-focus');\n      }\n      this._isActive = value;\n    }\n    /**\n     * Sets the active tab on opening the popup\n     * ([see example]({% slug datetimepicker_popup_options %}#toc-setting-the-default-tab)).\n     */\n    set defaultTab(tab) {\n      this._defaultTab = tab || DEFAULT_ACTIVE_TAB;\n      this.activeTab = this.defaultTab;\n    }\n    get defaultTab() {\n      return this._defaultTab;\n    }\n    /**\n     * Sets the size of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (Default)\n     * * `large`\n     * * `none`\n     *\n     */\n    set size(size) {\n      this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n      this.renderer.removeClass(this.toggleButton.nativeElement, getSizeClass('button', this.size));\n      const newSize = size ? size : DEFAULT_SIZE;\n      if (newSize !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', newSize));\n        this.renderer.addClass(this.toggleButton.nativeElement, getSizeClass('button', newSize));\n      }\n      this._size = newSize;\n    }\n    get size() {\n      return this._size;\n    }\n    /**\n     * Sets the border radius of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (Default)\n     * * `large`\n     * * `full`\n     * * `none`\n     *\n     */\n    set rounded(rounded) {\n      this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n      const newRounded = rounded ? rounded : DEFAULT_ROUNDED;\n      if (newRounded !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n      }\n      this._rounded = newRounded;\n    }\n    get rounded() {\n      return this._rounded;\n    }\n    /**\n     * Sets the fillMode of the component.\n     *\n     * The possible values are:\n     * * `solid` (Default)\n     * * `flat`\n     * * `outline`\n     * * `none`\n     *\n     */\n    set fillMode(fillMode) {\n      this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n      this.renderer.removeClass(this.toggleButton.nativeElement, getFillModeClass('button', this.fillMode));\n      this.renderer.removeClass(this.toggleButton.nativeElement, `k-button-${this.fillMode}-base`);\n      const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE;\n      if (newFillMode !== 'none') {\n        this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', newFillMode));\n        this.renderer.addClass(this.toggleButton.nativeElement, getFillModeClass('button', newFillMode));\n        this.renderer.addClass(this.toggleButton.nativeElement, `k-button-${newFillMode}-base`);\n      }\n      this._fillMode = newFillMode;\n    }\n    get fillMode() {\n      return this._fillMode;\n    }\n    /**\n     * @hidden\n     */\n    get tabSwitchTransition() {\n      /*\n       When the popup is opening, disables the set transition in the themes. When `defaultTab` is set to `time`,\n       the popup opens with an active **Time** tab and the animation of the initial transition is undesired.\n       Setting the inline transition style to `none` overrides the set animation in the themes.\n       Setting the inline transition style to `null` does not apply any inline styles or override the themes CSS.\n      */\n      return this.isOpen ? null : 'none';\n    }\n    /**\n     * @hidden\n     *\n     * Indicates whether the Calendar will be disabled.\n     * The inactive tab component gets disabled and becomes inaccessible on tab click.\n     */\n    get disableCalendar() {\n      return this.activeTab !== 'date' && !this.calendar.isActive;\n    }\n    /**\n     * @hidden\n     *\n     * Indicates whether the TimeSelector will be disabled.\n     * The inactive tab component gets disabled and becomes inaccessible on tab click.\n     */\n    get disableTimeSelector() {\n      return this.activeTab !== 'time' && !this.timeSelector.isActive;\n    }\n    /**\n     * @hidden\n     */\n    get isAdaptiveModeEnabled() {\n      return this.adaptiveMode === 'auto';\n    }\n    /**\n     * @hidden\n     */\n    get isAdaptive() {\n      return this.isAdaptiveModeEnabled && this.windowSize !== 'large';\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n      const currentWindowSize = this.adaptiveService.size;\n      if (!this.isOpen || this.windowSize === currentWindowSize) {\n        return;\n      }\n      if (this.actionSheet.expanded) {\n        this.toggleActionSheet(false);\n      } else {\n        this._togglePopup(false);\n      }\n      this.windowSize = currentWindowSize;\n    }\n    /**\n     * @hidden\n     *\n     * Controls whether the Calendar or the TimeSelector will be displayed.\n     */\n\n    /**\n     * @hidden\n     */\n    set headerTemplateRef(template) {\n      this.headerTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n    /**\n     * @hidden\n     */\n    set footerTemplateRef(template) {\n      this.footerTemplate = template;\n    }\n    /**\n     * Toggles the visibility of the Calendar footer.\n     * @default false\n     */\n\n    get activeTabComponent() {\n      if (!this.isOpen) {\n        return;\n      }\n      if (!(isPresent(this.calendar) || isPresent(this.timeSelector))) {\n        this.cdr.detectChanges();\n      }\n      return this.activeTab === 'date' ? this.calendar : this.timeSelector;\n    }\n    get appendTo() {\n      const {\n        appendTo\n      } = this.popupSettings;\n      if (!isPresent(appendTo) || appendTo === 'root') {\n        return undefined;\n      }\n      return appendTo === 'component' ? this.container : appendTo;\n    }\n    get popupUID() {\n      return this.calendar?.popupId;\n    }\n    get acceptButton() {\n      if (this.isAdaptive) {\n        return this.actionSheet.element.nativeElement.querySelector(ACCEPT_BUTTON_SELECTOR);\n      } else {\n        return this.popupRef?.popup.instance.container.nativeElement.querySelector(ACCEPT_BUTTON_SELECTOR);\n      }\n    }\n    get cancelButtonElement() {\n      if (this.isAdaptive) {\n        return this.actionSheet.element.nativeElement.querySelector(CANCEL_BUTTON_SELECOTR);\n      } else {\n        return this.popupRef?.popup.instance.container.nativeElement.querySelector(CANCEL_BUTTON_SELECOTR);\n      }\n    }\n    get dateTabButton() {\n      if (this.isAdaptive) {\n        return this.actionSheet.element.nativeElement.querySelector(DATE_TAB_BUTTON_SELECTOR);\n      } else {\n        return this.popupRef?.popup.instance.container.nativeElement.querySelector(DATE_TAB_BUTTON_SELECTOR);\n      }\n    }\n    get timeTabButton() {\n      if (this.isAdaptive) {\n        return this.actionSheet.element.nativeElement.querySelector(TIME_TAB_BUTTON_SELECTOR);\n      } else {\n        return this.popupRef?.popup.instance.container.nativeElement.querySelector(TIME_TAB_BUTTON_SELECTOR);\n      }\n    }\n    get todayButton() {\n      if (this.isAdaptive) {\n        return this.actionSheet.element.nativeElement.querySelector(TODAY_BUTTON_SELECTOR);\n      } else {\n        return this.popupRef?.popup.instance.container.nativeElement.querySelector(TODAY_BUTTON_SELECTOR);\n      }\n    }\n    /**\n     * @hidden\n     */\n    get formControl() {\n      const ngControl = this.injector.get(NgControl, null);\n      return ngControl?.control || null;\n    }\n    /**\n     * @hidden\n     */\n    get isControlRequired() {\n      return isControlRequired(this.formControl);\n    }\n    constructor(popupService, intl, cdr, pickerService, ngZone, wrapper, localization, disabledDatesService, renderer, injector, adaptiveService) {\n      super();\n      _defineProperty(this, \"popupService\", void 0);\n      _defineProperty(this, \"intl\", void 0);\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"pickerService\", void 0);\n      _defineProperty(this, \"ngZone\", void 0);\n      _defineProperty(this, \"wrapper\", void 0);\n      _defineProperty(this, \"localization\", void 0);\n      _defineProperty(this, \"disabledDatesService\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"injector\", void 0);\n      _defineProperty(this, \"adaptiveService\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"calendarIcon\", calendarIcon);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"clockIcon\", clockIcon);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"hostClasses\", true);\n      _defineProperty(this, \"toggleButton\", void 0);\n      _defineProperty(this, \"focusableId\", void 0);\n      /**\n       * Sets the format of the displayed Calendar week days' names.\n       * @default 'short'\n       */\n      _defineProperty(this, \"weekDaysFormat\", \"short\");\n      /**\n       * Displays the days that fall out of the current month in the Calendar ([see example]({% slug datetimepicker_calendar_options %}#toc-displaying-other-month-days)).\n       * The default values per Calendar type are:\n       * - `infinite` - false\n       * - `classic` - true\n       */\n      _defineProperty(this, \"showOtherMonthDays\", void 0);\n      _defineProperty(this, \"twoDigitYearMax\", TWO_DIGIT_YEAR_MAX);\n      _defineProperty(this, \"title\", '');\n      _defineProperty(this, \"_subtitle\", void 0);\n      /**\n       * Sets or gets the `disabled` property of the DateTimePicker and determines whether the component is active\n       * ([see example]({% slug disabled_datetimepicker %})).\n       * To learn how to disable the component in reactive forms, refer to the article on [Forms Support](slug:formssupport_datetimepicker#toc-managing-the-datetimepicker-disabled-state-in-reactive-forms).\n       */\n      _defineProperty(this, \"disabled\", false);\n      /**\n       * Sets the read-only state of the DateTimePicker\n       * ([see example]({% slug readonly_datetimepicker %}#toc-read-only-datetimepicker)).\n       *\n       * @default false\n       */\n      _defineProperty(this, \"readonly\", false);\n      /**\n       * Sets the read-only state of the DateTimePicker input field\n       * ([see example]({% slug readonly_datetimepicker %}#toc-read-only-input)).\n       *\n       * > Note that if you set the [`readonly`]({% slug api_dateinputs_datetimepickercomponent %}#toc-readonly) property value to `true`,\n       * the input will be rendered in a read-only state regardless of the `readOnlyInput` value.\n       */\n      _defineProperty(this, \"readOnlyInput\", false);\n      /**\n       * Determines whether to display the **Cancel** button in the popup\n       * ([see example]({% slug datetimepicker_popup_options %}#toc-toggling-the-cancel-button)).\n       */\n      _defineProperty(this, \"cancelButton\", true);\n      /**\n       * Defines the descriptions of the format sections in the input field\n       * ([see example]({% slug placeholders_datetimepicker %}#toc-format-sections-description)).\n       */\n      _defineProperty(this, \"formatPlaceholder\", void 0);\n      /**\n       * Specifies the hint which is displayed by the DateTimePicker when its value is `null`\n       * ([see example]({% slug placeholders_datetimepicker %}#toc-text-hints)).\n       */\n      _defineProperty(this, \"placeholder\", void 0);\n      /**\n       * Configures the incremental steps of the DateInput and the popup component of the TimePicker\n       * ([see example]({% slug incrementalsteps_datetimepicker %})).\n       */\n      _defineProperty(this, \"steps\", {});\n      /**\n       * Specifies the focused date of the popup Calendar\n       * ([see example]({% slug datetimepicker_calendar_options %}#toc-focused-dates)).\n       */\n      _defineProperty(this, \"focusedDate\", void 0);\n      /**\n       * Specifies the Calendar type.\n       *\n       * The possible values are:\n       * - `infinite` (default)\n       * - `classic`\n       *\n       */\n      _defineProperty(this, \"calendarType\", 'infinite');\n      /**\n       * Determines whether to enable animation when navigating to previous/next Calendar view.\n       * Applies to the [`classic`]({% slug api_dateinputs_datetimepickercomponent %}#toc-calendartype) Calendar only.\n       *\n       * > This feature uses the [Web Animations API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API). In order to run the animation in browsers that do not support it, you need the `web-animations-js` polyfill.\n       *\n       * @default false\n       */\n      _defineProperty(this, \"animateCalendarNavigation\", false);\n      /**\n       * Determines whether to display a week number column in the `month` view of the popup Calendar\n       * ([see example]({% slug datetimepicker_calendar_options %}#toc-week-number-column)).\n       */\n      _defineProperty(this, \"weekNumber\", false);\n      _defineProperty(this, \"rangeValidation\", true);\n      /**\n       * Determines whether the built-in validator for disabled\n       * date ranges is enforced when validating a form\n       * ([see example](slug:disabled_dates_datetimepicker)).\n       */\n      _defineProperty(this, \"disabledDatesValidation\", true);\n      /**\n       * Determines whether the built-in validation for incomplete dates is to be enforced when a form is being validated.\n       */\n      _defineProperty(this, \"incompleteDateValidation\", false);\n      /**\n       * Determines whether to autocorrect invalid segments automatically.\n       *\n       * @default true\n       */\n      _defineProperty(this, \"autoCorrectParts\", true);\n      /**\n       * Determines whether to automatically move to the next segment after the user completes the current one.\n       *\n       * @default true\n       */\n      _defineProperty(this, \"autoSwitchParts\", true);\n      /**\n       * A string array representing custom keys, which will move the focus to the next date format segment.\n       */\n      _defineProperty(this, \"autoSwitchKeys\", []);\n      /**\n       * Indicates whether the mouse scroll can be used to increase/decrease the time segments values.\n       *\n       * @default true\n       */\n      _defineProperty(this, \"enableMouseWheel\", true);\n      /**\n       * Determines if the users should see a blinking caret inside the Date Input when possible.\n       *\n       * @default false\n       */\n      _defineProperty(this, \"allowCaretMode\", false);\n      /**\n       * If set to `true`, renders a clear button after the input text or DateTimePicker value has been changed.\n       * Clicking this button resets the value of the component to `null` and triggers the `valueChange` event.\n       * @default false\n       */\n      _defineProperty(this, \"clearButton\", false);\n      /**\n       * When enabled, the DateTimePicker will autofill the rest of the date to the current date when the component loses focus.\n       *\n       * @default false\n       */\n      _defineProperty(this, \"autoFill\", false);\n      /**\n       * Enables or disables the adaptive mode. By default the adaptive rendering is disabled.\n       */\n      _defineProperty(this, \"adaptiveMode\", 'none');\n      /**\n       * Sets the HTML attributes of the inner focusable input element. Attributes which are essential for certain component functionalities cannot be changed.\n       */\n      _defineProperty(this, \"inputAttributes\", void 0);\n      /**\n       * Fires each time the user selects a new value\n       * ([see example](slug:events_datetimepicker)).\n       */\n      _defineProperty(this, \"valueChange\", new EventEmitter());\n      /**\n       * Fires each time the popup is about to open\n       * ([see example](slug:events_datetimepicker)).\n       * This event is preventable. If you cancel the event by setting `event.preventDefault()`, the popup will remain closed.\n       */\n      _defineProperty(this, \"open\", new EventEmitter());\n      /**\n       * Fires each time the popup is about to close\n       * ([see example](slug:events_datetimepicker)).\n       * This event is preventable. If you cancel the event by setting `event.preventDefault()`, the popup will remain open.\n       */\n      _defineProperty(this, \"close\", new EventEmitter());\n      /**\n       * Fires each time the user focuses the component\n       * ([see example](slug:events_datetimepicker)).\n       */\n      _defineProperty(this, \"onFocus\", new EventEmitter());\n      /**\n       * Fires each time the user blurs the component\n       * ([see example](slug:events_datetimepicker)).\n       */\n      _defineProperty(this, \"onBlur\", new EventEmitter());\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"activeTab\", DEFAULT_ACTIVE_TAB);\n      /**\n       * @hidden\n       *\n       * Specifies the stripped time-related format that is used in the TimeSelector.\n       * Updates each time the `format` property value changes.\n       */\n      _defineProperty(this, \"timeSelectorFormat\", DEFAULT_TIMESELECTOR_FORMAT);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"timeSelectorMin\", cloneDate(MIN_TIME));\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"timeSelectorMax\", cloneDate(MAX_TIME));\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"calendarValue\", null);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"calendarMin\", cloneDate(MIN_DATE));\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"calendarMax\", lastMillisecondOfDate(MAX_DATE));\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"xIcon\", xIcon);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"cellTemplate\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"monthCellTemplate\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"yearCellTemplate\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"decadeCellTemplate\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"centuryCellTemplate\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"weekNumberTemplate\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"headerTitleTemplate\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"headerTemplate\", void 0);\n      _defineProperty(this, \"footerTemplate\", void 0);\n      _defineProperty(this, \"footer\", false);\n      _defineProperty(this, \"container\", void 0);\n      _defineProperty(this, \"popupTemplate\", void 0);\n      _defineProperty(this, \"actionSheet\", void 0);\n      _defineProperty(this, \"popupRef\", void 0);\n      _defineProperty(this, \"_popupSettings\", {\n        animate: true\n      });\n      _defineProperty(this, \"_value\", null);\n      _defineProperty(this, \"_format\", DEFAULT_DATEINPUT_FORMAT);\n      _defineProperty(this, \"_tabindex\", 0);\n      _defineProperty(this, \"_defaultTab\", DEFAULT_ACTIVE_TAB);\n      _defineProperty(this, \"_min\", mergeDateAndTime(MIN_DATE, MIN_TIME));\n      _defineProperty(this, \"_max\", mergeDateAndTime(MAX_DATE, MAX_TIME));\n      _defineProperty(this, \"_disabledDates\", void 0);\n      _defineProperty(this, \"_isActive\", false);\n      _defineProperty(this, \"onControlTouched\", noop$2);\n      _defineProperty(this, \"onControlChange\", noop$2);\n      _defineProperty(this, \"onValidatorChange\", noop$2);\n      _defineProperty(this, \"minValidateFn\", noop$2);\n      _defineProperty(this, \"maxValidateFn\", noop$2);\n      _defineProperty(this, \"disabledDatesValidateFn\", noop$2);\n      _defineProperty(this, \"incompleteValidator\", noop$2);\n      _defineProperty(this, \"subscriptions\", new Subscription());\n      _defineProperty(this, \"ariaActiveDescendantSubscription\", void 0);\n      _defineProperty(this, \"_size\", DEFAULT_SIZE);\n      _defineProperty(this, \"_rounded\", DEFAULT_ROUNDED);\n      _defineProperty(this, \"_fillMode\", DEFAULT_FILL_MODE);\n      _defineProperty(this, \"windowSize\", void 0);\n      this.popupService = popupService;\n      this.intl = intl;\n      this.cdr = cdr;\n      this.pickerService = pickerService;\n      this.ngZone = ngZone;\n      this.wrapper = wrapper;\n      this.localization = localization;\n      this.disabledDatesService = disabledDatesService;\n      this.renderer = renderer;\n      this.injector = injector;\n      this.adaptiveService = adaptiveService;\n      validatePackage(packageMetadata);\n    }\n    ngOnInit() {\n      this.subscriptions.add(this.pickerService.onFocus\n      // detect popup changes to disable the inactive view mark-up when the popup is open\n      .pipe(tap(this.detectPopupChanges.bind(this))).subscribe(this.handleFocus.bind(this)));\n      this.subscriptions.add(this.pickerService.onBlur.subscribe(this.handleBlur.bind(this)));\n      this.subscriptions.add(this.pickerService.sameDateSelected.subscribe(this.handleCalendarValueChange.bind(this)));\n      this.subscriptions.add(this.localization.changes.subscribe(() => this.cdr.markForCheck()));\n      this.subscriptions.add(this.pickerService.dateCompletenessChange.subscribe(this.handleDateCompletenessChange.bind(this)));\n      if (isWindowAvailable()) {\n        this.subscriptions.add(this.ngZone.runOutsideAngular(() => fromEvent(window, 'blur').subscribe(() => {\n          if (!this.isAdaptive) {\n            this.handleCancel();\n          }\n        })));\n      }\n      this.focusableId = this.dateInput?.focusableId;\n    }\n    ngAfterViewInit() {\n      this.setComponentClasses();\n      this.windowSize = this.adaptiveService.size;\n      if (this.actionSheet && isDocumentAvailable()) {\n        // The following syntax is used as it does not violate CSP compliance\n        this.actionSheet.element.nativeElement.style.setProperty('--kendo-actionsheet-height', '60vh');\n        this.actionSheet.element.nativeElement.style.setProperty('--kendo-actionsheet-max-height', 'none');\n      }\n    }\n    ngOnChanges(changes) {\n      if (isPresent(changes['min']) || isPresent(changes['max'])) {\n        this.verifyMinMaxRange();\n      }\n      if (changes['min'] || changes['max'] || changes['rangeValidation'] || changes['disabledDatesValidation'] || changes['disabledDates'] || changes['incompleteDateValidation']) {\n        this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop$2;\n        this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop$2;\n        this.disabledDatesValidateFn = this.disabledDatesValidation ? disabledDatesValidator(this.disabledDatesService.isDateDisabled) : noop$2;\n        this.incompleteValidator = this.incompleteDateValidation ? incompleteDateValidator() : noop$2;\n        this.onValidatorChange();\n      }\n      if (!this.focusableId || changes['focusableId']) {\n        this.focusableId = this.dateInput?.focusableId;\n      }\n    }\n    ngOnDestroy() {\n      if (this.isOpen && !this.isAdaptive) {\n        this.closePopup();\n      }\n      this.subscriptions.unsubscribe();\n    }\n    /**\n     * * If the popup is closed, focuses the DateTimePicker input.\n     * * If the popup is open, the focus is moved to its content.\n     */\n    focus() {\n      if (this.disabled) {\n        return;\n      }\n      if (this.isOpen) {\n        this.activeTabComponent.focus();\n      } else {\n        this.dateInput.focus();\n      }\n    }\n    /**\n     * Blurs the DateTimePicker.\n     */\n    blur() {\n      if (this.isOpen && this.activeTabComponent.isActive) {\n        this.activeTabComponent.blur();\n      } else {\n        this.dateInput.blur();\n      }\n    }\n    /**\n     * Toggles the visibility of the popup or actionSheet.\n     * If you use the `toggle` method to show or hide the popup or actionSheet,\n     * the `open` and `close` events do not fire.\n     *\n     * @param show - The state of the popup.\n     */\n    toggle(show) {\n      if (this.disabled || this.readonly || show === this.isOpen) {\n        return;\n      }\n      const previousWindowSize = this.windowSize;\n      this.windowSize = this.adaptiveService.size;\n      if (previousWindowSize !== this.windowSize && !show) {\n        if (previousWindowSize !== 'large') {\n          this.toggleActionSheet(show);\n        } else {\n          this._togglePopup(show);\n        }\n      } else {\n        if (this.isAdaptive) {\n          this.toggleActionSheet(show);\n        } else {\n          this._togglePopup(show);\n        }\n      }\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n      this.verifyValue(value);\n      this.value = cloneDate(value);\n      this.cdr.markForCheck();\n      if (!value && this.dateInput) {\n        this.dateInput.placeholder = this.placeholder;\n        this.dateInput.writeValue(value);\n      }\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n      this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n      this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(disabled) {\n      this.disabled = disabled;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    validate(control) {\n      return this.minValidateFn(control) || this.maxValidateFn(control) || this.disabledDatesValidateFn(control) || this.incompleteValidator(control, this.dateInput && this.dateInput.isDateIncomplete);\n    }\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn) {\n      this.onValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     *\n     * Used by the TextBoxContainer to determine if the floating label will render in the input.\n     */\n    isEmpty() {\n      return !isPresent(this.value) && this.dateInput.isEmpty();\n    }\n    /**\n     * @hidden\n     */\n    handleIconClick(event) {\n      if (this.disabled || this.readonly) {\n        return;\n      }\n      // prevents the event default to evade focusing the DateInput input when placed inside a label (FF/IE/Edge)\n      event.preventDefault();\n      const runInZone = !this.isOpen || hasObservers(this.close);\n      this.run(runInZone, () => {\n        const shouldOpen = !this.isOpen;\n        // handle focus first to maintain correct event order `focus` => `open`\n        this.handleFocus();\n        if (!shouldOpen) {\n          this.dateInput.focus();\n        }\n        this.toggleDateTime(shouldOpen);\n        this.switchFocus();\n      });\n    }\n    /**\n     * @hidden\n     */\n    handleFocus() {\n      if (this.isActive) {\n        return;\n      }\n      this.isActive = true;\n      if (hasObservers(this.onFocus)) {\n        this.ngZone.run(() => this.onFocus.emit());\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleBlur(event) {\n      if (!this.isActive || this.focusTargetInComponent(event)) {\n        return;\n      }\n      this.isActive = false;\n      const isNgControlUntouched = this.wrapper.nativeElement.classList.contains('ng-untouched');\n      const runInZone = isNgControlUntouched || hasObservers(this.onBlur) || this.isOpen && hasObservers(this.close);\n      this.run(runInZone, () => {\n        this.onBlur.emit();\n        this.onControlTouched();\n        this.toggleDateTime(false);\n        this.cdr.markForCheck();\n      });\n    }\n    /**\n     * @hidden\n     */\n    changeActiveTab(tab) {\n      if (!this.isOpen || this.activeTab === tab) {\n        return;\n      }\n      // persists the Tcurrent value of the TimeSelector when switching between tabs\n      if (!isEqual(this.timeSelector.value, this.timeSelector.current)) {\n        this.timeSelector.handleAccept();\n      }\n      this.activeTab = tab;\n      this.cdr.detectChanges();\n      this.detectPopupChanges();\n    }\n    /**\n     * @hidden\n     */\n    handleTabChangeTransitionEnd(dateTimeSelector, event) {\n      // handle only the .k-datetime-selector element transition, ignore any child element transitions\n      if (event.target !== dateTimeSelector) {\n        return;\n      }\n      if (this.activeTab === 'time') {\n        this.renderer.removeAttribute(this.dateInput?.inputElement, attributeNames.ariaActiveDescendant);\n      }\n      this.activeTabComponent.focus();\n    }\n    /**\n     * @hidden\n     */\n    onTabOutLastPart() {\n      if (this.calendarValue) {\n        this.acceptButton.focus();\n      } else if (!this.calendarValue && this.cancelButton) {\n        this.cancelButtonElement.focus();\n      } else {\n        this.dateTabButton.focus();\n      }\n    }\n    /**\n     * @hidden\n     */\n    onTabOutFirstPart() {\n      if (this.activeTab === 'time') {\n        this.renderer.removeClass(this.timeSelector.timeListWrappers.first.nativeElement, 'k-focus');\n        this.timeSelector.showNowButton ? this.timeSelector.now.nativeElement.focus() : this.timeTabButton.focus();\n      }\n    }\n    /**\n     * @hidden\n     */\n    onTabOutNow() {\n      this.timeTabButton.focus();\n    }\n    /**\n     * @hidden\n     */\n    handleAccept() {\n      if (!this.isOpen) {\n        return;\n      }\n      const candidate = mergeDateAndTime(this.calendar.value, this.timeSelector.current);\n      const valueChangePresent = !isEqual(this.value, candidate);\n      const runInZone = valueChangePresent || hasObservers(this.close);\n      this.run(runInZone, () => {\n        this.handleValueChange(candidate);\n        this.dateInput.focus();\n        this.toggleDateTime(false);\n      });\n    }\n    /**\n     * @hidden\n     */\n    handleCancel() {\n      if (!this.isOpen) {\n        return;\n      }\n      const runInZone = hasObservers(this.close);\n      this.dateInput.focus();\n      this.run(runInZone, () => this.toggleDateTime(false));\n      hasObservers(this.escape) && this.escape.emit();\n    }\n    /**\n     * @hidden\n     */\n    handleInputValueChange(value) {\n      this.handleValueChange(value);\n      if (this.isOpen) {\n        this.toggleDateTime(false);\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleDateInputClick() {\n      this.windowSize = this.adaptiveService.size;\n      if (this.isAdaptive) {\n        this.toggleDateTime(true);\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleCalendarValueChange() {\n      this.setTimeSelectorMinMax(this.calendar.value);\n      this.changeActiveTab('time');\n    }\n    /**\n     * @hidden\n     */\n    handleKeyDown(event) {\n      if (this.disabled || this.readonly) {\n        return;\n      }\n      const {\n        keyCode,\n        altKey\n      } = event;\n      switch (keyCode) {\n        case altKey && Keys$1.ArrowUp:\n        case Keys$1.Escape:\n          this.handleCancel();\n          break;\n        case !this.isOpen && altKey && Keys$1.ArrowDown:\n          this.ngZone.run(() => this.toggleDateTime(true));\n          break;\n        case altKey && Keys$1.ArrowRight:\n          this.changeActiveTab('time');\n          break;\n        case altKey && Keys$1.ArrowLeft:\n          this.changeActiveTab('date');\n          break;\n        case this.isOpen && this.timeSelector.isActive && isPresent(this.calendarValue) && Keys$1.Enter:\n          this.handleAccept();\n          break;\n        default:\n          return;\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleTab(event) {\n      event.preventDefault();\n      const {\n        shiftKey\n      } = event;\n      switch (event.target) {\n        case this.acceptButton:\n          if (!shiftKey) {\n            this.cancelButton ? this.cancelButtonElement.focus() : this.dateTabButton.focus();\n          } else {\n            if (this.activeTab === 'date') {\n              this.calendar.monthView.list.nativeElement.focus();\n            } else {\n              this.timeSelector.timeLists.last.focus();\n            }\n          }\n          break;\n        case this.cancelButtonElement:\n          if (this.calendarValue) {\n            shiftKey ? this.acceptButton.focus() : this.dateTabButton.focus();\n          } else {\n            if (shiftKey) {\n              if (this.activeTab === 'date') {\n                this.calendar.monthView.list.nativeElement.focus();\n              } else {\n                this.timeSelector.timeLists.last.focus();\n              }\n            } else {\n              this.dateTabButton.focus();\n            }\n          }\n          break;\n        case this.dateTabButton:\n          if (this.cancelButton) {\n            this.cancelButtonElement.focus();\n          }\n          if (!this.cancelButton && this.calendarValue) {\n            this.acceptButton.focus();\n          }\n          if (!this.cancelButton && !this.calendarValue) {\n            if (this.activeTab === 'date') {\n              this.calendar.monthView.list.nativeElement.focus();\n            } else {\n              this.timeSelector.timeLists.last.focus();\n            }\n          }\n          break;\n        case this.timeTabButton:\n          if (this.activeTab === 'time') {\n            this.timeSelector.showNowButton ? this.timeSelector.now.nativeElement.focus() : this.timeSelector.timeLists.first.focus();\n          } else {\n            this.todayButton.focus();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleActionSheetCollapse() {\n      // If not handled, the actionsheet expanded state does not get updated when overlay is clicked\n      this.cdr.markForCheck();\n      // Reset tabs after actionsheet is collapsed, otherwise the tab change can be seen during the animation\n      this.resetActiveTab();\n    }\n    /**\n     * @hidden\n     */\n    popupButtonsClasses(type) {\n      const buttonType = type ? type : 'base';\n      const sizeClass = `${this.isAdaptive ? getSizeClass('button', 'large') : this.size ? getSizeClass('button', this.size) : ''}`;\n      return `${sizeClass} ${this.rounded ? getRoundedClass(this.rounded) : ''} ${this.fillMode ? 'k-button-' + this.fillMode + ' ' + 'k-button-' + this.fillMode + '-' + buttonType : ''}`;\n    }\n    /**\n     * @hidden\n     *\n     * Prevents the diversion of the focus from the currently active element in the component.\n     */\n    preventMouseDown(event) {\n      event.preventDefault();\n    }\n    _togglePopup(show) {\n      const shouldOpen = isPresent(show) ? show : !this.isOpen;\n      if (shouldOpen) {\n        this.openPopup();\n        return;\n      }\n      this.closePopup();\n      this.resetActiveTab();\n    }\n    toggleActionSheet(show) {\n      if (isPresent(show) && show && !this.isOpen) {\n        this.actionSheet.toggle();\n        this.updateActionSheetAdaptiveAppearance();\n        this.renderer.setAttribute(this.actionSheet.element.nativeElement, 'id', this.popupUID);\n        this.renderer.setAttribute(this.dateInput?.inputElement, attributeNames.ariaControls, this.popupUID);\n        this.setAriaActiveDescendant();\n      } else if (isPresent(show) && !show && this.isOpen) {\n        this.actionSheet.toggle();\n        this.ariaActiveDescendantSubscription.unsubscribe();\n        if (this.dateInput) {\n          this.renderer.removeAttribute(this.dateInput.inputElement, attributeNames.ariaActiveDescendant);\n          this.renderer.removeAttribute(this.dateInput.inputElement, attributeNames.ariaControls);\n        }\n      }\n    }\n    updateActionSheetAdaptiveAppearance() {\n      let element;\n      let animationContainer;\n      if (this.actionSheet) {\n        element = this.actionSheet['element'].nativeElement.querySelector('.k-actionsheet');\n        animationContainer = this.actionSheet['element'].nativeElement.querySelector('.k-child-animation-container');\n        if (this.windowSize === 'medium') {\n          this.renderer.removeClass(element, 'k-actionsheet-fullscreen');\n          this.renderer.removeStyle(animationContainer, 'height');\n        } else if (this.windowSize === 'small') {\n          this.renderer.addClass(element, 'k-actionsheet-fullscreen');\n          this.renderer.setStyle(animationContainer, 'height', '100%');\n        }\n        this.renderer.addClass(element, 'k-adaptive-actionsheet');\n        this.renderer.addClass(element, 'k-actionsheet-bottom');\n        this.renderer.setStyle(animationContainer, 'bottom', '0px');\n      }\n    }\n    /**\n     * Changes the tab and the calendar or clock icon to the designated default.\n     */\n    resetActiveTab() {\n      if (this.activeTab !== this.defaultTab) {\n        this.activeTab = this.defaultTab;\n        this.cdr.detectChanges();\n      }\n    }\n    verifyValue(value) {\n      if (!isDevMode()) {\n        return;\n      }\n      if (isPresent(value) && !(value instanceof Date)) {\n        throw new Error(`The 'value' should be a valid JavaScript Date instance or null. Check ${VALUE_DOC_LINK} for possible resolution.`);\n      }\n    }\n    verifyMinMaxRange() {\n      if (!isDevMode()) {\n        return;\n      }\n      if (!isValidRange(this.min, this.max)) {\n        throw new Error(`The max value should be bigger than the min. See ${MIN_MAX_DOC_LINK}.`);\n      }\n    }\n    /**\n     * Extracts the time slots and the literals that are not preceded by date parts\n     * and concatenates the resulting parts into a string.\n     * If the provided format value does not contain any time parts,\n     * returns the designated format of the default popup component of the TimePicker.\n     */\n    getTimeSelectorFormat(format) {\n      const timeSelectorFormat = this.intl.splitDateFormat(format).filter(this.timeFormatPartFilter).reduce((format, part) => format += part.pattern, '');\n      return timeSelectorFormat || DEFAULT_TIMESELECTOR_FORMAT;\n    }\n    /**\n     * Extracts the `displayFormat` from the provided `string | FormatSettings` value.\n     * Fallbacks to the default input value, if a falsy value param is passed.\n     */\n    getDisplayFormat(format) {\n      if (!format) {\n        return DEFAULT_DATEINPUT_FORMAT;\n      }\n      if (typeof format === 'string') {\n        return format;\n      } else {\n        return format.displayFormat;\n      }\n    }\n    /**\n     * The filter expression that filters out all format parts\n     * except for `hour`, `minute`, `second`, `dayperiod`, and specific literals.\n     * Literals will be left only if they are not preceded by date parts.\n     */\n    timeFormatPartFilter(part, index, parts) {\n      const previousPart = index >= 1 && parts[index - 1];\n      if (previousPart && part.type === 'literal') {\n        return timeFormatRegExp.test(previousPart.type);\n      }\n      return timeFormatRegExp.test(part.type);\n    }\n    /**\n     * @hidden\n     */\n    toggleDateTime(open) {\n      if (open === this.isOpen) {\n        return;\n      }\n      const event = new PreventableEvent();\n      if (open) {\n        this.open.emit(event);\n      } else {\n        this.close.emit(event);\n      }\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n      this.toggle(open);\n      this.switchFocus();\n    }\n    switchFocus() {\n      if (!this.isActive) {\n        return;\n      }\n      if (this.isOpen) {\n        this.activeTabComponent.focus();\n      } else if (!touchEnabled) {\n        this.dateInput.focus();\n      } else if (!this.dateInput.isActive) {\n        this.handleBlur();\n      }\n    }\n    openPopup() {\n      this.setCalendarValue(this.value);\n      this.setTimeSelectorMinMax(this.value);\n      const direction = this.localization.rtl ? 'right' : 'left';\n      const appendToComponent = typeof this.popupSettings.appendTo === 'string' && this.popupSettings.appendTo === 'component';\n      this.popupRef = this.popupService.open({\n        anchor: this.wrapper,\n        content: this.popupTemplate,\n        positionMode: appendToComponent ? 'fixed' : 'absolute',\n        animate: this.popupSettings.animate,\n        appendTo: this.appendTo,\n        popupClass: `k-datetime-container k-datetimepicker-popup ${this.popupSettings.popupClass || ''}`,\n        anchorAlign: {\n          vertical: 'bottom',\n          horizontal: direction\n        },\n        popupAlign: {\n          vertical: 'top',\n          horizontal: direction\n        }\n      });\n      this.popupRef.popupElement.setAttribute('id', this.popupUID);\n      this.renderer.setAttribute(this.dateInput?.inputElement, attributeNames.ariaControls, this.popupUID);\n      this.setAriaActiveDescendant();\n      this.popupRef.popupAnchorViewportLeave.subscribe(() => this.handleCancel());\n      if (this.calendar.type === 'infinite') {\n        this.subscriptions.add(fromEvent(this.calendar.monthView.list.nativeElement, 'keydown').subscribe(event => {\n          const {\n            keyCode,\n            shiftKey\n          } = event;\n          if (keyCode === Keys$1.Tab && !shiftKey) {\n            event.preventDefault();\n            if (!this.calendarValue && !this.cancelButton) {\n              this.dateTabButton.focus();\n            } else if (this.calendarValue) {\n              this.acceptButton.focus();\n            } else if (this.cancelButton) {\n              this.cancelButtonElement.focus();\n            }\n          }\n        }));\n      }\n    }\n    setAriaActiveDescendant() {\n      const focusedCellChangeEvent = this.calendar.type === 'infinite' ? this.calendar.monthView.focusedCellChange : this.calendar.multiViewCalendar.viewList.focusedCellChange;\n      this.ariaActiveDescendantSubscription = focusedCellChangeEvent.subscribe(id => this.renderer.setAttribute(this.dateInput?.inputElement, attributeNames.ariaActiveDescendant, id));\n    }\n    closePopup() {\n      if (!this.isOpen) {\n        return;\n      }\n      this.ariaActiveDescendantSubscription.unsubscribe();\n      if (this.dateInput) {\n        this.renderer.removeAttribute(this.dateInput?.inputElement, attributeNames.ariaControls);\n        this.renderer.removeAttribute(this.dateInput?.inputElement, attributeNames.ariaActiveDescendant);\n      }\n      this.popupRef.close();\n      this.popupRef = null;\n    }\n    handleValueChange(value) {\n      if (isEqual(this.value, value)) {\n        if (this.incompleteDateValidation) {\n          this.onControlChange(cloneDate(value));\n        }\n        return;\n      }\n      this.value = cloneDate(value);\n      this.onControlChange(cloneDate(value));\n      this.valueChange.emit(cloneDate(value));\n    }\n    /**\n     * Indicates whether the focus target is part of this component,\n     * that is, whether the focus target is inside the component or in the popup.\n     */\n    focusTargetInComponent(event) {\n      if (!isPresent(event)) {\n        return false;\n      }\n      const relatedTarget = event.relatedTarget || document.activeElement;\n      const focusInPopup = isPresent(this.popupRef) && this.popupRef.popupElement.contains(relatedTarget);\n      const focusInWrapper = this.wrapper.nativeElement.contains(relatedTarget);\n      const isInsideActionSheet = this.actionSheet && (this.actionSheet.element.nativeElement.contains(event.target) || this.actionSheet.element.nativeElement.contains(relatedTarget));\n      return focusInPopup || focusInWrapper || isInsideActionSheet;\n    }\n    setTimeSelectorMinMax(selectedDate) {\n      const minDateSelected = isPresent(selectedDate) && isPresent(this.min) && isEqual(getDate(selectedDate), getDate(this.min));\n      this.timeSelectorMin = cloneDate(minDateSelected ? this.min : MIN_TIME);\n      const maxDateSelected = isPresent(selectedDate) && isPresent(this.max) && isEqual(getDate(selectedDate), getDate(this.max));\n      this.timeSelectorMax = cloneDate(maxDateSelected ? this.max : MAX_TIME);\n    }\n    setCalendarValue(value) {\n      const isInCalendarRange = isPresent(value) && isInRange(value, this.calendarMin, this.calendarMax);\n      this.calendarValue = isInCalendarRange ? getDate(value) : null;\n    }\n    /**\n     * If the popup is available, runs a popup change detection.\n     */\n    detectPopupChanges() {\n      if (!this.isOpen || this.isAdaptive) {\n        return;\n      }\n      this.popupRef.popup.changeDetectorRef.detectChanges();\n    }\n    /**\n     * Depending on the predicate `runInZone` value that is passed,\n     * runs the provided function either in the Angular or in the current zone.\n     */\n    run(runInZone, fn) {\n      if (runInZone) {\n        this.ngZone.run(() => fn());\n      } else {\n        fn();\n      }\n    }\n    handleDateCompletenessChange() {\n      this.cdr.markForCheck();\n      this.ngZone.run(() => this.onValidatorChange());\n    }\n    setComponentClasses() {\n      if (this.size) {\n        this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n        this.renderer.addClass(this.toggleButton.nativeElement, getSizeClass('button', this.size));\n      }\n      if (this.rounded) {\n        this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n      }\n      if (this.fillMode) {\n        this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n        this.renderer.addClass(this.toggleButton.nativeElement, getFillModeClass('button', this.fillMode));\n        this.renderer.addClass(this.toggleButton.nativeElement, `k-button-${this.fillMode}-base`);\n      }\n    }\n  }\n  _class67 = DateTimePickerComponent;\n  _defineProperty(DateTimePickerComponent, \"\\u0275fac\", function _class67_Factory(t) {\n    return new (t || _class67)(i0.ɵɵdirectiveInject(i1$2.PopupService), i0.ɵɵdirectiveInject(i1.IntlService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PickerService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$1.LocalizationService), i0.ɵɵdirectiveInject(DisabledDatesService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i6.AdaptiveService));\n  });\n  _defineProperty(DateTimePickerComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class67,\n    selectors: [[\"kendo-datetimepicker\"]],\n    contentQueries: function _class67_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, MonthCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, YearCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, DecadeCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, CenturyCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, WeekNumberCellTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, HeaderTitleTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monthCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.yearCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.decadeCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.centuryCellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.weekNumberTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTitleTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      }\n    },\n    viewQuery: function _class67_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c38, 7);\n        i0.ɵɵviewQuery(_c36, 7, ViewContainerRef);\n        i0.ɵɵviewQuery(_c37, 7, TemplateRef);\n        i0.ɵɵviewQuery(_c39, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toggleButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.actionSheet = _t.first);\n      }\n    },\n    hostVars: 8,\n    hostBindings: function _class67_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-datetimepicker\", ctx.hostClasses)(\"k-input\", ctx.hostClasses)(\"k-disabled\", ctx.disabledClass)(\"k-readonly\", ctx.readonly);\n      }\n    },\n    inputs: {\n      focusableId: \"focusableId\",\n      weekDaysFormat: \"weekDaysFormat\",\n      showOtherMonthDays: \"showOtherMonthDays\",\n      value: \"value\",\n      format: \"format\",\n      twoDigitYearMax: \"twoDigitYearMax\",\n      tabindex: \"tabindex\",\n      disabledDates: \"disabledDates\",\n      popupSettings: \"popupSettings\",\n      title: \"title\",\n      subtitle: \"subtitle\",\n      disabled: \"disabled\",\n      readonly: \"readonly\",\n      readOnlyInput: \"readOnlyInput\",\n      cancelButton: \"cancelButton\",\n      formatPlaceholder: \"formatPlaceholder\",\n      placeholder: \"placeholder\",\n      steps: \"steps\",\n      focusedDate: \"focusedDate\",\n      calendarType: \"calendarType\",\n      animateCalendarNavigation: \"animateCalendarNavigation\",\n      weekNumber: \"weekNumber\",\n      min: \"min\",\n      max: \"max\",\n      rangeValidation: \"rangeValidation\",\n      disabledDatesValidation: \"disabledDatesValidation\",\n      incompleteDateValidation: \"incompleteDateValidation\",\n      autoCorrectParts: \"autoCorrectParts\",\n      autoSwitchParts: \"autoSwitchParts\",\n      autoSwitchKeys: \"autoSwitchKeys\",\n      enableMouseWheel: \"enableMouseWheel\",\n      allowCaretMode: \"allowCaretMode\",\n      clearButton: \"clearButton\",\n      autoFill: \"autoFill\",\n      adaptiveMode: \"adaptiveMode\",\n      inputAttributes: \"inputAttributes\",\n      defaultTab: \"defaultTab\",\n      size: \"size\",\n      rounded: \"rounded\",\n      fillMode: \"fillMode\",\n      headerTemplateRef: [\"headerTemplate\", \"headerTemplateRef\"],\n      footerTemplateRef: [\"footerTemplate\", \"footerTemplateRef\"],\n      footer: \"footer\"\n    },\n    outputs: {\n      valueChange: \"valueChange\",\n      open: \"open\",\n      close: \"close\",\n      onFocus: \"focus\",\n      onBlur: \"blur\",\n      escape: \"escape\"\n    },\n    exportAs: [\"kendo-datetimepicker\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([PickerService, LocalizationService, DisabledDatesService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.datetimepicker'\n    }, {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => _class67),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => _class67),\n      multi: true\n    }, {\n      provide: KendoInput,\n      useExisting: forwardRef(() => _class67)\n    }, {\n      provide: MultiTabStop,\n      useExisting: forwardRef(() => _class67)\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 17,\n    vars: 44,\n    consts: function () {\n      let i18n_99;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Date tab text in the datetimepicker popup header\n         * @meaning kendo.datetimepicker.dateTab\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_100 = goog.getMsg(\"Date\");\n        i18n_99 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_100;\n      } else {\n        i18n_99 = $localize`:kendo.datetimepicker.dateTab|The Date tab text in the datetimepicker popup header:Date`;\n      }\n      let i18n_101;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Date tab in the datetimepicker popup header\n         * @meaning kendo.datetimepicker.dateTabLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_102 = goog.getMsg(\"Date tab\");\n        i18n_101 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_102;\n      } else {\n        i18n_101 = $localize`:kendo.datetimepicker.dateTabLabel|The label for the Date tab in the datetimepicker popup header:Date tab`;\n      }\n      let i18n_103;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Time tab text in the datetimepicker popup header\n         * @meaning kendo.datetimepicker.timeTab\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_104 = goog.getMsg(\"Time\");\n        i18n_103 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_104;\n      } else {\n        i18n_103 = $localize`:kendo.datetimepicker.timeTab|The Time tab text in the datetimepicker popup header:Time`;\n      }\n      let i18n_105;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Time tab in the datetimepicker popup header\n         * @meaning kendo.datetimepicker.timeTabLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_106 = goog.getMsg(\"Time tab\");\n        i18n_105 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_106;\n      } else {\n        i18n_105 = $localize`:kendo.datetimepicker.timeTabLabel|The label for the Time tab in the datetimepicker popup header:Time tab`;\n      }\n      let i18n_107;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the toggle button in the datetimepicker component\n         * @meaning kendo.datetimepicker.toggle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_108 = goog.getMsg(\"Toggle popup\");\n        i18n_107 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_108;\n      } else {\n        i18n_107 = $localize`:kendo.datetimepicker.toggle|The title of the toggle button in the datetimepicker component:Toggle popup`;\n      }\n      let i18n_109;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Accept button text in the datetimepicker component\n         * @meaning kendo.datetimepicker.accept\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_110 = goog.getMsg(\"Set\");\n        i18n_109 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_110;\n      } else {\n        i18n_109 = $localize`:kendo.datetimepicker.accept|The Accept button text in the datetimepicker component:Set`;\n      }\n      let i18n_111;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Accept button in the datetimepicker component\n         * @meaning kendo.datetimepicker.acceptLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_112 = goog.getMsg(\"Set\");\n        i18n_111 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_112;\n      } else {\n        i18n_111 = $localize`:kendo.datetimepicker.acceptLabel|The label for the Accept button in the datetimepicker component:Set`;\n      }\n      let i18n_113;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Cancel button text in the datetimepicker component\n         * @meaning kendo.datetimepicker.cancel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_114 = goog.getMsg(\"Cancel\");\n        i18n_113 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_114;\n      } else {\n        i18n_113 = $localize`:kendo.datetimepicker.cancel|The Cancel button text in the datetimepicker component:Cancel`;\n      }\n      let i18n_115;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Cancel button in the datetimepicker component\n         * @meaning kendo.datetimepicker.cancelLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_116 = goog.getMsg(\"Cancel\");\n        i18n_115 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_116;\n      } else {\n        i18n_115 = $localize`:kendo.datetimepicker.cancelLabel|The label for the Cancel button in the datetimepicker component:Cancel`;\n      }\n      let i18n_117;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Now button text in the timepicker component\n         * @meaning kendo.datetimepicker.now\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_118 = goog.getMsg(\"NOW\");\n        i18n_117 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_118;\n      } else {\n        i18n_117 = $localize`:kendo.datetimepicker.now|The Now button text in the timepicker component:NOW`;\n      }\n      let i18n_119;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Now button in the timepicker component\n         * @meaning kendo.datetimepicker.nowLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_120 = goog.getMsg(\"Select now\");\n        i18n_119 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_120;\n      } else {\n        i18n_119 = $localize`:kendo.datetimepicker.nowLabel|The label for the Now button in the timepicker component:Select now`;\n      }\n      let i18n_121;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the today button in the calendar header\n         * @meaning kendo.datetimepicker.today\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_122 = goog.getMsg(\"Today\");\n        i18n_121 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_122;\n      } else {\n        i18n_121 = $localize`:kendo.datetimepicker.today|The label for the today button in the calendar header:Today`;\n      }\n      let i18n_123;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the previous button in the Classic calendar\n         * @meaning kendo.datetimepicker.prevButtonTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_124 = goog.getMsg(\"Navigate to previous view\");\n        i18n_123 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_124;\n      } else {\n        i18n_123 = $localize`:kendo.datetimepicker.prevButtonTitle|The title of the previous button in the Classic calendar:Navigate to previous view`;\n      }\n      let i18n_125;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the next button in the Classic calendar\n         * @meaning kendo.datetimepicker.nextButtonTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_126 = goog.getMsg(\"Navigate to next view\");\n        i18n_125 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_126;\n      } else {\n        i18n_125 = $localize`:kendo.datetimepicker.nextButtonTitle|The title of the next button in the Classic calendar:Navigate to next view`;\n      }\n      let i18n_127;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the parent view button in the calendar header\n         * @meaning kendo.datetimepicker.parentViewButtonTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_128 = goog.getMsg(\"Navigate to parent view\");\n        i18n_127 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_128;\n      } else {\n        i18n_127 = $localize`:kendo.datetimepicker.parentViewButtonTitle|The title of the parent view button in the calendar header:Navigate to parent view`;\n      }\n      let i18n_129;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the hour part in the timepicker component\n         * @meaning kendo.datetimepicker.hour\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_130 = goog.getMsg(\"Hour\");\n        i18n_129 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_130;\n      } else {\n        i18n_129 = $localize`:kendo.datetimepicker.hour|The label for the hour part in the timepicker component:Hour`;\n      }\n      let i18n_131;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the minute part in the timepicker component\n         * @meaning kendo.datetimepicker.minute\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_132 = goog.getMsg(\"Minute\");\n        i18n_131 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_132;\n      } else {\n        i18n_131 = $localize`:kendo.datetimepicker.minute|The label for the minute part in the timepicker component:Minute`;\n      }\n      let i18n_133;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the second part in the timepicker component\n         * @meaning kendo.datetimepicker.second\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_134 = goog.getMsg(\"Second\");\n        i18n_133 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_134;\n      } else {\n        i18n_133 = $localize`:kendo.datetimepicker.second|The label for the second part in the timepicker component:Second`;\n      }\n      let i18n_135;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the millisecond part in the timepicker component\n         * @meaning kendo.datetimepicker.millisecond\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_136 = goog.getMsg(\"Millisecond\");\n        i18n_135 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_136;\n      } else {\n        i18n_135 = $localize`:kendo.datetimepicker.millisecond|The label for the millisecond part in the timepicker component:Millisecond`;\n      }\n      let i18n_137;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the dayperiod part in the timepicker component\n         * @meaning kendo.datetimepicker.dayperiod\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_138 = goog.getMsg(\"Dayperiod\");\n        i18n_137 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_138;\n      } else {\n        i18n_137 = $localize`:kendo.datetimepicker.dayperiod|The label for the dayperiod part in the timepicker component:Dayperiod`;\n      }\n      let i18n_139;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the clear button\n         * @meaning kendo.datetimepicker.clearTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_140 = goog.getMsg(\"clear\");\n        i18n_139 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_140;\n      } else {\n        i18n_139 = $localize`:kendo.datetimepicker.clearTitle|The title of the clear button:clear`;\n      }\n      return [[\"kendoDateTimePickerLocalizedMessages\", \"\", \"dateTab\", i18n_99, \"dateTabLabel\", i18n_101, \"timeTab\", i18n_103, \"timeTabLabel\", i18n_105, \"toggle\", i18n_107, \"accept\", i18n_109, \"acceptLabel\", i18n_111, \"cancel\", i18n_113, \"cancelLabel\", i18n_115, \"now\", i18n_117, \"nowLabel\", i18n_119, \"today\", i18n_121, \"prevButtonTitle\", i18n_123, \"nextButtonTitle\", i18n_125, \"parentViewButtonTitle\", i18n_127, \"hour\", i18n_129, \"minute\", i18n_131, \"second\", i18n_133, \"millisecond\", i18n_135, \"dayperiod\", i18n_137, \"clearTitle\", i18n_139], [\"pickerType\", \"datetimepicker\", \"hasPopup\", \"dialog\", \"fillMode\", \"none\", \"rounded\", \"none\", \"size\", \"none\", 3, \"value\", \"format\", \"clearButton\", \"twoDigitYearMax\", \"min\", \"max\", \"incompleteDateValidation\", \"autoCorrectParts\", \"autoSwitchParts\", \"autoSwitchKeys\", \"enableMouseWheel\", \"allowCaretMode\", \"autoFill\", \"formatPlaceholder\", \"placeholder\", \"disabled\", \"focusableId\", \"readonly\", \"role\", \"ariaReadOnly\", \"steps\", \"tabindex\", \"isRequired\", \"title\", \"inputAttributes\", \"isPopupOpen\", \"kendoEventsOutsideAngular\", \"scope\", \"valueChange\", \"click\"], [3, \"clearTitle\"], [\"type\", \"button\", 1, \"k-input-button\", \"k-button\", \"k-icon-button\", 3, \"tabindex\", \"kendoEventsOutsideAngular\", \"scope\"], [\"toggleButton\", \"\"], [\"name\", \"calendar\", \"innerCssClass\", \"k-button-icon\", 3, \"svgIcon\", 4, \"ngIf\"], [\"name\", \"clock\", \"innerCssClass\", \"k-button-icon\", 3, \"svgIcon\", 4, \"ngIf\"], [\"container\", \"\"], [\"popupTemplate\", \"\"], [3, \"resize\", 4, \"ngIf\"], [3, \"titleId\", \"overlayClick\", \"collapse\"], [\"actionSheet\", \"\"], [\"kendoActionSheetTemplate\", \"\"], [\"dateTimeTemplate\", \"\"], [\"name\", \"calendar\", \"innerCssClass\", \"k-button-icon\", 3, \"svgIcon\"], [\"name\", \"clock\", \"innerCssClass\", \"k-button-icon\", 3, \"svgIcon\"], [4, \"ngTemplateOutlet\"], [3, \"resize\"], [1, \"k-actionsheet-titlebar\"], [1, \"k-actionsheet-titlebar-group\", \"k-hbox\"], [1, \"k-actionsheet-title\"], [1, \"k-text-center\"], [1, \"k-actionsheet-subtitle\", \"k-text-center\"], [1, \"k-actionsheet-actions\"], [\"kendoButton\", \"\", \"type\", \"button\", \"icon\", \"x\", \"fillMode\", \"flat\", \"aria-hidden\", \"true\", \"size\", \"large\", \"innerCssClass\", \"k-button-icon\", 3, \"svgIcon\", \"tabIndex\", \"click\"], [1, \"k-actionsheet-content\", \"!k-overflow-hidden\"], [1, \"k-actions\", \"k-actions-stretched\", \"k-actions-horizontal\", \"k-actionsheet-footer\"], [\"kendoButton\", \"\", \"class\", \"k-time-cancel\", \"type\", \"button\", \"size\", \"large\", 3, \"click\", 4, \"ngIf\"], [\"kendoButton\", \"\", \"type\", \"button\", \"size\", \"large\", \"themeColor\", \"primary\", 1, \"k-time-accept\", 3, \"disabled\", \"click\"], [\"kendoButton\", \"\", \"type\", \"button\", \"size\", \"large\", 1, \"k-time-cancel\", 3, \"click\"], [3, \"ngClass\", \"kendoEventsOutsideAngular\", \"scope\"], [1, \"k-datetime-buttongroup\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [\"role\", \"group\", 1, \"k-button-group\", \"k-button-group-solid\", \"k-button-group-stretched\"], [\"type\", \"button\", 1, \"k-button\", \"k-group-start\", 3, \"ngClass\", \"kendoEventsOutsideAngular\", \"scope\"], [\"type\", \"button\", 1, \"k-button\", \"k-group-end\", 3, \"ngClass\", \"kendoEventsOutsideAngular\", \"scope\"], [1, \"k-datetime-selector\", 3, \"kendoEventsOutsideAngular\"], [\"dateTimeSelector\", \"\"], [1, \"k-datetime-calendar-wrap\"], [3, \"focusedDate\", \"size\", \"value\", \"type\", \"min\", \"max\", \"weekDaysFormat\", \"weekNumber\", \"navigation\", \"animateNavigation\", \"showOtherMonthDays\", \"cellTemplate\", \"monthCellTemplate\", \"yearCellTemplate\", \"decadeCellTemplate\", \"centuryCellTemplate\", \"weekNumberTemplate\", \"headerTitleTemplate\", \"headerTemplate\", \"footerTemplate\", \"footer\", \"disabled\", \"disabledDates\", \"valueChange\"], [\"calendar\", \"\"], [3, \"today\", \"prevButtonTitle\", \"nextButtonTitle\", \"parentViewButtonTitle\"], [1, \"k-datetime-time-wrap\"], [3, \"ngClass\", \"value\", \"format\", \"min\", \"max\", \"setButton\", \"cancelButton\", \"steps\", \"disabled\", \"isAdaptiveEnabled\", \"isDateTimePicker\", \"tabOutLastPart\", \"tabOutFirstPart\", \"tabOutNow\"], [3, \"acceptLabel\", \"accept\", \"cancelLabel\", \"cancel\", \"nowLabel\", \"now\", \"hour\", \"minute\", \"second\", \"millisecond\", \"dayperiod\"], [\"class\", \"k-datetime-footer k-actions k-actions-stretched k-actions-horizontal\", 3, \"kendoEventsOutsideAngular\", \"scope\", 4, \"ngIf\"], [1, \"k-datetime-footer\", \"k-actions\", \"k-actions-stretched\", \"k-actions-horizontal\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [\"type\", \"button\", 1, \"k-button\", \"k-time-accept\", 3, \"ngClass\", \"disabled\", \"kendoEventsOutsideAngular\", \"scope\"], [\"type\", \"button\", \"class\", \"k-button k-time-cancel\", 3, \"ngClass\", \"kendoEventsOutsideAngular\", \"scope\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"k-button\", \"k-time-cancel\", 3, \"ngClass\", \"kendoEventsOutsideAngular\", \"scope\"]];\n    },\n    template: function _class67_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n        i0.ɵɵelementStart(1, \"kendo-dateinput\", 1);\n        i0.ɵɵlistener(\"valueChange\", function _class67_Template_kendo_dateinput_valueChange_1_listener($event) {\n          return ctx.handleInputValueChange($event);\n        })(\"click\", function _class67_Template_kendo_dateinput_click_1_listener() {\n          return ctx.handleDateInputClick();\n        });\n        i0.ɵɵelement(2, \"kendo-dateinput-messages\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 3, 4);\n        i0.ɵɵtemplate(5, _class67_kendo_icon_wrapper_5_Template, 1, 1, \"kendo-icon-wrapper\", 5);\n        i0.ɵɵtemplate(6, _class67_kendo_icon_wrapper_6_Template, 1, 1, \"kendo-icon-wrapper\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainer(7, null, 7);\n        i0.ɵɵtemplate(9, _class67_ng_template_9_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(11, _class67_kendo_resize_sensor_11_Template, 1, 0, \"kendo-resize-sensor\", 9);\n        i0.ɵɵelementStart(12, \"kendo-actionsheet\", 10, 11);\n        i0.ɵɵlistener(\"overlayClick\", function _class67_Template_kendo_actionsheet_overlayClick_12_listener() {\n          return ctx.toggleDateTime(false);\n        })(\"collapse\", function _class67_Template_kendo_actionsheet_collapse_12_listener() {\n          return ctx.handleActionSheetCollapse();\n        });\n        i0.ɵɵtemplate(14, _class67_ng_template_14_Template, 15, 11, \"ng-template\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, _class67_ng_template_15_Template, 17, 98, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.value)(\"format\", ctx.format)(\"clearButton\", ctx.clearButton)(\"twoDigitYearMax\", ctx.twoDigitYearMax)(\"min\", ctx.min)(\"max\", ctx.max)(\"incompleteDateValidation\", ctx.incompleteDateValidation)(\"autoCorrectParts\", ctx.autoCorrectParts)(\"autoSwitchParts\", ctx.autoSwitchParts)(\"autoSwitchKeys\", ctx.autoSwitchKeys)(\"enableMouseWheel\", ctx.enableMouseWheel)(\"allowCaretMode\", ctx.allowCaretMode)(\"autoFill\", ctx.autoFill)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"placeholder\", ctx.placeholder)(\"disabled\", ctx.disabled)(\"focusableId\", ctx.focusableId)(\"readonly\", ctx.readonly || ctx.readOnlyInput)(\"role\", \"combobox\")(\"ariaReadOnly\", ctx.readonly)(\"steps\", ctx.steps)(\"tabindex\", ctx.tabindex)(\"isRequired\", ctx.isControlRequired)(\"title\", ctx.title)(\"inputAttributes\", ctx.inputAttributes)(\"isPopupOpen\", ctx.isOpen)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(39, _c52, ctx.handleKeyDown))(\"scope\", ctx);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"clearTitle\", ctx.localization.get(\"clearTitle\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"tabindex\", -1)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(41, _c149, ctx.preventMouseDown, ctx.handleIconClick))(\"scope\", ctx);\n        i0.ɵɵattribute(\"title\", ctx.localization.get(\"toggle\"))(\"aria-label\", ctx.localization.get(\"toggle\"))(\"disabled\", ctx.disabled ? \"\" : null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.activeTab === \"date\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activeTab === \"time\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAdaptiveModeEnabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"titleId\", ctx.calendar == null ? null : ctx.calendar.headerId);\n      }\n    },\n    dependencies: [LocalizedMessagesDirective, DateInputComponent, EventsOutsideAngularDirective, DateInputCustomMessagesComponent, NgIf, IconWrapperComponent, NgTemplateOutlet, ResizeSensorComponent, ActionSheetComponent, ActionSheetTemplateDirective, ButtonComponent, NgClass, CalendarComponent, CalendarCustomMessagesComponent, TimeSelectorComponent, TimeSelectorCustomMessagesComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return DateTimePickerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n * @deprecated\n *\n * This service is deprecated and will be removed in a future major version release.\n */\nlet WeekNamesService = /*#__PURE__*/(() => {\n  var _class68;\n  class WeekNamesService {\n    constructor(intl) {\n      _defineProperty(this, \"intl\", void 0);\n      this.intl = intl;\n    }\n    getWeekNames(includeWeekNumber = false, nameType) {\n      const weekNames = shiftWeekNames(this.intl.dateFormatNames({\n        nameType: nameType,\n        type: 'days'\n      }), this.intl.firstDay());\n      return includeWeekNumber ? [''].concat(weekNames) : weekNames;\n    }\n  }\n  _class68 = WeekNamesService;\n  _defineProperty(WeekNamesService, \"\\u0275fac\", function _class68_Factory(t) {\n    return new (t || _class68)(i0.ɵɵinject(i1.IntlService));\n  });\n  _defineProperty(WeekNamesService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class68,\n    factory: _class68.ɵfac,\n    providedIn: 'root'\n  }));\n  return WeekNamesService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A directive which renders the content of the DateRange Popup. To define the cell template, nest an\n * `<ng-template>` tag with the `kendoRangePopupTemplate` directive inside the component tag.\n */\nlet DateRangePopupTemplateDirective = /*#__PURE__*/(() => {\n  var _class69;\n  class DateRangePopupTemplateDirective {\n    constructor(templateRef) {\n      _defineProperty(this, \"templateRef\", void 0);\n      this.templateRef = templateRef;\n    }\n  }\n  _class69 = DateRangePopupTemplateDirective;\n  _defineProperty(DateRangePopupTemplateDirective, \"\\u0275fac\", function _class69_Factory(t) {\n    return new (t || _class69)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  });\n  _defineProperty(DateRangePopupTemplateDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class69,\n    selectors: [[\"\", \"kendoDateRangePopupTemplate\", \"\"]],\n    standalone: true\n  }));\n  return DateRangePopupTemplateDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst isActive = cmp => cmp && cmp.isActive || false;\nconst hasActiveContent = popup => popup && popup.hasActiveContent();\n/**\n * A service that handles the communication between the components that are placed inside the DateRangeComponent.\n * For example, the start and end `DateInput` and `DateRangePopup` components.\n */\nlet DateRangeService = /*#__PURE__*/(() => {\n  var _class70;\n  class DateRangeService {\n    /**\n     * Gets the current `activeRangeEnd` value.\n     */\n    get activeRangeEnd() {\n      return this.activeRangeEnd$.value;\n    }\n    /**\n     * Gets the current `focusedDate` value.\n     */\n    get focusedDate() {\n      return this.focusedDate$.value;\n    }\n    /**\n     * Gets the `min` range value.\n     * The `min` value is extracted from the `start` DateInput value or the `min` value of the Calendar.\n     */\n    get min() {\n      return (this.startInput$.value || {}).min || null;\n    }\n    /**\n     * Gets the `max` range value.\n     * The `max` value is extracted from the `end` DateInput value or the `max` value of the Calendar.\n     */\n    get max() {\n      return (this.endInput$.value || {}).max || null;\n    }\n    /**\n     * Gets the current `selectionRange` value.\n     */\n    get selectionRange() {\n      return this.range$.value;\n    }\n    /**\n     * @hidden\n     * Gets the start input element.\n     */\n    get inputStartElement() {\n      return this.startInput$.value.inputElement;\n    }\n    /**\n     * @hidden\n     * Gets the end input element.\n     */\n    get inputEndElement() {\n      return this.endInput$.value.inputElement;\n    }\n    /** @hidden */\n    constructor(renderer) {\n      _defineProperty(this, \"renderer\", void 0);\n      /**\n       * An Observable instance that notifies when the `activeRangeEnd` state is changed.\n       */\n      _defineProperty(this, \"activeRangeEnd$\", new BehaviorSubject(null));\n      /**\n       * An Observable instance that notifies when the `focusedDate` is changed.\n       */\n      _defineProperty(this, \"focusedDate$\", new BehaviorSubject(null));\n      /**\n       * An Observable instance that notifies when the end `DateInput` component is changed.\n       * For example, when a new end `DateInput` is attached or when the old one is detached.\n       */\n      _defineProperty(this, \"endInput$\", new BehaviorSubject(null));\n      /**\n       * An Observable instance that notifies when the start `DateInput` component is changed.\n       * For example, when a new start `DateInput` is attached or the old one is detached.\n       */\n      _defineProperty(this, \"startInput$\", new BehaviorSubject(null));\n      /**\n       * An Observable instance that notifies when the `DateRangePopup` component is changed.\n       */\n      _defineProperty(this, \"dateRangePopup$\", new BehaviorSubject(null));\n      /**\n       * An Observable instance that notifies when the state of the selection range is changed.\n       */\n      _defineProperty(this, \"range$\", new BehaviorSubject(EMPTY_SELECTIONRANGE));\n      this.renderer = renderer;\n    }\n    /**\n     * Activates the registered `DateRangePopup` component.\n     * The method opens the popup and focuses the calendar.\n     */\n    activatePopup() {\n      const dateRangePopup = this.dateRangePopup$.value;\n      if (!dateRangePopup) {\n        return;\n      }\n      if (this.startInput$.value) {\n        this.renderer.setAttribute(this.inputStartElement, attributeNames.ariaControls, dateRangePopup.popupUID);\n        this.renderer.setAttribute(this.inputStartElement, attributeNames.ariaExpanded, 'true');\n        this.renderer.setAttribute(this.inputEndElement, attributeNames.ariaControls, dateRangePopup.popupUID);\n        this.renderer.setAttribute(this.inputEndElement, attributeNames.ariaExpanded, 'true');\n      }\n      dateRangePopup.activate();\n    }\n    /**\n     * Deactivates the registered `DateRangePopup` component.\n     * The method closes the popup.\n     */\n    deactivatePopup() {\n      const dateRangePopup = this.dateRangePopup$.value;\n      if (this.startInput$.value) {\n        this.renderer.removeAttribute(this.inputStartElement, attributeNames.ariaControls);\n        this.renderer.setAttribute(this.inputStartElement, attributeNames.ariaExpanded, 'false');\n        this.renderer.removeAttribute(this.inputStartElement, attributeNames.ariaActiveDescendant);\n        this.renderer.removeAttribute(this.inputEndElement, attributeNames.ariaControls);\n        this.renderer.setAttribute(this.inputEndElement, attributeNames.ariaExpanded, 'false');\n        this.renderer.removeAttribute(this.inputEndElement, attributeNames.ariaActiveDescendant);\n      }\n      if (!(dateRangePopup && dateRangePopup.show)) {\n        return;\n      }\n      dateRangePopup.show = false;\n    }\n    /**\n     * @hidden\n     */\n    setActiveDescendent(id) {\n      this.renderer.setAttribute(this.inputStartElement, attributeNames.ariaActiveDescendant, id);\n      this.renderer.setAttribute(this.inputEndElement, attributeNames.ariaActiveDescendant, id);\n    }\n    /**\n     * @hidden\n     *\n     * Deactivates the registered `DateRangePopup` component and fires the `cancel` event.\n     * The method closes the popup.\n     */\n    cancelPopup() {\n      const dateRangePopup = this.dateRangePopup$.value;\n      if (!(dateRangePopup && dateRangePopup.show)) {\n        return;\n      }\n      dateRangePopup.cancelPopup();\n    }\n    /**\n     * Completes all observables to mitigate possible memory leaks.\n     * Calls the method when a component that uses it is destroyed.\n     */\n    destroy() {\n      this.activeRangeEnd$.complete();\n      this.dateRangePopup$.complete();\n      this.focusedDate$.complete();\n      this.endInput$.complete();\n      this.startInput$.complete();\n      this.range$.complete();\n    }\n    /**\n     * Returns `true` when an active component that is placed inside the `DateRangeComponent` is detected.\n     * For example, the opened popup or the focused DateInput.\n     *\n     * @returns `true` if an active component is present.\n     */\n    hasActiveComponent() {\n      const popup = this.dateRangePopup$.value;\n      const isPopup = isActive(popup);\n      const isStart = isActive(this.startInput$.value);\n      const isEnd = isActive(this.endInput$.value);\n      return isPopup || isStart || isEnd || hasActiveContent(popup) || false;\n    }\n    /**\n     * Registers a new start `DateInput` component. Notifies all `startInput$` listeners.\n     */\n    registerStartInput(startInput) {\n      this.startInput$.next(startInput);\n    }\n    /**\n     * Registers a new end `DateInput` component. Notifies all `endInput$` listeners.\n     */\n    registerEndInput(endInput) {\n      this.endInput$.next(endInput);\n    }\n    /**\n     * Registers a new `DateRangePopup` component. Notifies all `dateRangePopup$` listeners.\n     */\n    registerPopup(dateRangePopup) {\n      this.dateRangePopup$.next(dateRangePopup);\n    }\n    /**\n     * Updates the `activeRangeEnd` value. Notifies all `activeRangeEnd$` listeners.\n     */\n    setActiveRangeEnd(activeRange) {\n      if (!activeRange || this.activeRangeEnd === activeRange) {\n        return;\n      }\n      this.activeRangeEnd$.next(activeRange);\n    }\n    /**\n     * Updates the focused date. Notifies all `focusedDate$` listeners.\n     */\n    setFocusedDate(value) {\n      if (isEqual(this.focusedDate$.value, value)) {\n        return;\n      }\n      this.focusedDate$.next(value);\n    }\n    /**\n     * Updates the selection range. Notifies all `range$` listeners.\n     */\n    setRange(range = EMPTY_SELECTIONRANGE) {\n      this.range$.next(range);\n    }\n  }\n  _class70 = DateRangeService;\n  _defineProperty(DateRangeService, \"\\u0275fac\", function _class70_Factory(t) {\n    return new (t || _class70)(i0.ɵɵinject(i0.Renderer2, 8));\n  });\n  _defineProperty(DateRangeService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _class70,\n    factory: _class70.ɵfac\n  }));\n  return DateRangeService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A directive which manages the MultiViewCalendar range selection.\n * This directive will be `deprecated` in a future version.\n * We recommend using the MultiViewCalendar [range selection]({% slug selection_multiviewcalendar %}#toc-range-selection).\n */\nlet DateRangeSelectionDirective = /*#__PURE__*/(() => {\n  var _class71;\n  class DateRangeSelectionDirective {\n    /**\n     * Gets or sets the selection range of the calendar. When a new range is set,\n     * the connected DateRangeService notifies all related parties.\n     */\n    get selectionRange() {\n      return this.calendar ? this.calendar.selectionRange : null;\n    }\n    set selectionRange(range) {\n      if (!this.isEqualCalendarRange(range)) {\n        this.setSelectionRange(range);\n      }\n      if (!isEqualRange(this.dateRangeService.selectionRange, range)) {\n        this.dateRangeService.setRange(range);\n      }\n      this.updateFocusedDate(range);\n    }\n    /**\n     * Gets or sets the active end of the selection range. This option determines which range end will be updated on\n     * user interaction. When a new active end is set, the connected DateRangeService notifies all related parties.\n     */\n    /**\n     * Specifies which end of the selection range will be marked as active. The active end gets modified upon user\n     * interaction. When a new active end is set, the wired DateRangeService notifies all related components. For\n     * example, the start and end DateInput components.\n     *\n     * > If the selection range is undefined, the value is ignored.\n     */\n    get activeRangeEnd() {\n      return this.calendar.activeRangeEnd;\n    }\n    set activeRangeEnd(activeRange) {\n      if (this.dateRangeService.activeRangeEnd === activeRange) {\n        return;\n      }\n      this.calendar.activeRangeEnd = activeRange;\n      this.dateRangeService.setActiveRangeEnd(activeRange);\n    }\n    /**\n     * @hidden\n     * When in adaptive mode range should not be set automatically on calendar value change but only on accept\n     */\n\n    get calendarRange() {\n      return this.selectionRange || EMPTY_SELECTIONRANGE;\n    }\n    constructor(calendar, cdr, element, renderer, dateRangeService) {\n      _defineProperty(this, \"calendar\", void 0);\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"dateRangeService\", void 0);\n      /**\n       * Specifies the auto-correction behavior. If the start date is greater than the end date,\n       * the directive fixes the date range to a single date either on input change or on blur\n       * ([see example](slug:autocorrect_daterange#toc-calendar-selection-directive)).\n       *\n       * By default, the auto-correction is triggered on change.\n       * To disable this behavior, set the `autoCorrectOn` property to `none`.\n       */\n      _defineProperty(this, \"autoCorrectOn\", 'change');\n      _defineProperty(this, \"shouldSetRange\", true);\n      /**\n       * Fires when the active range end is changed. For more information, refer to\n       * the section on [events](slug:events_multiviewcalendar).\n       */\n      _defineProperty(this, \"activeRangeEndChange\", new EventEmitter());\n      /**\n       * Fires when the selection range is changed. For more information, refer to\n       * the section on [events](slug:events_multiviewcalendar).\n       */\n      _defineProperty(this, \"selectionRangeChange\", new EventEmitter());\n      _defineProperty(this, \"calendarSubscriptions\", new Subscription());\n      _defineProperty(this, \"range\", void 0);\n      this.calendar = calendar;\n      this.cdr = cdr;\n      this.element = element;\n      this.dateRangeService = dateRangeService;\n      this.dateRangeService = this.dateRangeService || new DateRangeService(renderer);\n      renderer.setAttribute(element.nativeElement, 'aria-multiselectable', 'true');\n    }\n    ngOnInit() {\n      const calendar = this.calendar;\n      const dateRangeService = this.dateRangeService;\n      calendar.min = either(dateRangeService.min, calendar.min);\n      calendar.max = either(dateRangeService.max, calendar.max);\n      this.addSubscriptions(calendar.cellEnter.subscribe(value => this.handleHover(value)), calendar.valueChange.subscribe(value => this.handleChange(value)), dateRangeService.focusedDate$.subscribe(focusedDate => {\n        if (!isEqual(calendar.focusedDate, focusedDate)) {\n          calendar.focusedDate = focusedDate;\n        }\n      }), dateRangeService.activeRangeEnd$.subscribe(rangeEnd => {\n        if (calendar.activeRangeEnd === rangeEnd) {\n          return;\n        }\n        calendar.activeRangeEnd = rangeEnd;\n        this.activeRangeEndChange.emit(rangeEnd);\n        this.cdr.markForCheck();\n      }), dateRangeService.range$.subscribe(range => {\n        if (!this.isEqualCalendarRange(range)) {\n          this.acceptAndEmit(range);\n        }\n        this.updateFocusedDate(range);\n      }), fromEvent(this.element.nativeElement, 'blur').subscribe(() => this.handleBlur()));\n    }\n    ngOnDestroy() {\n      this.calendarSubscriptions.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n    handleChange(value) {\n      const service = this.dateRangeService;\n      const autoCorrect = this.autoCorrectOn === 'change' && this.shouldAutoCorrect(value);\n      const activeEnd = this.calendar.activeRangeEnd !== 'end' ? 'end' : autoCorrect ? 'end' : 'start';\n      this.range = autoCorrect ? clampRange(value) : this.updateRange(value);\n      if (!isEqualRange(service.selectionRange, this.range)) {\n        this.acceptAndEmit(this.range);\n        service.setActiveRangeEnd(activeEnd);\n        if (this.shouldSetRange) {\n          this.setRange();\n        }\n      }\n    }\n    setRange(range) {\n      this.dateRangeService.setRange(this.range ? this.range : range);\n    }\n    addSubscriptions(...subscriptions) {\n      subscriptions.map(s => this.calendarSubscriptions.add(s));\n    }\n    isEqualCalendarRange(range) {\n      return isEqualRange(this.calendar.selectionRange, range);\n    }\n    handleBlur() {\n      const {\n        start,\n        end\n      } = this.calendarRange;\n      const autoCorrect = this.autoCorrectOn === 'blur' && start !== null && end !== null && end < start;\n      if (autoCorrect) {\n        this.dateRangeService.setRange(clampRange(start));\n      }\n    }\n    handleHover(value) {\n      if (this.hasCompleteRange()) {\n        return;\n      }\n      const {\n        start,\n        end\n      } = this.calendarRange;\n      const activeRangeEnd = this.calendar.activeRangeEnd;\n      const updateRange = start && activeRangeEnd === 'end' || end && activeRangeEnd === 'start';\n      if (updateRange) {\n        this.setSelectionRange(this.updateRange(value));\n      }\n    }\n    hasCompleteRange() {\n      const {\n        start,\n        end\n      } = this.dateRangeService.selectionRange || EMPTY_SELECTIONRANGE;\n      return Boolean(start) && Boolean(end);\n    }\n    shouldAutoCorrect(value) {\n      const {\n        end,\n        start\n      } = this.calendarRange;\n      if (this.calendar.activeRangeEnd !== 'end') {\n        return end !== null && value > end;\n      } else {\n        return start !== null && value < start;\n      }\n    }\n    updateFocusedDate(range) {\n      if (!range || this.dateRangeService.focusedDate) {\n        return;\n      }\n      this.dateRangeService.setFocusedDate(range.start || range.end);\n    }\n    updateRange(value) {\n      const {\n        end,\n        start\n      } = this.calendarRange;\n      return this.calendar.activeRangeEnd !== 'end' ? {\n        start: value,\n        end\n      } : {\n        start,\n        end: value\n      };\n    }\n    setSelectionRange(range) {\n      this.calendar.selectionRange = range;\n      this.calendar.writeValue(null);\n    }\n    acceptAndEmit(range) {\n      this.setSelectionRange(range);\n      this.selectionRangeChange.emit(range);\n    }\n  }\n  _class71 = DateRangeSelectionDirective;\n  _defineProperty(DateRangeSelectionDirective, \"\\u0275fac\", function _class71_Factory(t) {\n    return new (t || _class71)(i0.ɵɵdirectiveInject(MultiViewCalendarComponent), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(DateRangeService, 8));\n  });\n  _defineProperty(DateRangeSelectionDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class71,\n    selectors: [[\"\", \"kendoDateRangeSelection\", \"\"]],\n    inputs: {\n      autoCorrectOn: \"autoCorrectOn\",\n      selectionRange: \"selectionRange\",\n      activeRangeEnd: \"activeRangeEnd\",\n      shouldSetRange: \"shouldSetRange\"\n    },\n    outputs: {\n      activeRangeEndChange: \"activeRangeEndChange\",\n      selectionRangeChange: \"selectionRangeChange\"\n    },\n    standalone: true\n  }));\n  return DateRangeSelectionDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet DateRangePopupMessages = /*#__PURE__*/(() => {\n  var _class72;\n  class DateRangePopupMessages extends ComponentMessages {\n    constructor(...args) {\n      super(...args);\n      /**\n       * The text of the **Accept** button in the popup footer of the DateRange Popup.\n       */\n      _defineProperty(this, \"accept\", void 0);\n      /**\n       * The label of the **Accept** button in the popup footer of the DateRange Popup.\n       */\n      _defineProperty(this, \"acceptLabel\", void 0);\n      /**\n       * The text of the **Cancel** button in the popup footer of the DateRange Popup.\n       */\n      _defineProperty(this, \"cancel\", void 0);\n      /**\n       * The label of the **Cancel** button in the popup footer of the DateRange Popup.\n       */\n      _defineProperty(this, \"cancelLabel\", void 0);\n    }\n  }\n  _class72 = DateRangePopupMessages;\n  _defineProperty(DateRangePopupMessages, \"\\u0275fac\", /* @__PURE__ */function () {\n    let ɵ_class72_BaseFactory;\n    return function _class72_Factory(t) {\n      return (ɵ_class72_BaseFactory || (ɵ_class72_BaseFactory = i0.ɵɵgetInheritedFactory(_class72)))(t || _class72);\n    };\n  }());\n  _defineProperty(DateRangePopupMessages, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class72,\n    selectors: [[\"kendo-daterangepopup-messages-base\"]],\n    inputs: {\n      accept: \"accept\",\n      acceptLabel: \"acceptLabel\",\n      cancel: \"cancel\",\n      cancelLabel: \"cancelLabel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  }));\n  return DateRangePopupMessages;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet DateRangePopupLocalizedMessagesDirective = /*#__PURE__*/(() => {\n  var _class73;\n  class DateRangePopupLocalizedMessagesDirective extends DateRangePopupMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n  }\n  _class73 = DateRangePopupLocalizedMessagesDirective;\n  _defineProperty(DateRangePopupLocalizedMessagesDirective, \"\\u0275fac\", function _class73_Factory(t) {\n    return new (t || _class73)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(DateRangePopupLocalizedMessagesDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class73,\n    selectors: [[\"\", \"kendoDateRangePopupLocalizedMessages\", \"\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: DateRangePopupMessages,\n      useExisting: forwardRef(() => _class73)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  }));\n  return DateRangePopupLocalizedMessagesDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Represents the Kendo UI DateRangePopup component for Angular.\n *\n * @example\n * ```ts\n * import { DateInputsModule, DateRangeService } from '@progress/kendo-angular-dateinputs';\n *\n * _@Component({\n * providers: [DateRangeService],\n * selector: 'my-app',\n * template: `\n *  <button #anchor (click)=\"popup.toggle()\">Toggle</button>\n *  <kendo-daterange-popup [anchor]=\"anchor\" #popup></kendo-daterange-popup>\n * `\n * })\n * export class AppComponent {\n * }\n * ```\n */\nlet DateRangePopupComponent = /*#__PURE__*/(() => {\n  var _class74;\n  class DateRangePopupComponent {\n    /**\n     * Sets the subtitle text rendered in the header of the popup(action sheet).\n     * Applicable only when [`AdaptiveMode` is set to `auto`](slug:api_dateinputs_adaptivemode).\n     */\n    set subtitle(subtitle) {\n      this._subtitle = subtitle;\n    }\n    get subtitle() {\n      return this._subtitle;\n    }\n    /**\n     * The active calendar that is visible in the popup\n     *\n     * > When the popup is closed, the property returns `null`.\n     */\n    get calendar() {\n      return this._calendar;\n    }\n    set calendar(calendar) {\n      this._calendar = calendar;\n      this.subscribeFocusBlur(calendar);\n    }\n    /**\n     * Gets the active state of the component.\n     * When the opened calendar is active, returns `true`.\n     */\n    get isActive() {\n      // The actionsheet is expanding before the calendar gets activated\n      // and if we only check for calendar.isActive a blur event handler in the date-rage-input.ts will close the actionsheet\n      // TODO: Potentially the entire logic would need refactoring to avoid hacks like this one\n      return this.calendar && this.calendar.isActive || this.actionSheet && this.actionSheet.expanded;\n    }\n    /**\n     * @hidden\n     */\n    get isAdaptiveModeEnabled() {\n      return this.adaptiveMode === 'auto';\n    }\n    /**\n     * @hidden\n     */\n    get isAdaptive() {\n      return this.isAdaptiveModeEnabled && this.windowSize !== 'large';\n    }\n    /**\n     * @hidden\n     */\n\n    /**\n     * Gets or sets the visibility state of the component.\n     */\n    set show(show) {\n      if (this._show === show) {\n        return;\n      }\n      const event = new PreventableEvent();\n      if (show) {\n        this.open.emit(event);\n      } else {\n        this.close.emit(event);\n      }\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n      this.toggleDateRange(show);\n    }\n    get show() {\n      return this._show;\n    }\n    constructor(popupService, dateRangeService, zone, renderer, localization, cdr, rtl, adaptiveService) {\n      _defineProperty(this, \"popupService\", void 0);\n      _defineProperty(this, \"dateRangeService\", void 0);\n      _defineProperty(this, \"zone\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"localization\", void 0);\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"rtl\", void 0);\n      _defineProperty(this, \"adaptiveService\", void 0);\n      _defineProperty(this, \"container\", void 0);\n      _defineProperty(this, \"actionSheet\", void 0);\n      _defineProperty(this, \"defaultTemplate\", void 0);\n      _defineProperty(this, \"contentTemplate\", void 0);\n      _defineProperty(this, \"dateRangeSelectionDirective\", void 0);\n      _defineProperty(this, \"viewCalendar\", void 0);\n      _defineProperty(this, \"contentCalendar\", void 0);\n      /**\n       * @hidden\n       *\n       * Determines whether to display the MultiViewCalendar header.\n       */\n      _defineProperty(this, \"showCalendarHeader\", true);\n      /**\n       * Sets or gets the `focusedDate` property of the MultiViewCalendar and\n       * defines the focused date of the component\n       * ([see example]({% slug dates_multiviewcalendar %}#toc-focused-dates)).\n       *\n       * > If the MultiViewCalendar is out of the min or max range, it normalizes the defined `focusedDate`.\n       */\n      _defineProperty(this, \"focusedDate\", void 0);\n      /**\n       * Sets the dates of the MultiViewCalendar that will be disabled\n       * ([see example]({% slug disabled_dates_multiviewcalendar %})).\n       */\n      _defineProperty(this, \"disabledDates\", void 0);\n      /**\n       * Defines the active view that the MultiViewCalendar initially renders\n       * ([see example]({% slug viewoptions_multiviewcalendar %})).\n       * By default, the active view is `month`.\n       *\n       * > You have to set `activeView` within the `topView`-`bottomView` range.\n       */\n      _defineProperty(this, \"activeView\", CalendarViewEnum[CalendarViewEnum.month]);\n      /**\n       * Defines the bottommost view, to which the user can navigate\n       * ([see example](slug:viewdepth_multiviewcalendar)).\n       */\n      _defineProperty(this, \"bottomView\", CalendarViewEnum[CalendarViewEnum.month]);\n      /**\n       * Defines the topmost view, to which the user can navigate.\n       */\n      _defineProperty(this, \"topView\", CalendarViewEnum[CalendarViewEnum.century]);\n      /**\n       * Sets or gets the `min` property of the MultiViewCalendar and\n       * defines the minimum allowed date value.\n       * By default, the `min` value is `1900-1-1`.\n       */\n      _defineProperty(this, \"min\", void 0);\n      /**\n       * Sets or gets the `max` property of the MultiViewCalendar and\n       * defines the maximum allowed date value.\n       * By default, the `max` value is `2099-12-31`.\n       */\n      _defineProperty(this, \"max\", void 0);\n      /**\n       * Allows reverse selection.\n       * If `allowReverse` is set to `true`, the component skips the validation of whether the start date is after the end date.\n       *\n       * @default false\n       */\n      _defineProperty(this, \"allowReverse\", false);\n      /**\n       * Determines whether to enable animation when navigating to previous/next view.\n       * @default false\n       */\n      _defineProperty(this, \"animateNavigation\", false);\n      /**\n       * Sets or gets the `disabled` property of the MultiViewCalendar and\n       * determines whether the component is active\n       * ([see example]({% slug disabled_multiviewcalendar %})).\n       */\n      _defineProperty(this, \"disabled\", false);\n      /**\n       * Sets or gets the `views` property of the MultiViewCalendar and\n       * defines the number of rendered months.\n       *\n       * @default 2\n       */\n      _defineProperty(this, \"views\", 2);\n      /**\n       * Determines whether to display a week number column in the `month` view\n       * ([see example]({% slug weeknumcolumn_multiviewcalendar %})).\n       */\n      _defineProperty(this, \"weekNumber\", false);\n      /**\n       * Controls the popup animation.\n       * By default, the opening and closing animations are enabled.\n       * For more information about controlling the popup animations,\n       * refer to the article on [animations]({% slug animations_popup %}).\n       */\n      _defineProperty(this, \"animate\", true);\n      /**\n       * Specifies the element that will be used as an anchor. The popup opens next to that element.\n       * For more information, refer to the section on\n       * [aligning to specific components]({% slug alignmentpositioning_popup %}#toc-aligning-to-components).\n       */\n      _defineProperty(this, \"anchor\", void 0);\n      /**\n       * Specifies the anchor pivot point.\n       * For more information, refer to the section on\n       * [positioning]({% slug alignmentpositioning_popup %}#toc-positioning).\n       */\n      _defineProperty(this, \"anchorAlign\", void 0);\n      /**\n       * Determines whether to display a header for every view (for example the month name).\n       *\n       * @default false\n       */\n      _defineProperty(this, \"showViewHeader\", false);\n      /**\n       * Displays the days that fall out of the current month ([see example]({% slug viewoptions_multiviewcalendar %}#toc-displaying-other-month-days)).\n       * @default false\n       */\n      _defineProperty(this, \"showOtherMonthDays\", false);\n      /**\n       * Controls the popup container. By default, the popup is appended to the root component.\n       */\n      _defineProperty(this, \"appendTo\", void 0);\n      /**\n       * Configures the collision behavior of the popup.\n       * For more information, refer to the article on\n       * [viewport boundary detection]({% slug viewportboundarydetection_popup %}).\n       */\n      _defineProperty(this, \"collision\", {\n        horizontal: 'fit',\n        vertical: 'flip'\n      });\n      /**\n       * Specifies the pivot point of the popup.\n       * For more information, refer to the section on\n       * [positioning]({% slug alignmentpositioning_popup %}#toc-positioning).\n       */\n      _defineProperty(this, \"popupAlign\", void 0);\n      /**\n       * Specifies the margin value that will be added to the popup dimensions in pixels\n       * and leaves a blank space between the popup and the anchor.\n       */\n      _defineProperty(this, \"margin\", void 0);\n      /**\n       * Enables or disables the adaptive mode. By default the adaptive rendering is disabled.\n       */\n      _defineProperty(this, \"adaptiveMode\", 'none');\n      /**\n       * Sets the title of the input element of the DateRangePopup and the title text rendered\n       * in the header of the popup(action sheet). Applicable only when [`AdaptiveMode` is set to `auto`](slug:api_dateinputs_adaptivemode).\n       */\n      _defineProperty(this, \"title\", \"\");\n      _defineProperty(this, \"_subtitle\", void 0);\n      /**\n       * @hidden\n       *\n       * TODO: Make visible when the Infinite Calendar is fixed to set properly the size option.\n       * Sets the size of the component.\n       *\n       * The possible values are:\n       * * `small`\n       * * `medium` (Default)\n       * * `large`\n       * * `none`\n       *\n       */\n      _defineProperty(this, \"size\", void 0);\n      /**\n       * Fires each time the popup is about to open\n       * ([see example](slug:popup_daterange#toc-events)).\n       * This event is preventable. If you cancel the event, the popup will remain closed.\n       */\n      _defineProperty(this, \"open\", new EventEmitter());\n      /**\n       * Fires each time the popup is about to close\n       * ([see example](slug:popup_daterange#toc-events)).\n       * This event is preventable. If you cancel the event, the popup will remain open.\n       */\n      _defineProperty(this, \"close\", new EventEmitter());\n      /**\n       * Fires each time the calendar element is blurred\n       * ([see example](slug:popup_daterange#toc-events)).\n       */\n      _defineProperty(this, \"onBlur\", new EventEmitter());\n      /**\n       * Fires each time the calendar element is focused\n       * ([see example](slug:popup_daterange#toc-events)).\n       */\n      _defineProperty(this, \"onFocus\", new EventEmitter());\n      /**\n       * Fires each time the popup is closed either on `ESC` keypress or on leaving the viewport\n       * ([see example](slug:popup_daterange#toc-events)).\n       */\n      _defineProperty(this, \"cancel\", new EventEmitter());\n      _defineProperty(this, \"popupRef\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"popupUID\", guid());\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"xIcon\", xIcon);\n      _defineProperty(this, \"activateSubscription\", void 0);\n      _defineProperty(this, \"blurSubscription\", void 0);\n      _defineProperty(this, \"focusSubscription\", void 0);\n      _defineProperty(this, \"calendarSubscriptions\", new Subscription());\n      _defineProperty(this, \"popupSubscriptions\", new Subscription());\n      _defineProperty(this, \"windowBlurSubscription\", void 0);\n      _defineProperty(this, \"localizationSubscriptions\", new Subscription());\n      _defineProperty(this, \"resolvedPromise\", Promise.resolve());\n      _defineProperty(this, \"_calendar\", void 0);\n      _defineProperty(this, \"_show\", void 0);\n      _defineProperty(this, \"_rangeSelection\", void 0);\n      _defineProperty(this, \"windowSize\", void 0);\n      _defineProperty(this, \"addCalendarSubscription\", calendar => {\n        this.calendarSubscriptions.add(calendar.viewList.focusedCellChange.subscribe(id => {\n          this.dateRangeService.setActiveDescendent(id);\n        }));\n      });\n      this.popupService = popupService;\n      this.dateRangeService = dateRangeService;\n      this.zone = zone;\n      this.renderer = renderer;\n      this.localization = localization;\n      this.cdr = cdr;\n      this.rtl = rtl;\n      this.adaptiveService = adaptiveService;\n    }\n    ngOnInit() {\n      this.dateRangeService.registerPopup(this);\n      if (this.localization) {\n        this.localizationSubscriptions.add(this.localization.changes.subscribe(() => this.cdr.markForCheck()));\n      }\n    }\n    ngAfterViewInit() {\n      this.calendarSubscriptions.add(this.contentCalendar.changes.subscribe(changes => {\n        this.calendar = changes.first;\n        this.actionSheet.titleId = changes.first?.headerId;\n        this.cdr.detectChanges();\n      }));\n      this.calendarSubscriptions.add(this.viewCalendar.changes.subscribe(changes => {\n        this.calendar = changes.first;\n        this.actionSheet.titleId = changes.first?.headerId;\n        this.cdr.detectChanges();\n      }));\n      this.calendarSubscriptions.add(this.dateRangeService.startInput$?.value?.valueChange.subscribe(res => {\n        if (this.calendar) {\n          if (!res && this.dateRangeService.selectionRange.end) {\n            this.calendar.shouldHoverWhenNoStart = true;\n          } else {\n            this.calendar.shouldHoverWhenNoStart = false;\n          }\n        }\n      }));\n      if (isWindowAvailable()) {\n        this.zone.runOutsideAngular(() => this.windowBlurSubscription = fromEvent(window, 'blur').subscribe(this.handleWindowBlur.bind(this)));\n      }\n      if (this.actionSheet && isDocumentAvailable()) {\n        // The following syntax is used as it does not violate CSP compliance\n        this.actionSheet.element.nativeElement.style.setProperty('--kendo-actionsheet-height', '60vh');\n        this.actionSheet.element.nativeElement.style.setProperty('--kendo-actionsheet-max-height', 'none');\n      }\n    }\n    ngOnDestroy() {\n      this.destroyPopup();\n      this.calendarSubscriptions.unsubscribe();\n      if (this.activateSubscription) {\n        this.activateSubscription.unsubscribe();\n      }\n      if (this.blurSubscription) {\n        this.blurSubscription.unsubscribe();\n        this.focusSubscription.unsubscribe();\n      }\n      if (this.windowBlurSubscription) {\n        this.windowBlurSubscription.unsubscribe();\n      }\n    }\n    /**\n     * @hidden\n     *\n     */\n    onRangeSelectionChange(rangeSelection) {\n      this.dateRangeService.setActiveRangeEnd(rangeSelection.activeRangeEnd);\n      if (!this.isAdaptive) {\n        this.dateRangeService.setRange(rangeSelection.selectionRange);\n      } else {\n        this._rangeSelection = rangeSelection.selectionRange;\n      }\n    }\n    /**\n     *  Opens the popup component and focuses the calendar.\n     */\n    activate() {\n      if (this.show === true) {\n        return;\n      }\n      if (this.activateSubscription) {\n        this.activateSubscription.unsubscribe();\n      }\n      this.show = true;\n      this.cdr.markForCheck();\n      this.zone.runOutsideAngular(() => {\n        this.activateSubscription = merge(this.contentCalendar.changes, this.viewCalendar.changes).pipe(filter(changes => changes && changes.first), map(changes => changes.first)).subscribe(calendar => setTimeout(() => {\n          calendar.focus();\n          this.addCalendarSubscription(calendar);\n        }));\n      });\n    }\n    /**\n     *  Focuses the calendar (if available).\n     */\n    focus() {\n      if (this.calendar) {\n        this.calendar.focus();\n      }\n    }\n    /**\n     * Checks if a focused element ids placed inside the popup.\n     *\n     * @return boolean;\n     */\n    hasActiveContent() {\n      if (!isDocumentAvailable() || !this.popupRef) {\n        return false;\n      }\n      return this.popupRef.popupElement.contains(document.activeElement);\n    }\n    /**\n     * Toggles the visibility of the popup or actionSheet.\n     * If you use the `toggle` method to show or hide the popup or actionSheet,\n     * the `open` and `close` events do not fire.\n     *\n     * @param show The state of the popup.\n     */\n    toggle(show) {\n      this.resolvedPromise.then(() => {\n        this.toggleDateRange(show === undefined ? !this.show : show);\n      });\n    }\n    /**\n     * @hidden\n     *\n     * Closes the popup and triggers the `cancel` event.\n     */\n    cancelPopup() {\n      this.show = false;\n      this.cancel.emit();\n    }\n    /**\n     * @hidden\n     */\n    handleAccept() {\n      this.dateRangeService.setRange(this._rangeSelection);\n      this.show = false;\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n      const currentWindowSize = this.adaptiveService.size;\n      if (!this.show || this.windowSize === currentWindowSize) {\n        return;\n      }\n      if (this.actionSheet.expanded) {\n        this.toggleActionSheet(false);\n      } else {\n        this.togglePopup(false);\n      }\n      this.windowSize = currentWindowSize;\n    }\n    /**\n     * @hidden\n     */\n    closePopup(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.toggle(false);\n      if (this.dateRangeService.activeRangeEnd === 'start' || !this.dateRangeService.activeRangeEnd) {\n        this.dateRangeService.startInput$.value.focus();\n      } else {\n        this.dateRangeService.endInput$.value.focus();\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleTab(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (this.dateRangeService.activeRangeEnd === 'start' || !this.dateRangeService.activeRangeEnd) {\n        this.dateRangeService.setActiveRangeEnd('end');\n      } else {\n        this.dateRangeService.endInput$.value.focus();\n      }\n    }\n    /**\n     * @hidden\n     */\n    handleShiftTab(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (this.dateRangeService.activeRangeEnd === 'end') {\n        this.dateRangeService.setActiveRangeEnd('start');\n      } else {\n        this.dateRangeService.startInput$.value.focus();\n      }\n    }\n    handleWindowBlur() {\n      if (!this.show || this.actionSheet.expanded) {\n        return;\n      }\n      if (hasObservers(this.close)) {\n        this.zone.run(() => this.show = false);\n      } else {\n        this.show = false;\n      }\n    }\n    handleMouseLeave() {\n      this.dateRangeService.setRange(this.dateRangeService.selectionRange);\n    }\n    handleKeydown(event) {\n      const {\n        altKey,\n        keyCode\n      } = event;\n      if (keyCode === Keys$1.Escape || altKey && keyCode === Keys$1.ArrowUp) {\n        this.zone.run(() => this.cancelPopup());\n      }\n    }\n    subscribeFocusBlur(calendar) {\n      if (this.blurSubscription) {\n        this.blurSubscription.unsubscribe();\n        this.focusSubscription.unsubscribe();\n      }\n      if (!calendar) {\n        return;\n      }\n      const calendarElement = calendar.element.nativeElement.querySelector('.k-calendar-view');\n      this.blurSubscription = fromEvent(calendarElement, 'blur').subscribe(() => this.onBlur.emit());\n      this.focusSubscription = fromEvent(calendarElement, 'focus').subscribe(() => this.onFocus.emit());\n    }\n    addPopupSubscriptions(...subscriptions) {\n      if (!isPresent(this.popupSubscriptions)) {\n        this.popupSubscriptions = new Subscription();\n      }\n      subscriptions.map(s => this.popupSubscriptions.add(s));\n    }\n    get _appendTo() {\n      const appendTo = this.appendTo;\n      if (!appendTo || appendTo === 'root') {\n        return undefined;\n      }\n      return appendTo === 'component' ? this.container : appendTo;\n    }\n    togglePopup(show) {\n      this._show = show;\n      if (this.popupRef) {\n        this.destroyPopup();\n      }\n      if (this._show) {\n        const direction = this.rtl ? 'right' : 'left';\n        this.popupRef = this.popupService.open({\n          anchor: this.anchor,\n          anchorAlign: this.anchorAlign || {\n            vertical: 'bottom',\n            horizontal: direction\n          },\n          animate: this.animate,\n          appendTo: this._appendTo,\n          collision: this.collision,\n          content: (this.contentTemplate || {}).templateRef || this.defaultTemplate,\n          margin: this.margin,\n          popupClass: 'k-calendar-container k-daterangepicker-popup',\n          popupAlign: this.popupAlign || {\n            vertical: 'top',\n            horizontal: direction\n          },\n          positionMode: 'absolute'\n        });\n        const {\n          popupElement,\n          popupAnchorViewportLeave\n        } = this.popupRef;\n        this.renderer.setAttribute(popupElement.querySelector('.k-popup'), 'id', this.popupUID);\n        this.addPopupSubscriptions(this.zone.runOutsideAngular(() => fromEvent(popupElement, 'keydown').subscribe(this.handleKeydown.bind(this))), fromEvent(popupElement, 'mouseleave').subscribe(this.handleMouseLeave.bind(this)), popupAnchorViewportLeave.subscribe(() => this.cancelPopup()));\n      }\n    }\n    destroyPopup() {\n      if (isPresent(this.popupRef)) {\n        this.popupRef.close();\n        this.popupRef = null;\n      }\n      if (isPresent(this.popupSubscriptions)) {\n        this.popupSubscriptions.unsubscribe();\n      }\n    }\n    toggleDateRange(show) {\n      this.windowSize = this.adaptiveService.size;\n      if (this.isAdaptive) {\n        this.toggleActionSheet(show);\n      } else {\n        this.togglePopup(show);\n      }\n    }\n    toggleActionSheet(show) {\n      if (show === this._show) {\n        return;\n      }\n      if (show && !this.actionSheet.expanded) {\n        this.actionSheet.toggle();\n        this.updateActionSheetAdaptiveAppearance();\n        this.renderer.setAttribute(this.actionSheet.element.nativeElement, 'id', this.popupUID);\n      } else if (!show && this.actionSheet.expanded) {\n        this.actionSheet.toggle();\n      }\n      this._show = show;\n    }\n    updateActionSheetAdaptiveAppearance() {\n      let element;\n      let animationContainer;\n      if (this.actionSheet) {\n        element = this.actionSheet['element'].nativeElement.querySelector('.k-actionsheet');\n        animationContainer = this.actionSheet['element'].nativeElement.querySelector('.k-child-animation-container');\n        if (this.windowSize === 'medium') {\n          this.renderer.removeClass(element, 'k-actionsheet-fullscreen');\n          this.renderer.removeStyle(animationContainer, 'height');\n        } else if (this.windowSize === 'small') {\n          this.renderer.addClass(element, 'k-actionsheet-fullscreen');\n          this.renderer.setStyle(animationContainer, 'height', '100%');\n        }\n        this.renderer.addClass(element, 'k-adaptive-actionsheet');\n        this.renderer.addClass(element, 'k-actionsheet-bottom');\n        this.renderer.setStyle(animationContainer, 'bottom', '0px');\n      }\n    }\n  }\n  _class74 = DateRangePopupComponent;\n  _defineProperty(DateRangePopupComponent, \"\\u0275fac\", function _class74_Factory(t) {\n    return new (t || _class74)(i0.ɵɵdirectiveInject(i1$2.PopupService), i0.ɵɵdirectiveInject(DateRangeService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1$1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(RTL, 8), i0.ɵɵdirectiveInject(i6.AdaptiveService));\n  });\n  _defineProperty(DateRangePopupComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class74,\n    selectors: [[\"kendo-daterange-popup\"]],\n    contentQueries: function _class74_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, DateRangePopupTemplateDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, MultiViewCalendarComponent, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentCalendar = _t);\n      }\n    },\n    viewQuery: function _class74_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c36, 5, ViewContainerRef);\n        i0.ɵɵviewQuery(_c39, 5);\n        i0.ɵɵviewQuery(_c150, 5);\n        i0.ɵɵviewQuery(DateRangeSelectionDirective, 5);\n        i0.ɵɵviewQuery(MultiViewCalendarComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.actionSheet = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dateRangeSelectionDirective = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewCalendar = _t);\n      }\n    },\n    inputs: {\n      showCalendarHeader: \"showCalendarHeader\",\n      focusedDate: \"focusedDate\",\n      disabledDates: \"disabledDates\",\n      activeView: \"activeView\",\n      bottomView: \"bottomView\",\n      topView: \"topView\",\n      min: \"min\",\n      max: \"max\",\n      allowReverse: \"allowReverse\",\n      animateNavigation: \"animateNavigation\",\n      disabled: \"disabled\",\n      views: \"views\",\n      weekNumber: \"weekNumber\",\n      animate: \"animate\",\n      anchor: \"anchor\",\n      anchorAlign: \"anchorAlign\",\n      showViewHeader: \"showViewHeader\",\n      showOtherMonthDays: \"showOtherMonthDays\",\n      appendTo: \"appendTo\",\n      collision: \"collision\",\n      popupAlign: \"popupAlign\",\n      margin: \"margin\",\n      adaptiveMode: \"adaptiveMode\",\n      title: \"title\",\n      subtitle: \"subtitle\",\n      size: \"size\"\n    },\n    outputs: {\n      open: \"open\",\n      close: \"close\",\n      onBlur: \"blur\",\n      onFocus: \"focus\",\n      cancel: \"cancel\"\n    },\n    exportAs: [\"kendo-daterange-popup\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([LocalizationService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.daterangepopup'\n    }]), i0.ɵɵStandaloneFeature],\n    decls: 8,\n    vars: 0,\n    consts: function () {\n      let i18n_151;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Accept button text in the timepicker component\n         * @meaning kendo.daterangepopup.accept\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_152 = goog.getMsg(\"Set\");\n        i18n_151 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_152;\n      } else {\n        i18n_151 = $localize`:kendo.daterangepopup.accept|The Accept button text in the timepicker component:Set`;\n      }\n      let i18n_153;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Accept button in the timepicker component\n         * @meaning kendo.daterangepopup.acceptLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_154 = goog.getMsg(\"Set time\");\n        i18n_153 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_154;\n      } else {\n        i18n_153 = $localize`:kendo.daterangepopup.acceptLabel|The label for the Accept button in the timepicker component:Set time`;\n      }\n      let i18n_155;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Cancel button text in the timepicker component\n         * @meaning kendo.daterangepopup.cancel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_156 = goog.getMsg(\"Cancel\");\n        i18n_155 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_156;\n      } else {\n        i18n_155 = $localize`:kendo.daterangepopup.cancel|The Cancel button text in the timepicker component:Cancel`;\n      }\n      let i18n_157;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Cancel button in the timepicker component\n         * @meaning kendo.daterangepopup.cancelLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_158 = goog.getMsg(\"Cancel changes\");\n        i18n_157 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DATEINPUTS_FESM2022_PROGRESS_KENDO_ANGULAR_DATEINPUTS_MJS_158;\n      } else {\n        i18n_157 = $localize`:kendo.daterangepopup.cancelLabel|The label for the Cancel button in the timepicker component:Cancel changes`;\n      }\n      return [[\"kendoDateRangePopupLocalizedMessages\", \"\", \"accept\", i18n_151, \"acceptLabel\", i18n_153, \"cancel\", i18n_155, \"cancelLabel\", i18n_157], [\"container\", \"\"], [\"defaultTemplate\", \"\"], [3, \"overlayClick\", \"collapse\"], [\"actionSheet\", \"\"], [\"kendoActionSheetTemplate\", \"\"], [\"orientation\", \"horizontal\", \"selection\", \"range\", 3, \"activeView\", \"bottomView\", \"animateNavigation\", \"disabled\", \"views\", \"weekNumber\", \"topView\", \"disabledDates\", \"min\", \"max\", \"showCalendarHeader\", \"focusedDate\", \"allowReverse\", \"showViewHeader\", \"showOtherMonthDays\", \"size\", \"value\", \"onClosePopup\", \"onTabPress\", \"onShiftTabPress\", \"rangeSelectionChange\"], [3, \"resize\", 4, \"ngIf\"], [1, \"k-actionsheet-titlebar\"], [1, \"k-actionsheet-titlebar-group\", \"k-hbox\"], [1, \"k-actionsheet-title\"], [1, \"k-text-center\"], [1, \"k-actionsheet-subtitle\", \"k-text-center\"], [1, \"k-actionsheet-actions\"], [\"kendoButton\", \"\", \"type\", \"button\", \"icon\", \"x\", \"fillMode\", \"flat\", \"aria-hidden\", \"true\", \"size\", \"large\", \"innerCssClass\", \"k-button-icon\", 3, \"svgIcon\", \"tabIndex\", \"click\"], [1, \"k-actionsheet-content\", \"!k-overflow-hidden\"], [1, \"k-scrollable-wrap\"], [\"size\", \"large\", \"orientation\", \"vertical\", \"selection\", \"range\", 3, \"animateNavigation\", \"disabled\", \"views\", \"weekNumber\", \"disabledDates\", \"activeView\", \"bottomView\", \"topView\", \"min\", \"max\", \"showCalendarHeader\", \"focusedDate\", \"allowReverse\", \"showViewHeader\", \"showOtherMonthDays\", \"value\", \"rangeSelectionChange\"], [1, \"k-actions\", \"k-actions-stretched\", \"k-actions-horizontal\", \"k-actionsheet-footer\"], [\"kendoButton\", \"\", \"type\", \"button\", \"size\", \"large\", 3, \"click\"], [\"kendoButton\", \"\", \"type\", \"button\", \"size\", \"large\", \"themeColor\", \"primary\", 3, \"click\"], [3, \"resize\"]];\n    },\n    template: function _class74_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0)(1, null, 1);\n        i0.ɵɵtemplate(3, _class74_ng_template_3_Template, 1, 17, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(5, \"kendo-actionsheet\", 3, 4);\n        i0.ɵɵlistener(\"overlayClick\", function _class74_Template_kendo_actionsheet_overlayClick_5_listener() {\n          return ctx.show = false;\n        })(\"collapse\", function _class74_Template_kendo_actionsheet_collapse_5_listener() {\n          return ctx.onBlur.emit();\n        });\n        i0.ɵɵtemplate(7, _class74_ng_template_7_Template, 18, 29, \"ng-template\", 5);\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [DateRangePopupLocalizedMessagesDirective, MultiViewCalendarComponent, ActionSheetComponent, ActionSheetTemplateDirective, NgIf, ResizeSensorComponent, ButtonComponent],\n    encapsulation: 2\n  }));\n  return DateRangePopupComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Represents the Kendo UI DateRange component for Angular.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-daterange>\n *      <kendo-dateinput kendoDateRangeStartInput [(value)]=\"dateRange.start\"></kendo-dateinput>\n *      <kendo-dateinput kendoDateRangeEndInput [(value)]=\"dateRange.end\"></kendo-dateinput>\n *  </kendo-daterange>\n * `\n * })\n * export class AppComponent {\n *   public dateRange: any = { start: null, end: null };\n * }\n * ```\n */\nlet DateRangeComponent = /*#__PURE__*/(() => {\n  var _class75;\n  class DateRangeComponent {\n    /**\n    * @hidden\n    */\n    keydown(event) {\n      const shouldOpenPopup = event.keyCode === Keys$1.ArrowDown && event.altKey;\n      if (shouldOpenPopup) {\n        this.dateRangeService.activatePopup();\n      }\n      const shouldClosePopup = event.keyCode === Keys$1.ArrowUp && event.altKey || event.keyCode === Keys$1.Escape;\n      if (shouldClosePopup) {\n        this.dateRangeService.deactivatePopup();\n      }\n    }\n    get hasContentPopup() {\n      return this.contentPopup.length > 0;\n    }\n    constructor(dateRangeService) {\n      _defineProperty(this, \"dateRangeService\", void 0);\n      /**\n       * @hidden\n       *\n       * TODO: Make visible when the Infinite Calendar is fixed to set properly the size option.\n       * Sets the size of the component.\n       *\n       * The possible values are:\n       * * `small`\n       * * `medium` (Default)\n       * * `large`\n       * * `none`\n       *\n       */\n      _defineProperty(this, \"size\", void 0);\n      _defineProperty(this, \"wrapperClass\", true);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"showDefault\", false);\n      _defineProperty(this, \"contentPopup\", void 0);\n      _defineProperty(this, \"subscription\", void 0);\n      this.dateRangeService = dateRangeService;\n      validatePackage(packageMetadata);\n    }\n    ngAfterContentInit() {\n      this.showDefault = !this.hasContentPopup;\n      this.subscription = this.contentPopup.changes.subscribe(() => {\n        this.showDefault = !this.hasContentPopup;\n      });\n    }\n    ngOnDestroy() {\n      this.subscription?.unsubscribe();\n    }\n  }\n  _class75 = DateRangeComponent;\n  _defineProperty(DateRangeComponent, \"\\u0275fac\", function _class75_Factory(t) {\n    return new (t || _class75)(i0.ɵɵdirectiveInject(DateRangeService));\n  });\n  _defineProperty(DateRangeComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class75,\n    selectors: [[\"kendo-daterange\"]],\n    contentQueries: function _class75_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, DateRangePopupComponent, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentPopup = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function _class75_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function _class75_keydown_HostBindingHandler($event) {\n          return ctx.keydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-daterangepicker\", ctx.wrapperClass);\n      }\n    },\n    inputs: {\n      size: \"size\"\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([DateRangeService]), i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c16,\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"size\", 4, \"ngIf\"], [3, \"size\"]],\n    template: function _class75_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵtemplate(1, _class75_kendo_daterange_popup_1_Template, 1, 1, \"kendo-daterange-popup\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showDefault);\n      }\n    },\n    dependencies: [NgIf, DateRangePopupComponent],\n    encapsulation: 2\n  }));\n  return DateRangeComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet DateRangeInput = /*#__PURE__*/(() => {\n  var _class76;\n  class DateRangeInput {\n    get isActiveEnd() {\n      return this.dateRangeService.activeRangeEnd === this.activeRangeEnd;\n    }\n    get popupCalendarActivated() {\n      const popup = this.dateRangeService.dateRangePopup$.value;\n      return isPresent(popup) && isPresent(popup.calendar);\n    }\n    constructor(activeRangeEnd, dateRangeService, input, element, renderer, zone) {\n      _defineProperty(this, \"activeRangeEnd\", void 0);\n      _defineProperty(this, \"dateRangeService\", void 0);\n      _defineProperty(this, \"input\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"zone\", void 0);\n      _defineProperty(this, \"navigateCalendarOnFocus\", false);\n      _defineProperty(this, \"popupSubscriptions\", new Subscription());\n      _defineProperty(this, \"subscriptions\", new Subscription());\n      this.activeRangeEnd = activeRangeEnd;\n      this.dateRangeService = dateRangeService;\n      this.input = input;\n      this.element = element;\n      this.renderer = renderer;\n      this.zone = zone;\n    }\n    init() {\n      this.input.role = 'combobox';\n      this.input.hasPopup = 'grid';\n      if (this.input.value) {\n        this.dateRangeService.setRange(this.getRange(this.input.value));\n      }\n      [this.input.onBlur.subscribe(() => this.deactivate()), this.input.valueUpdate.subscribe(value => this.updateRange(value, 'change')), this.dateRangeService.activeRangeEnd$.subscribe(() => {\n        if (this.navigateCalendarOnFocus) {\n          this.focusActiveDate();\n        }\n        this.toggleActiveClass(this.isActiveEnd);\n      }), this.dateRangeService.dateRangePopup$.subscribe(popup => this.initPopup(popup)), this.dateRangeService.range$.subscribe(range => this.updateInputValue(range)), fromEvent(this.element.nativeElement, 'click').subscribe(() => this.activate()), fromEvent(this.element.nativeElement, 'keydown').subscribe(event => this.togglePopup(event || {}))].map(s => this.subscriptions.add(s));\n    }\n    destroy() {\n      this.subscriptions.unsubscribe();\n      this.unsubscribePopup();\n    }\n    initPopup(popup) {\n      if (!popup) {\n        this.unsubscribePopup();\n        return;\n      }\n      if (!popup.anchor) {\n        popup.anchor = this.element.nativeElement;\n      }\n      [popup.cancel.subscribe(() => this.isActiveEnd && this.input.focus()), popup.onFocus.subscribe(() => this.toggleActiveClass(this.isActiveEnd)), popup.onBlur.subscribe(() => this.deactivate())].map(s => this.popupSubscriptions.add(s));\n    }\n    unsubscribePopup() {\n      this.popupSubscriptions.unsubscribe();\n      this.popupSubscriptions = new Subscription();\n    }\n    activate() {\n      this.dateRangeService.setActiveRangeEnd(this.activeRangeEnd);\n      this.dateRangeService.activatePopup();\n    }\n    deactivate() {\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.updateRange(this.input.value, 'blur');\n          if (this.dateRangeService.hasActiveComponent()) {\n            return;\n          }\n          this.toggleActiveClass(false);\n          this.zone.run(() => this.dateRangeService.deactivatePopup());\n        });\n      });\n    }\n    updateRange(value, correctOn) {\n      const range = this.getRange(value, correctOn);\n      if (range) {\n        this.focusActiveDate();\n        this.dateRangeService.setRange(range);\n      }\n    }\n    togglePopup({\n      altKey,\n      keyCode\n    }) {\n      if (keyCode === Keys$1.Escape) {\n        this.dateRangeService.cancelPopup();\n      } else if (altKey && keyCode === Keys$1.ArrowDown) {\n        this.dateRangeService.activatePopup();\n      }\n    }\n    focusActiveDate() {\n      if (this.input.value && this.isActiveEnd) {\n        this.dateRangeService.setFocusedDate(cloneDate(this.input.value));\n      }\n    }\n    toggleActiveClass(show) {\n      const action = show ? 'addClass' : 'removeClass';\n      const nativeElement = this.element.nativeElement;\n      if (nativeElement && nativeElement.querySelector) {\n        this.renderer[action](nativeElement, 'k-focus');\n      }\n    }\n  }\n  _class76 = DateRangeInput;\n  _defineProperty(DateRangeInput, \"\\u0275fac\", function _class76_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  });\n  _defineProperty(DateRangeInput, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class76\n  }));\n  return DateRangeInput;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A directive which manages the end range selection.\n *\n * > You can use the DateRangeEndInputDirective only with a DateInput component.\n */\nlet DateRangeEndInputDirective = /*#__PURE__*/(() => {\n  var _class77;\n  class DateRangeEndInputDirective extends DateRangeInput {\n    constructor(rangeService, dateInput, element, renderer, zone) {\n      super('end', rangeService, dateInput, element, renderer, zone);\n      _defineProperty(this, \"rangeService\", void 0);\n      _defineProperty(this, \"dateInput\", void 0);\n      /**\n       * Specifies the auto-correction behavior. If the start date is greater than the end date, the\n       * directive fixes the date range to a single date either on input change or on blur\n       * ([see example](slug:autocorrect_daterange#toc-input-directives)).\n       *\n       * By default, the component does not perform any auto-correction.\n       */\n      _defineProperty(this, \"autoCorrectOn\", void 0);\n      /**\n       * Specifies the navigation behavior of the calendar when the active end is changed on input focus. When enabled,\n       * the calendar navigates to the value of the focused input. Otherwise, the calendar displays the last picked date.\n       *\n       * By default, the automatic navigation behavior on input focus is disabled.\n       *\n       * @example\n       * ```ts\n       * _@Component({\n       * selector: 'my-app',\n       * template: `\n       *  <h5>Toggle input focus to see the calendar navigating between range ends.</h5>\n       *  <kendo-daterange>\n       *      <kendo-dateinput kendoDateRangeStartInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"start\"></kendo-dateinput>\n       *      <kendo-dateinput kendoDateRangeEndInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"end\"></kendo-dateinput>\n       *  </kendo-daterange>\n       * `\n       * })\n       * export class AppComponent {\n       *   public start: Date = new Date(2018, 3, 10);\n       *   public end: Date = new Date(2018, 10, 20);\n       * }\n       * ```\n       */\n      _defineProperty(this, \"navigateCalendarOnFocus\", false);\n      this.rangeService = rangeService;\n      this.dateInput = dateInput;\n    }\n    ngOnInit() {\n      this.rangeService.registerEndInput(this.dateInput);\n      super.init();\n      this.dateInput.pickerType = 'daterangeend';\n    }\n    ngAfterViewInit() {\n      this.renderer.setAttribute(this.dateInput.inputElement, attributeNames.ariaExpanded, 'false');\n    }\n    ngOnDestroy() {\n      super.destroy();\n    }\n    getRange(value, correctOn) {\n      const {\n        min,\n        max\n      } = this.dateInput;\n      if (!isInRange(value, min, max)) {\n        return null;\n      }\n      const {\n        start\n      } = this.rangeService.selectionRange || EMPTY_SELECTIONRANGE;\n      const shouldClamp = this.autoCorrectOn === correctOn && isPresent(value) && value < start;\n      return shouldClamp ? clampRange(value) : {\n        start,\n        end: cloneDate(value)\n      };\n    }\n    updateInputValue(range) {\n      const {\n        end\n      } = range || EMPTY_SELECTIONRANGE;\n      const {\n        min,\n        max\n      } = this.dateInput;\n      if (isEqual(this.dateInput.value, end) || !isInRange(end, min, max)) {\n        return;\n      }\n      this.dateInput.writeValue(cloneDate(end));\n      this.dateInput.notify();\n    }\n  }\n  _class77 = DateRangeEndInputDirective;\n  _defineProperty(DateRangeEndInputDirective, \"\\u0275fac\", function _class77_Factory(t) {\n    return new (t || _class77)(i0.ɵɵdirectiveInject(DateRangeService), i0.ɵɵdirectiveInject(DateInputComponent), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone));\n  });\n  _defineProperty(DateRangeEndInputDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class77,\n    selectors: [[\"\", \"kendoDateRangeEndInput\", \"\"]],\n    inputs: {\n      autoCorrectOn: \"autoCorrectOn\",\n      navigateCalendarOnFocus: \"navigateCalendarOnFocus\"\n    },\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  }));\n  return DateRangeEndInputDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A directive which manages the start selection range.\n *\n * > You can use the DateRangeStartInputDirective only with a DateInput component.\n */\nlet DateRangeStartInputDirective = /*#__PURE__*/(() => {\n  var _class78;\n  class DateRangeStartInputDirective extends DateRangeInput {\n    constructor(rangeService, dateInput, element, renderer, zone) {\n      super('start', rangeService, dateInput, element, renderer, zone);\n      _defineProperty(this, \"rangeService\", void 0);\n      _defineProperty(this, \"dateInput\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      /**\n       * Specifies the auto-correction behavior. If the start date is greater than the end date,\n       * the directive fixes the date range to a single date either on input change or on blur\n       * ([see example](slug:autocorrect_daterange#toc-input-directives)).\n       *\n       * By default, the component does not perform any auto-correction.\n       */\n      _defineProperty(this, \"autoCorrectOn\", void 0);\n      /**\n       * Specifies the navigation behavior of the calendar when the active end is changed on input focus.\n       * When enabled, the calendar navigates to the value of the focused input. Otherwise, the calendar\n       * displays the last picked date.\n       *\n       * By default, the automatic navigation behavior on input focus is disabled.\n       *\n       * @example\n       * ```ts\n       * _@Component({\n       * selector: 'my-app',\n       * template: `\n       *  <h5>Toggle input focus to see the calendar navigating between range ends.</h5>\n       *  <kendo-daterange>\n       *      <kendo-dateinput kendoDateRangeStartInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"start\"></kendo-dateinput>\n       *      <kendo-dateinput kendoDateRangeEndInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"end\"></kendo-dateinput>\n       *  </kendo-daterange>\n       * `\n       * })\n       * export class AppComponent {\n       *   public start: Date = new Date(2018, 3, 10);\n       *   public end: Date = new Date(2018, 10, 20);\n       * }\n       * ```\n       */\n      _defineProperty(this, \"navigateCalendarOnFocus\", false);\n      this.rangeService = rangeService;\n      this.dateInput = dateInput;\n      this.renderer = renderer;\n    }\n    ngOnInit() {\n      this.rangeService.registerStartInput(this.dateInput);\n      super.init();\n      this.dateInput.pickerType = 'daterangestart';\n    }\n    ngAfterViewInit() {\n      this.renderer.setAttribute(this.dateInput.inputElement, attributeNames.ariaExpanded, 'false');\n    }\n    ngOnDestroy() {\n      super.destroy();\n    }\n    getRange(value, correctOn) {\n      const {\n        min,\n        max\n      } = this.dateInput;\n      if (!isInRange(value, min, max)) {\n        return null;\n      }\n      const {\n        end\n      } = this.rangeService.selectionRange || EMPTY_SELECTIONRANGE;\n      const shouldClamp = this.autoCorrectOn === correctOn && end && value > end;\n      return shouldClamp ? clampRange(value) : {\n        start: cloneDate(value),\n        end\n      };\n    }\n    updateInputValue(range) {\n      const {\n        start\n      } = range || EMPTY_SELECTIONRANGE;\n      const {\n        min,\n        max\n      } = this.dateInput;\n      if (isEqual(this.dateInput.value, start) || !isInRange(start, min, max)) {\n        return;\n      }\n      this.dateInput.writeValue(cloneDate(start));\n      this.dateInput.notify();\n    }\n  }\n  _class78 = DateRangeStartInputDirective;\n  _defineProperty(DateRangeStartInputDirective, \"\\u0275fac\", function _class78_Factory(t) {\n    return new (t || _class78)(i0.ɵɵdirectiveInject(DateRangeService), i0.ɵɵdirectiveInject(DateInputComponent), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone));\n  });\n  _defineProperty(DateRangeStartInputDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class78,\n    selectors: [[\"\", \"kendoDateRangeStartInput\", \"\"]],\n    inputs: {\n      autoCorrectOn: \"autoCorrectOn\",\n      navigateCalendarOnFocus: \"navigateCalendarOnFocus\"\n    },\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  }));\n  return DateRangeStartInputDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\nlet DatePickerCustomMessagesComponent = /*#__PURE__*/(() => {\n  var _class79;\n  class DatePickerCustomMessagesComponent extends DatePickerMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n    get override() {\n      return true;\n    }\n  }\n  _class79 = DatePickerCustomMessagesComponent;\n  _defineProperty(DatePickerCustomMessagesComponent, \"\\u0275fac\", function _class79_Factory(t) {\n    return new (t || _class79)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(DatePickerCustomMessagesComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class79,\n    selectors: [[\"kendo-datepicker-messages\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: DatePickerMessages,\n      useExisting: forwardRef(() => _class79)\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function _class79_Template(rf, ctx) {},\n    encapsulation: 2\n  }));\n  return DatePickerCustomMessagesComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\nlet DateRangePopupCustomMessagesComponent = /*#__PURE__*/(() => {\n  var _class80;\n  class DateRangePopupCustomMessagesComponent extends DateRangePopupMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n    get override() {\n      return true;\n    }\n  }\n  _class80 = DateRangePopupCustomMessagesComponent;\n  _defineProperty(DateRangePopupCustomMessagesComponent, \"\\u0275fac\", function _class80_Factory(t) {\n    return new (t || _class80)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(DateRangePopupCustomMessagesComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class80,\n    selectors: [[\"kendo-daterange-popup-messages\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: DateRangePopupMessages,\n      useExisting: forwardRef(() => _class80)\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function _class80_Template(rf, ctx) {},\n    encapsulation: 2\n  }));\n  return DateRangePopupCustomMessagesComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\nlet DateTimePickerCustomMessagesComponent = /*#__PURE__*/(() => {\n  var _class81;\n  class DateTimePickerCustomMessagesComponent extends DateTimePickerMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n    get override() {\n      return true;\n    }\n  }\n  _class81 = DateTimePickerCustomMessagesComponent;\n  _defineProperty(DateTimePickerCustomMessagesComponent, \"\\u0275fac\", function _class81_Factory(t) {\n    return new (t || _class81)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(DateTimePickerCustomMessagesComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class81,\n    selectors: [[\"kendo-datetimepicker-messages\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: DateTimePickerMessages,\n      useExisting: forwardRef(() => _class81)\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function _class81_Template(rf, ctx) {},\n    encapsulation: 2\n  }));\n  return DateTimePickerCustomMessagesComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\nlet TimePickerCustomMessagesComponent = /*#__PURE__*/(() => {\n  var _class82;\n  class TimePickerCustomMessagesComponent extends TimePickerMessages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n    get override() {\n      return true;\n    }\n  }\n  _class82 = TimePickerCustomMessagesComponent;\n  _defineProperty(TimePickerCustomMessagesComponent, \"\\u0275fac\", function _class82_Factory(t) {\n    return new (t || _class82)(i0.ɵɵdirectiveInject(i1$1.LocalizationService));\n  });\n  _defineProperty(TimePickerCustomMessagesComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class82,\n    selectors: [[\"kendo-timepicker-messages\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TimePickerMessages,\n      useExisting: forwardRef(() => _class82)\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function _class82_Template(rf, ctx) {},\n    encapsulation: 2\n  }));\n  return TimePickerCustomMessagesComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n* Utility array that contains all `Calendar` related components and directives\n*/\nconst KENDO_CALENDAR = [CalendarCustomMessagesComponent, CalendarComponent, CellTemplateDirective, CenturyCellTemplateDirective, DecadeCellTemplateDirective, FooterTemplateDirective, HeaderTemplateDirective, HeaderTitleTemplateDirective, MonthCellTemplateDirective, NavigationItemTemplateDirective, WeekNumberCellTemplateDirective, YearCellTemplateDirective, NavigationItemTemplateDirective];\n/**\n* Utility array that contains all `MultiViewCalendar` related components and directives\n*/\nconst KENDO_MULTIVIEWCALENDAR = [MultiViewCalendarCustomMessagesComponent, MultiViewCalendarComponent, CellTemplateDirective, CenturyCellTemplateDirective, DecadeCellTemplateDirective, FooterTemplateDirective, HeaderTemplateDirective, HeaderTitleTemplateDirective, MonthCellTemplateDirective, NavigationItemTemplateDirective, WeekNumberCellTemplateDirective, YearCellTemplateDirective];\n/**\n* Utility array that contains all `DateInput` related components and directives\n*/\nconst KENDO_DATEINPUT = [DateInputCustomMessagesComponent, DateInputComponent];\n/**\n* Utility array that contains all `DatePicker` related components and directives\n*/\nconst KENDO_DATEPICKER = [DatePickerCustomMessagesComponent, DatePickerComponent, CellTemplateDirective, CenturyCellTemplateDirective, DecadeCellTemplateDirective, FooterTemplateDirective, HeaderTemplateDirective, HeaderTitleTemplateDirective, MonthCellTemplateDirective, NavigationItemTemplateDirective, WeekNumberCellTemplateDirective, YearCellTemplateDirective, NavigationItemTemplateDirective, ToggleButtonTabStopDirective];\n/**\n* Utility array that contains all `DateRange` related components and directives\n*/\nconst KENDO_DATERANGE = [DateRangePopupCustomMessagesComponent, ...KENDO_DATEINPUT, DateRangeEndInputDirective, DateRangePopupTemplateDirective, DateRangeComponent, DateRangePopupComponent, DateRangeSelectionDirective, DateRangeStartInputDirective];\n/**\n* Utility array that contains all `DateTimePicker` related components and directives\n*/\nconst KENDO_DATETIMEPICKER = [DateTimePickerCustomMessagesComponent, DateTimePickerComponent, CellTemplateDirective, CenturyCellTemplateDirective, DecadeCellTemplateDirective, FooterTemplateDirective, HeaderTemplateDirective, HeaderTitleTemplateDirective, MonthCellTemplateDirective, NavigationItemTemplateDirective, WeekNumberCellTemplateDirective, YearCellTemplateDirective, ToggleButtonTabStopDirective];\n/**\n* Utility array that contains all `TimePicker` related components and directives\n*/\nconst KENDO_TIMEPICKER = [TimePickerCustomMessagesComponent, TimePickerComponent, ToggleButtonTabStopDirective];\n/**\n* Utility array that contains all `@progress/kendo-angular-dateinputs` related components and directives\n*/\nconst KENDO_DATEINPUTS = [...KENDO_CALENDAR, ...KENDO_MULTIVIEWCALENDAR, ...KENDO_DATEINPUT, ...KENDO_DATEPICKER, ...KENDO_DATERANGE, ...KENDO_DATETIMEPICKER, ...KENDO_TIMEPICKER];\n\n// IMPORTANT: NgModule export kept for backwards compatibility\n/**\n * The exported package module.\n *\n * The package exports:\n * - `CellTemplateDirective`&mdash;The month cell template directive.\n * - `MonthCellTemplateDirective`&mdash;The month cell template directive.\n * - `YearCellTemplateDirective`&mdash;The year cell template directive.\n * - `DecadeCellTemplateDirective`&mdash;The decade cell template directive.\n * - `CenturyCellTemplateDirective`&mdash;The century cell template directive.\n * - `WeekNumberCellTemplateDirective`&mdash;The month week number cell template directive.\n * - `HeaderTitleTemplateDirective`&mdash;The header title template directive.\n * - `NavigationItemTemplateDirective`&mdash;The navigation item template directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Calendar module\n * import { CalendarModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, CalendarModule], // import Calendar module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nlet CalendarModule = /*#__PURE__*/(() => {\n  var _class83;\n  class CalendarModule {}\n  _class83 = CalendarModule;\n  _defineProperty(CalendarModule, \"\\u0275fac\", function _class83_Factory(t) {\n    return new (t || _class83)();\n  });\n  _defineProperty(CalendarModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _class83\n  }));\n  _defineProperty(CalendarModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [IconsService, ResizeBatchService, CalendarDOMService, CenturyViewService, DecadeViewService, MonthViewService, YearViewService, PopupService, NavigationService],\n    imports: [CalendarComponent]\n  }));\n  return CalendarModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// IMPORTANT: NgModule export kept for backwards compatibility\n/**\n * The exported package module.\n *\n * The package exports:\n * - `CalendarModule`&mdash;The calendar module.\n * - `MultiViewCalendarModule`&mdash;The multi-view calendar module.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Calendars module\n * import { CalendarsModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, CalendarsModule], // import the Calendars module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nlet CalendarsModule = /*#__PURE__*/(() => {\n  var _class84;\n  class CalendarsModule {}\n  _class84 = CalendarsModule;\n  _defineProperty(CalendarsModule, \"\\u0275fac\", function _class84_Factory(t) {\n    return new (t || _class84)();\n  });\n  _defineProperty(CalendarsModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _class84\n  }));\n  _defineProperty(CalendarsModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [IconsService, ResizeBatchService, CalendarDOMService, CenturyViewService, DecadeViewService, MonthViewService, YearViewService, PopupService, NavigationService],\n    imports: [CalendarComponent, MultiViewCalendarComponent]\n  }));\n  return CalendarsModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// IMPORTANT: NgModule export kept for backwards compatibility\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the DateInput component.\n */\nlet DateInputModule = /*#__PURE__*/(() => {\n  var _class85;\n  class DateInputModule {}\n  _class85 = DateInputModule;\n  _defineProperty(DateInputModule, \"\\u0275fac\", function _class85_Factory(t) {\n    return new (t || _class85)();\n  });\n  _defineProperty(DateInputModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _class85\n  }));\n  _defineProperty(DateInputModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [IconsService],\n    imports: [DateInputComponent]\n  }));\n  return DateInputModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// IMPORTANT: NgModule export kept for backwards compatibility\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the DatePicker component.\n */\nlet DatePickerModule = /*#__PURE__*/(() => {\n  var _class86;\n  class DatePickerModule {}\n  _class86 = DatePickerModule;\n  _defineProperty(DatePickerModule, \"\\u0275fac\", function _class86_Factory(t) {\n    return new (t || _class86)();\n  });\n  _defineProperty(DatePickerModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _class86\n  }));\n  _defineProperty(DatePickerModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [\n    // DateInputModule providers\n    IconsService,\n    // CalendarModule providers\n    ResizeBatchService, CalendarDOMService, CenturyViewService, DecadeViewService, MonthViewService, YearViewService, PopupService, NavigationService, AdaptiveService],\n    imports: [DatePickerComponent]\n  }));\n  return DatePickerModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// IMPORTANT: NgModule export kept for backwards compatibility\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Date Inputs components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Date Inputs module\n * import { DateInputsModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare the app component\n *     imports:      [BrowserModule, DateInputsModule], // import the Date Inputs module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nlet DateInputsModule = /*#__PURE__*/(() => {\n  var _class87;\n  class DateInputsModule {}\n  _class87 = DateInputsModule;\n  _defineProperty(DateInputsModule, \"\\u0275fac\", function _class87_Factory(t) {\n    return new (t || _class87)();\n  });\n  _defineProperty(DateInputsModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _class87\n  }));\n  _defineProperty(DateInputsModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [\n    // CalendarModule providers\n    IconsService, ResizeBatchService, CalendarDOMService, CenturyViewService, DecadeViewService, MonthViewService, YearViewService, PopupService, NavigationService,\n    // TimePickerModule providers\n    TimePickerDOMService, HoursService, MinutesService, SecondsService, MillisecondsService, DayPeriodService, AdaptiveService],\n    imports: [CalendarComponent, MultiViewCalendarComponent, DateInputComponent, DatePickerComponent, DateInputComponent, DateRangeComponent, DateRangePopupComponent, DateTimePickerComponent, TimePickerComponent]\n  }));\n  return DateInputsModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// IMPORTANT: NgModule export kept for backwards compatibility\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the TimePicker component.\n */\nlet TimePickerModule = /*#__PURE__*/(() => {\n  var _class88;\n  class TimePickerModule {}\n  _class88 = TimePickerModule;\n  _defineProperty(TimePickerModule, \"\\u0275fac\", function _class88_Factory(t) {\n    return new (t || _class88)();\n  });\n  _defineProperty(TimePickerModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _class88\n  }));\n  _defineProperty(TimePickerModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [IconsService, PopupService, ResizeBatchService, TimePickerDOMService, HoursService, MinutesService, SecondsService, MillisecondsService, DayPeriodService, AdaptiveService],\n    imports: [TimePickerComponent]\n  }));\n  return TimePickerModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// IMPORTANT: NgModule export kept for backwards compatibility\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the DateTimePicker component.\n */\nlet DateTimePickerModule = /*#__PURE__*/(() => {\n  var _class89;\n  class DateTimePickerModule {}\n  _class89 = DateTimePickerModule;\n  _defineProperty(DateTimePickerModule, \"\\u0275fac\", function _class89_Factory(t) {\n    return new (t || _class89)();\n  });\n  _defineProperty(DateTimePickerModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _class89\n  }));\n  _defineProperty(DateTimePickerModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [\n    // CalendarModule providers\n    IconsService, ResizeBatchService, CalendarDOMService, CenturyViewService, DecadeViewService, MonthViewService, YearViewService, PopupService, NavigationService,\n    // TimePickerModule providers\n    TimePickerDOMService, HoursService, MinutesService, SecondsService, MillisecondsService, DayPeriodService, AdaptiveService],\n    imports: [DateTimePickerComponent]\n  }));\n  return DateTimePickerModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// IMPORTANT: NgModule export kept for backwards compatibility\n/**\n * The package exports:\n * - `CellTemplateDirective`&mdash;The month cell template directive.\n * - `MonthCellTemplateDirective`&mdash;The month cell template directive.\n * - `YearCellTemplateDirective`&mdash;The year cell template directive.\n * - `DecadeCellTemplateDirective`&mdash;The decade cell template directive.\n * - `CenturyCellTemplateDirective`&mdash;The century cell template directive.\n * - `WeekNumberCellTemplateDirective`&mdash;The month week number cell template directive.\n * - `HeaderTitleTemplateDirective`&mdash;The header title template directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the MultiViewCalendar module\n * import { MultiViewCalendarModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, MultiViewCalendarModule], // import MultiViewCalendar module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n */\nlet MultiViewCalendarModule = /*#__PURE__*/(() => {\n  var _class90;\n  class MultiViewCalendarModule {}\n  _class90 = MultiViewCalendarModule;\n  _defineProperty(MultiViewCalendarModule, \"\\u0275fac\", function _class90_Factory(t) {\n    return new (t || _class90)();\n  });\n  _defineProperty(MultiViewCalendarModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _class90\n  }));\n  _defineProperty(MultiViewCalendarModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [PopupService, NavigationService, CenturyViewService, DecadeViewService, MonthViewService, YearViewService],\n    imports: [MultiViewCalendarComponent]\n  }));\n  return MultiViewCalendarModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// IMPORTANT: NgModule export kept for backwards compatibility\n/**\n * The exported package module.\n *\n * The package exports:\n * - `DateRangeComponent`&mdash;The DateRange component class.\n * - `DateRangePopupComponent`&mdash;The DateRangePopup component class.\n * - `DateRangeSelectionDirective`&mdash;The MultiviewCalendar date range selection directive.\n * - `DateRangeEndInputDirective`&mdash;The end DateInput date range selection directive.\n * - `DateRangeStartInputDirective`&mdash;The start DateInput date range selection directive.\n * - `DateRangePopupTemplateDirective`&mdash;The DateRangePopup content template directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the DateRange module\n * import { DateRangeModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, DateRangeModule], // import DateRange module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nlet DateRangeModule = /*#__PURE__*/(() => {\n  var _class91;\n  class DateRangeModule {}\n  _class91 = DateRangeModule;\n  _defineProperty(DateRangeModule, \"\\u0275fac\", function _class91_Factory(t) {\n    return new (t || _class91)();\n  });\n  _defineProperty(DateRangeModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _class91\n  }));\n  _defineProperty(DateRangeModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [\n    // MultiViewCalendarModule providers\n    PopupService, NavigationService, CenturyViewService, DecadeViewService, MonthViewService, YearViewService,\n    // DateInputModule providers\n    IconsService,\n    // AdaptiveModule providers\n    ResizeBatchService, AdaptiveService],\n    imports: [DateInputComponent, DateRangeComponent, DateRangePopupComponent]\n  }));\n  return DateRangeModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CalendarComponent, CalendarCustomMessagesComponent, CalendarDOMService, CalendarLocalizedMessagesDirective, CalendarModule, CalendarViewEnum, CalendarsModule, CellTemplateDirective, CenturyCellTemplateDirective, CenturyViewService, DateInputComponent, DateInputCustomMessagesComponent, DateInputLocalizedMessagesDirective, DateInputModule, DateInputsModule, DatePickerComponent, DatePickerCustomMessagesComponent, DatePickerLocalizedMessagesDirective, DatePickerModule, DateRangeComponent, DateRangeEndInputDirective, DateRangeModule, DateRangePopupComponent, DateRangePopupCustomMessagesComponent, DateRangePopupLocalizedMessagesDirective, DateRangePopupTemplateDirective, DateRangeSelectionDirective, DateRangeService, DateRangeStartInputDirective, DateTimePickerComponent, DateTimePickerCustomMessagesComponent, DateTimePickerModule, DayPeriodService, DecadeCellTemplateDirective, DecadeViewService, FooterComponent, FooterTemplateDirective, HeaderComponent, HeaderTemplateDirective, HeaderTitleTemplateDirective, HorizontalViewListComponent, HoursService, KENDO_CALENDAR, KENDO_DATEINPUT, KENDO_DATEINPUTS, KENDO_DATEPICKER, KENDO_DATERANGE, KENDO_DATETIMEPICKER, KENDO_MULTIVIEWCALENDAR, KENDO_TIMEPICKER, KForOf, LocalizedMessagesDirective, MillisecondsService, MinutesService, MonthCellTemplateDirective, MonthViewService, MultiViewCalendarComponent, MultiViewCalendarCustomMessagesComponent, MultiViewCalendarLocalizedMessagesDirective, MultiViewCalendarModule, NavigationComponent, NavigationItemTemplateDirective, NavigationService, PreventableEvent, SecondsService, TimeListComponent, TimePickerComponent, TimePickerCustomMessagesComponent, TimePickerDOMService, TimePickerLocalizedMessagesDirective, TimePickerModule, TimeSelectorComponent, TimeSelectorCustomMessagesComponent, TimeSelectorLocalizedMessagesDirective, ViewComponent, ViewListComponent, WeekNamesService, WeekNumberCellTemplateDirective, YearCellTemplateDirective, YearViewService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}