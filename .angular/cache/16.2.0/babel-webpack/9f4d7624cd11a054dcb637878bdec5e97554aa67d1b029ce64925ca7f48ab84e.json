{"ast":null,"code":"import _defineProperty from \"C:/Users/Mobile programming/Documents/angular-pwa-boilerplate/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n/**-----------------------------------------------------------------------------------------\n* Copyright © 2025 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Directive, Input, forwardRef, Component, ChangeDetectionStrategy, ViewChild, HostBinding, Optional, ElementRef, EventEmitter, inject, SkipSelf, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { ComponentMessages, LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport { Subject, Subscription } from 'rxjs';\nimport { caretAltLeftIcon, caretAltToLeftIcon, caretAltRightIcon, caretAltToRightIcon } from '@progress/kendo-svg-icons';\nimport { isFocusable, Keys, EventsOutsideAngularDirective, anyChanged, ResizeSensorComponent, isPresent, ResizeBatchService } from '@progress/kendo-angular-common';\nimport { ButtonComponent } from '@progress/kendo-angular-buttons';\nimport { DropDownListComponent } from '@progress/kendo-angular-dropdowns';\nimport { NgIf, NgFor, NgClass, NgTemplateOutlet } from '@angular/common';\nimport { NumericTextBoxComponent } from '@progress/kendo-angular-inputs';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { IconsService } from '@progress/kendo-angular-icons';\nimport { PopupService } from '@progress/kendo-angular-popup';\n\n/**\n * @hidden\n */\nconst _c0 = [\"dropdownlist\"];\nconst _c1 = [\"select\"];\nconst _c2 = [\"numbers\"];\nfunction _class13_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1, \"... \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selected\", false);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.pageLabel(ctx_r1.start - 1));\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    \"k-selected\": a0\n  };\n};\nfunction _class13_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const num_r8 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", num_r8.toString())(\"selected\", num_r8 === ctx_r2.currentPage)(\"ngClass\", i0.ɵɵpureFunction1(6, _c3, ctx_r2.currentPage === num_r8));\n    i0.ɵɵattribute(\"aria-label\", ctx_r2.pageLabel(num_r8))(\"aria-current\", ctx_r2.currentPage === num_r8 ? \"page\" : undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", num_r8, \" \");\n  }\n}\nfunction _class13_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1, \"... \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selected\", false);\n    i0.ɵɵattribute(\"aria-label\", ctx_r3.pageLabel(ctx_r3.end + 1));\n  }\n}\nfunction _class13_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function _class13_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.changePage(ctx_r9.start - 2));\n    });\n    i0.ɵɵtext(1, \"...\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"size\", ctx_r5.size);\n    i0.ɵɵattribute(\"aria-label\", ctx_r5.pageLabel(ctx_r5.start - 1))(\"title\", ctx_r5.pageLabel(ctx_r5.start - 1));\n  }\n}\nfunction _class13_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function _class13_button_8_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const num_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.changePage(num_r11 - 1));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const num_r11 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"size\", ctx_r6.size)(\"selected\", ctx_r6.currentPage === num_r11);\n    i0.ɵɵattribute(\"aria-label\", ctx_r6.pageLabel(num_r11))(\"title\", ctx_r6.pageLabel(num_r11))(\"aria-current\", ctx_r6.currentPage === num_r11 ? \"page\" : undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", num_r11, \" \");\n  }\n}\nfunction _class13_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function _class13_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.changePage(ctx_r14.end));\n    });\n    i0.ɵɵtext(1, \"...\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"size\", ctx_r7.size);\n    i0.ɵɵattribute(\"aria-label\", ctx_r7.pageLabel(ctx_r7.end + 1))(\"title\", ctx_r7.pageLabel(ctx_r7.end + 1));\n  }\n}\nconst _c4 = function (a0) {\n  return {\n    \"aria-label\": a0\n  };\n};\nconst _c5 = function (a0, a1) {\n  return {\n    keydown: a0,\n    focusout: a1\n  };\n};\nfunction _class17_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template.first == null ? null : ctx_r0.template.first.templateRef)(\"ngTemplateOutletContext\", ctx_r0.templateContext);\n  }\n}\nfunction _class17_ng_template_3_kendo_pager_prev_buttons_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-pager-prev-buttons\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"size\", ctx_r4.size);\n  }\n}\nfunction _class17_ng_template_3_kendo_pager_numeric_buttons_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-pager-numeric-buttons\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"size\", ctx_r5.size)(\"buttonCount\", ctx_r5.buttonCount);\n  }\n}\nfunction _class17_ng_template_3_kendo_pager_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-pager-input\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"size\", ctx_r6.size);\n  }\n}\nfunction _class17_ng_template_3_kendo_pager_next_buttons_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-pager-next-buttons\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"size\", ctx_r7.size);\n  }\n}\nfunction _class17_ng_template_3_kendo_pager_page_sizes_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-pager-page-sizes\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"size\", ctx_r8.size)(\"pageSizes\", ctx_r8._pageSizeValues);\n  }\n}\nfunction _class17_ng_template_3_kendo_pager_info_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-pager-info\");\n  }\n}\nfunction _class17_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, _class17_ng_template_3_kendo_pager_prev_buttons_1_Template, 1, 1, \"kendo-pager-prev-buttons\", 7);\n    i0.ɵɵtemplate(2, _class17_ng_template_3_kendo_pager_numeric_buttons_2_Template, 1, 2, \"kendo-pager-numeric-buttons\", 8);\n    i0.ɵɵtemplate(3, _class17_ng_template_3_kendo_pager_input_3_Template, 1, 1, \"kendo-pager-input\", 7);\n    i0.ɵɵtemplate(4, _class17_ng_template_3_kendo_pager_next_buttons_4_Template, 1, 1, \"kendo-pager-next-buttons\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, _class17_ng_template_3_kendo_pager_page_sizes_5_Template, 1, 2, \"kendo-pager-page-sizes\", 9);\n    i0.ɵɵtemplate(6, _class17_ng_template_3_kendo_pager_info_6_Template, 1, 0, \"kendo-pager-info\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.previousNext);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.type === \"numeric\" && ctx_r2.buttonCount > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.type === \"input\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.previousNext);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2._pageSizeValues.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.info);\n  }\n}\nfunction _class17_kendo_resize_sensor_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"kendo-resize-sensor\", 14);\n    i0.ɵɵlistener(\"resize\", function _class17_kendo_resize_sensor_5_Template_kendo_resize_sensor_resize_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.resizeHandler());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nclass PreventableEvent {\n  constructor() {\n    _defineProperty(this, \"prevented\", false);\n  }\n  /**\n   * Prevents the default action for a specified event.\n   * In this way, the source component suppresses the built-in behavior that follows the event.\n   */\n  preventDefault() {\n    this.prevented = true;\n  }\n  /**\n   * If the event is prevented by any of its subscribers, returns `true`.\n   *\n   * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n   */\n  isDefaultPrevented() {\n    return this.prevented;\n  }\n}\n\n/**\n * Arguments for the `pageSizeChange` event. The `pageSizeChange` event fires when the page size\n * is changed from the UI. If you cancel the event, the change is prevented.\n */\nclass PageSizeChangeEvent extends PreventableEvent {\n  /**\n   * Constructs the event arguments for the `pageSizeChange` event.\n   * @param newPageSize - The newly selected page size.\n   * @hidden\n   */\n  constructor(newPageSize) {\n    super();\n    /**\n     * The newly selected page size.\n     */\n    _defineProperty(this, \"newPageSize\", void 0);\n    this.newPageSize = newPageSize;\n  }\n}\n\n/**\n * @hidden\n */\nlet Messages = /*#__PURE__*/(() => {\n  var _class3;\n  class Messages extends ComponentMessages {\n    constructor(...args) {\n      super(...args);\n      /**\n       * The label of the pager. Follows the pattern **Page navigation, page {currentPage} of {totalPages}** by default.\n       * Тhe default label text when the current page is 1, and the total number of pages is 10 will be\n       * **Page navigation, page 1 of 10**.\n       *\n       * The message consists of several parts - the current page number, the total number of pages, and a localizable string.\n       * To allow for reordering its parts, the `ariaLabel` input accepts a string with placeholders for the current page\n       * and total number of pages. The `{currentPage}` and `{totalPages}` placeholders will be replaced\n       * internally with the respective actual values.\n       */\n      _defineProperty(this, \"ariaLabel\", void 0);\n      /**\n       * The label for the **First page** button.\n       */\n      _defineProperty(this, \"firstPage\", void 0);\n      /**\n       * The label for the **Last page** button.\n       */\n      _defineProperty(this, \"lastPage\", void 0);\n      /**\n       * The label for the **Previous page** button.\n       */\n      _defineProperty(this, \"previousPage\", void 0);\n      /**\n       * The label for the **Next page** button.\n       */\n      _defineProperty(this, \"nextPage\", void 0);\n      /**\n       * The label displayed before the pager input.\n       */\n      _defineProperty(this, \"page\", void 0);\n      /**\n       * The title attribute of the page number input element.\n       */\n      _defineProperty(this, \"pageNumberInputTitle\", void 0);\n      /**\n       * The label displayed after the page-size selector.\n       */\n      _defineProperty(this, \"itemsPerPage\", void 0);\n      /**\n       * The label before the total-page number.\n       */\n      _defineProperty(this, \"of\", void 0);\n      /**\n       * The label after the total-page number.\n       */\n      _defineProperty(this, \"items\", void 0);\n      /**\n       * The text of the title and aria-label attributes applied to the page chooser.\n       */\n      _defineProperty(this, \"selectPage\", void 0);\n      /**\n       * The text of the aria-label attribute applied to the input element for entering the page number.\"\n       */\n      _defineProperty(this, \"inputLabel\", void 0);\n    }\n  }\n  _class3 = Messages;\n  _defineProperty(Messages, \"\\u0275fac\", /* @__PURE__ */function () {\n    let ɵ_class3_BaseFactory;\n    return function _class3_Factory(t) {\n      return (ɵ_class3_BaseFactory || (ɵ_class3_BaseFactory = i0.ɵɵgetInheritedFactory(_class3)))(t || _class3);\n    };\n  }());\n  _defineProperty(Messages, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class3,\n    selectors: [[\"kendoPagerMessages\"]],\n    inputs: {\n      ariaLabel: \"ariaLabel\",\n      firstPage: \"firstPage\",\n      lastPage: \"lastPage\",\n      previousPage: \"previousPage\",\n      nextPage: \"nextPage\",\n      page: \"page\",\n      pageNumberInputTitle: \"pageNumberInputTitle\",\n      itemsPerPage: \"itemsPerPage\",\n      of: \"of\",\n      items: \"items\",\n      selectPage: \"selectPage\",\n      inputLabel: \"inputLabel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  }));\n  return Messages;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug pager_globalization %}#toc-messages)).\n */\nlet CustomMessagesComponent = /*#__PURE__*/(() => {\n  var _class4;\n  class CustomMessagesComponent extends Messages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n    get override() {\n      return true;\n    }\n  }\n  _class4 = CustomMessagesComponent;\n  _defineProperty(CustomMessagesComponent, \"\\u0275fac\", function _class4_Factory(t) {\n    return new (t || _class4)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n  });\n  _defineProperty(CustomMessagesComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class4,\n    selectors: [[\"kendo-datapager-messages\"], [\"kendo-pager-messages\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: Messages,\n      useExisting: forwardRef(() => _class4)\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function _class4_Template(rf, ctx) {},\n    encapsulation: 2\n  }));\n  return CustomMessagesComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nlet LocalizedMessagesDirective = /*#__PURE__*/(() => {\n  var _class5;\n  class LocalizedMessagesDirective extends Messages {\n    constructor(service) {\n      super();\n      _defineProperty(this, \"service\", void 0);\n      this.service = service;\n    }\n  }\n  _class5 = LocalizedMessagesDirective;\n  _defineProperty(LocalizedMessagesDirective, \"\\u0275fac\", function _class5_Factory(t) {\n    return new (t || _class5)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n  });\n  _defineProperty(LocalizedMessagesDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class5,\n    selectors: [[\"\", \"kendoPagerLocalizedMessages\", \"\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: Messages,\n      useExisting: forwardRef(() => _class5)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  }));\n  return LocalizedMessagesDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nclass PagerContextService {\n  constructor() {\n    _defineProperty(this, \"total\", void 0);\n    _defineProperty(this, \"skip\", void 0);\n    _defineProperty(this, \"pageSize\", void 0);\n    _defineProperty(this, \"localization\", void 0);\n    _defineProperty(this, \"changes\", new Subject());\n    _defineProperty(this, \"pageChange\", new Subject());\n    _defineProperty(this, \"pageSizeChange\", new Subject());\n  }\n  get currentPage() {\n    return this.skip / this.pageSize;\n  }\n  notifyChanges(changes) {\n    this.total = changes.total;\n    this.pageSize = changes.pageSize;\n    this.skip = changes.skip;\n    this.changes.next(changes);\n  }\n  changePage(page) {\n    this.pageChange.next({\n      skip: page * this.pageSize,\n      take: this.pageSize\n    });\n  }\n  changePageSize(event) {\n    this.pageSizeChange.next(event);\n  }\n  nextPage() {\n    const nextPage = this.currentPage + 1;\n    if (nextPage * this.pageSize < this.total) {\n      this.changePage(nextPage);\n    }\n  }\n  prevPage() {\n    const prevPage = this.currentPage - 1;\n    if (prevPage * this.pageSize >= 0) {\n      this.changePage(prevPage);\n    }\n  }\n}\n\n/**\n * @hidden\n */\nlet PagerElementComponent = /*#__PURE__*/(() => {\n  var _class7;\n  class PagerElementComponent {\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerElementComponent\n     */\n    get currentPage() {\n      return Math.floor((this.skip || 0) / this.pageSize) + 1;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerElementComponent\n     */\n    get totalPages() {\n      return Math.ceil((this.total || 0) / this.pageSize);\n    }\n    constructor(localization, pagerContext, cd) {\n      _defineProperty(this, \"localization\", void 0);\n      _defineProperty(this, \"pagerContext\", void 0);\n      _defineProperty(this, \"cd\", void 0);\n      _defineProperty(this, \"total\", void 0);\n      _defineProperty(this, \"skip\", void 0);\n      _defineProperty(this, \"pageSize\", void 0);\n      _defineProperty(this, \"caretAltLeftIcon\", caretAltLeftIcon);\n      _defineProperty(this, \"caretAltToLeftIcon\", caretAltToLeftIcon);\n      _defineProperty(this, \"caretAltRightIcon\", caretAltRightIcon);\n      _defineProperty(this, \"caretAltToRightIcon\", caretAltToRightIcon);\n      _defineProperty(this, \"subscriptions\", void 0);\n      this.localization = localization;\n      this.pagerContext = pagerContext;\n      this.cd = cd;\n      this.total = pagerContext.total;\n      this.skip = pagerContext.skip;\n      this.pageSize = pagerContext.pageSize;\n    }\n    /**\n     * @hidden\n     *\n     * @param {string} key\n     * @returns {string}\n     *\n     * @memberOf PagerElementComponent\n     */\n    textFor(key) {\n      const isPagerLocalization = this.localization.prefix === 'kendo.pager';\n      return this.localization.get(isPagerLocalization ? key : `pager${key[0].toLocaleUpperCase()}${key.slice(1)}`);\n    }\n    /**\n     * @hidden\n     *\n     * @param {number} page\n     *\n     * @memberOf PagerElementComponent\n     */\n    changePage(page) {\n      this.pagerContext.changePage(page);\n      return false;\n    }\n    /**\n     * @hidden\n     *\n     * @memberOf PagerElementComponent\n     */\n    ngOnInit() {\n      this.subscriptions = this.pagerContext.changes.subscribe(this.onChanges.bind(this));\n      this.subscriptions.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n    }\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n    }\n    get prevArrowIcons() {\n      return !this.localization.rtl ? ['caret-alt-to-left', 'caret-alt-left'] : ['caret-alt-to-right', 'caret-alt-right'];\n    }\n    get prevArrowSVGIcons() {\n      return !this.localization.rtl ? [this.caretAltToLeftIcon, this.caretAltLeftIcon] : [this.caretAltToRightIcon, this.caretAltRightIcon];\n    }\n    get nextArrowIcons() {\n      return !this.localization.rtl ? ['caret-alt-right', 'caret-alt-to-right'] : ['caret-alt-left', 'caret-alt-to-left'];\n    }\n    get nextArrowSVGIcons() {\n      return !this.localization.rtl ? [this.caretAltRightIcon, this.caretAltToRightIcon] : [this.caretAltLeftIcon, this.caretAltToLeftIcon];\n    }\n  }\n  _class7 = PagerElementComponent;\n  _defineProperty(PagerElementComponent, \"\\u0275fac\", function _class7_Factory(t) {\n    return new (t || _class7)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(PagerContextService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  });\n  _defineProperty(PagerElementComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class7,\n    selectors: [[\"kendo-pager-element\"]],\n    decls: 0,\n    vars: 0,\n    template: function _class7_Template(rf, ctx) {},\n    encapsulation: 2\n  }));\n  return PagerElementComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nconst DEFAULT_PAGE_SIZE_VALUES = [5, 10, 20].map(n => ({\n  text: String(n),\n  value: n\n}));\n/**\n * @hidden\n */\nconst focusableDirectiveSelector = '[kendoPagerFocusable]';\n/**\n * @hidden\n */\nconst getAllFocusableChildren = parent => {\n  return parent.querySelectorAll(focusableDirectiveSelector);\n};\n/**\n * @hidden\n */\nconst focusableSelector = ['a[href]:not([disabled]):not([aria-hidden=\"true\"])', 'area[href]:not([disabled]):not([aria-hidden=\"true\"])', 'input:not([disabled]):not([aria-hidden=\"true\"])', 'select:not([disabled]):not([aria-hidden=\"true\"])', 'textarea:not([disabled]):not([aria-hidden=\"true\"])', 'button:not([aria-hidden=\"true\"])', 'iframe:not([disabled])', 'object:not([disabled])', 'embed:not([disabled])', '*[tabindex]:not([disabled]):not([aria-hidden=\"true\"])', '*[contenteditable]:not([disabled]):not([contenteditable=\"false\"])'].join(',');\n/**\n * @hidden\n */\nconst DEFAULT_SIZE = 'medium';\nconst SIZES = {\n  small: 'sm',\n  medium: 'md',\n  large: 'lg'\n};\n/**\n * @hidden\n *\n * Returns the styling classes to be added and removed\n */\nconst getStylingClasses = (componentType, stylingOption, previousValue, newValue) => {\n  switch (stylingOption) {\n    case 'size':\n      return {\n        toRemove: `k-${componentType}-${SIZES[previousValue]}`,\n        toAdd: newValue !== 'none' ? `k-${componentType}-${SIZES[newValue]}` : ''\n      };\n    default:\n      break;\n  }\n};\n/**\n * @hidden\n */\nconst replaceMessagePlaceholder = (message, name, value) => message.replace(new RegExp(`\\{\\\\s*${name}\\\\s*\\}`, 'g'), value);\n\n/**\n * @hidden\n */\nclass PagerNavigationService {\n  constructor() {\n    _defineProperty(this, \"isNavigable\", false);\n    _defineProperty(this, \"innerNavigationChange\", new Subject());\n  }\n  toggleInnerNavigation(value) {\n    this.innerNavigationChange.next(value);\n  }\n  keepFocusWithinComponent(wrapper, target, event) {\n    const [firstFocusable, lastFocusable] = this.getFirstAndLastFocusable(wrapper);\n    const tabAfterLastFocusable = !event.shiftKey && target === lastFocusable;\n    const shiftTabAfterFirstFocusable = event.shiftKey && target === firstFocusable;\n    if (tabAfterLastFocusable) {\n      event.preventDefault();\n      firstFocusable.focus();\n    }\n    if (shiftTabAfterFirstFocusable) {\n      event.preventDefault();\n      lastFocusable.focus();\n    }\n  }\n  getFirstAndLastFocusable(wrapper) {\n    const all = getAllFocusableChildren(wrapper);\n    const firstFocusable = all.length > 0 ? all[0] : wrapper;\n    const lastFocusable = all.length > 0 ? all[all.length - 1] : wrapper;\n    return [isFocusable(firstFocusable) ? firstFocusable : firstFocusable.querySelector(focusableSelector), isFocusable(lastFocusable) ? lastFocusable : lastFocusable.querySelector(focusableSelector)];\n  }\n}\n\n/**\n * Place the directive on custom focusable elements in the [`kendoPagerTemplate`]({% slug api_pager_pagertemplatedirective %}) to include them in the built-in Pager keyboard navigation.\n */\nlet PagerFocusableDirective = /*#__PURE__*/(() => {\n  var _class9;\n  class PagerFocusableDirective {\n    constructor(navigationService, element, renderer) {\n      _defineProperty(this, \"navigationService\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"subscriptions\", new Subscription());\n      this.navigationService = navigationService;\n      this.element = element;\n      this.renderer = renderer;\n    }\n    ngOnInit() {\n      if (!(this.nativeElement instanceof HTMLElement)) {\n        return;\n      }\n      this.subscriptions.add(this.navigationService.innerNavigationChange.subscribe(this.innerNavigationChange.bind(this)));\n    }\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n    get nativeElement() {\n      return this.element.nativeElement;\n    }\n    innerNavigationChange(value) {\n      if (!this.navigationService.isNavigable) {\n        return;\n      }\n      const index = value ? '0' : '-1';\n      if (this.nativeElement.matches(focusableSelector)) {\n        this.renderer.setAttribute(this.nativeElement, 'tabindex', index);\n      }\n      const focusableElements = this.nativeElement.querySelectorAll(focusableSelector);\n      focusableElements.forEach(el => {\n        this.renderer.setAttribute(el, 'tabindex', index);\n      });\n    }\n  }\n  _class9 = PagerFocusableDirective;\n  _defineProperty(PagerFocusableDirective, \"\\u0275fac\", function _class9_Factory(t) {\n    return new (t || _class9)(i0.ɵɵdirectiveInject(PagerNavigationService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  });\n  _defineProperty(PagerFocusableDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class9,\n    selectors: [[\"\", \"kendoPagerFocusable\", \"\"]],\n    exportAs: [\"kendoPagerFocusable\"],\n    standalone: true\n  }));\n  return PagerFocusableDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// eslint-disable no-access-missing-member\n/**\n * Displays buttons for navigating to the first and to the previous page ([see example]({% slug pager_settings %})).\n */\nlet PagerPrevButtonsComponent = /*#__PURE__*/(() => {\n  var _class10;\n  class PagerPrevButtonsComponent extends PagerElementComponent {\n    constructor(localization, pagerContext, cd) {\n      super(localization, pagerContext, cd);\n      /**\n       * Specifies the padding of the buttons.\n       *\n       * The possible values are:\n       * * `small`\n       * * `medium` (default)\n       * * `large`\n       * * `none`\n       */\n      _defineProperty(this, \"size\", DEFAULT_SIZE);\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberOf PagerPrevButtonsComponent\n     */\n    get disabled() {\n      return this.currentPage === 1 || !this.total;\n    }\n    onChanges({\n      total,\n      skip,\n      pageSize\n    }) {\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n  }\n  _class10 = PagerPrevButtonsComponent;\n  _defineProperty(PagerPrevButtonsComponent, \"\\u0275fac\", function _class10_Factory(t) {\n    return new (t || _class10)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(PagerContextService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  });\n  _defineProperty(PagerPrevButtonsComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class10,\n    selectors: [[\"kendo-datapager-prev-buttons\"], [\"kendo-pager-prev-buttons\"]],\n    inputs: {\n      size: \"size\"\n    },\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 16,\n    consts: [[\"type\", \"button\", \"kendoButton\", \"\", \"kendoPagerFocusable\", \"\", \"fillMode\", \"flat\", \"rounded\", \"none\", 1, \"k-pager-nav\", \"k-pager-first\", 3, \"icon\", \"svgIcon\", \"size\", \"title\", \"click\"], [\"type\", \"button\", \"kendoButton\", \"\", \"kendoPagerFocusable\", \"\", \"fillMode\", \"flat\", \"rounded\", \"none\", 1, \"k-pager-nav\", 3, \"icon\", \"svgIcon\", \"size\", \"title\", \"click\"]],\n    template: function _class10_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function _class10_Template_button_click_0_listener() {\n          return ctx.currentPage !== 1 ? ctx.changePage(0) : false;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function _class10_Template_button_click_1_listener() {\n          return ctx.currentPage !== 1 ? ctx.changePage(ctx.currentPage - 2) : false;\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-disabled\", ctx.disabled);\n        i0.ɵɵproperty(\"icon\", ctx.prevArrowIcons[0])(\"svgIcon\", ctx.prevArrowSVGIcons[0])(\"size\", ctx.size)(\"title\", ctx.textFor(\"firstPage\"));\n        i0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-label\", ctx.textFor(\"firstPage\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"k-disabled\", ctx.disabled);\n        i0.ɵɵproperty(\"icon\", ctx.prevArrowIcons[1])(\"svgIcon\", ctx.prevArrowSVGIcons[1])(\"size\", ctx.size)(\"title\", ctx.textFor(\"previousPage\"));\n        i0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-label\", ctx.textFor(\"previousPage\"));\n      }\n    },\n    dependencies: [ButtonComponent, PagerFocusableDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return PagerPrevButtonsComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Displays a drop-down list for the page size selection ([see example]({% slug pager_settings %})).\n */\nlet PagerPageSizesComponent = /*#__PURE__*/(() => {\n  var _class11;\n  class PagerPageSizesComponent extends PagerElementComponent {\n    /**\n     * The page sizes collection. Can contain numbers and [PageSizeItem]({% slug api_pager_pagesizeitem %}) objects.\n     *\n     * @example\n     *\n     * ```ts-preview\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <div *ngFor=\"let item of pagedData\" style=\"border: 1px solid black; padding: 10px;\">\n     *            <span>{{item.ProductID}}. </span>\n     *            <span>{{item.ProductName}}</span>\n     *        </div>\n     *        <kendo-pager\n     *             [skip]=\"skip\"\n     *             [pageSize]=\"pageSize\"\n     *             [total]=\"total\"\n     *             (pageChange)=\"onPageChange($event)\">\n     *           <ng-template kendoPagerTemplate>\n     *               <kendo-pager-page-sizes [pageSizes]=\"pagesizes\"></kendo-pager-page-sizes>\n     *           </ng-template>\n     *        </kendo-pager>\n     *    `\n     * })\n     * class AppComponent {\n     *    public data: any[] = products;\n     *    public pagedData = [];\n     *    public skip = 0;\n     *    public pageSize = 2;\n     *    public total = products.length;\n     *    public pagesizes = [{text: 'One', value: 1}, {text: 'Two', value: 2}, {text: 'All', value : 'all'}];\n     *\n     *    public ngOnInit() {\n     *        this.pageData();\n     *    }\n     *\n     *    public onPageChange(e) {\n     *        this.skip = e.skip;\n     *        this.pageSize = e.take;\n     *        this.pageData();\n     *    }\n     *\n     *    private pageData() {\n     *        this.pagedData = this.data.slice(this.skip, this.skip + this.pageSize);\n     *    }\n     * }\n     *\n     * const products = [{\n     *   'ProductID' : 1,\n     *   'ProductName' : \"Chai\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 1,\n     *   'QuantityPerUnit' : \"10 boxes x 20 bags\",\n     *   'UnitPrice' : 18.0000,\n     *   'UnitsInStock' : 39,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 10,\n     *   'Discontinued' : false\n     *\n     * }, {\n     *   'ProductID' : 2,\n     *   'ProductName' : \"Chang\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 1,\n     *   'QuantityPerUnit' : \"24 - 12 oz bottles\",\n     *   'UnitPrice' : 19.0000,\n     *   'UnitsInStock' : 17,\n     *   'UnitsOnOrder' : 40,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 3,\n     *   'ProductName' : \"Aniseed Syrup\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"12 - 550 ml bottles\",\n     *   'UnitPrice' : 10.0000,\n     *   'UnitsInStock' : 13,\n     *   'UnitsOnOrder' : 70,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 4,\n     *   'ProductName' : \"Chef Anton\\'s Cajun Seasoning\",\n     *   'SupplierID' : 2,\n     *  'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"48 - 6 oz jars\",\n     *   'UnitPrice' : 22.0000,\n     *   'UnitsInStock' : 53,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 0,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 5,\n     *   'ProductName' : \"Chef Anton\\'s Gumbo Mix\",\n     *   'SupplierID' : 2,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"36 boxes\",\n     *   'UnitPrice' : 21.3500,\n     *   'UnitsInStock' : 0,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 0,\n     *   'Discontinued' : true\n     * }, {\n     *   'ProductID' : 6,\n     *   'ProductName' : \"Grandma\\'s Boysenberry Spread\",\n     *   'SupplierID' : 3,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"12 - 8 oz jars\",\n     *   'UnitPrice' : 25.0000,\n     *   'UnitsInStock' : 120,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }];\n     * ```\n     *\n     */\n    set pageSizes(pageSizes) {\n      let normalizedItems = [];\n      if (Array.isArray(pageSizes)) {\n        pageSizes.forEach(item => {\n          if (typeof item === 'number') {\n            normalizedItems.push({\n              text: item.toString(),\n              value: item\n            });\n          } else {\n            normalizedItems.push(item);\n          }\n        });\n      } else {\n        normalizedItems = DEFAULT_PAGE_SIZE_VALUES;\n      }\n      if (this.pageSize && !normalizedItems.some(item => item.value === this.pageSize)) {\n        normalizedItems = [{\n          text: this.pageSize.toString(),\n          value: this.pageSize\n        }, ...normalizedItems];\n      }\n      this._pageSizes = normalizedItems;\n    }\n    /**\n     * Specifies the padding of the dropdown.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n\n    /**\n     * @hidden\n     *\n     * @readonly\n     */\n    get classes() {\n      return true;\n    }\n    constructor(localization, cd, pagerContext, element, ngZone) {\n      super(localization, pagerContext, cd);\n      _defineProperty(this, \"pagerContext\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"ngZone\", void 0);\n      _defineProperty(this, \"dropDownList\", void 0);\n      _defineProperty(this, \"size\", DEFAULT_SIZE);\n      _defineProperty(this, \"_pageSizes\", []);\n      this.pagerContext = pagerContext;\n      this.element = element;\n      this.ngZone = ngZone;\n    }\n    ngAfterViewInit() {\n      this.ngZone.runOutsideAngular(() => {\n        this.element.nativeElement.addEventListener('keydown', this.keyDownHandler.bind(this), true);\n      });\n    }\n    ngOnDestroy() {\n      this.element.nativeElement.removeEventListener('keydown', this.keyDownHandler);\n    }\n    /**\n     * @hidden\n     */\n    pageSizeChange(value, dropdownlist) {\n      const event = new PageSizeChangeEvent(value);\n      this.pagerContext.changePageSize(event);\n      if (event.isDefaultPrevented()) {\n        dropdownlist.writeValue(this.pageSize);\n      }\n    }\n    onChanges({\n      total,\n      skip,\n      pageSize\n    }) {\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = typeof pageSize === 'number' ? pageSize : this.total;\n      this.cd.markForCheck();\n    }\n    keyDownHandler(ev) {\n      if (ev.keyCode === Keys.Escape && this.dropDownList.isOpen) {\n        ev.stopPropagation();\n        this.dropDownList.toggle(false);\n      }\n    }\n  }\n  _class11 = PagerPageSizesComponent;\n  _defineProperty(PagerPageSizesComponent, \"\\u0275fac\", function _class11_Factory(t) {\n    return new (t || _class11)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PagerContextService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  });\n  _defineProperty(PagerPageSizesComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class11,\n    selectors: [[\"kendo-datapager-page-sizes\"], [\"kendo-pager-page-sizes\"]],\n    viewQuery: function _class11_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropDownList = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function _class11_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-pager-sizes\", ctx.classes);\n      }\n    },\n    inputs: {\n      pageSizes: \"pageSizes\",\n      size: \"size\"\n    },\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 6,\n    consts: [[\"kendoPagerFocusable\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"size\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\"], [\"dropdownlist\", \"\"]],\n    template: function _class11_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"kendo-dropdownlist\", 0, 1);\n        i0.ɵɵlistener(\"valueChange\", function _class11_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(ctx.pageSizeChange($event, _r0));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(2);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"size\", ctx.size)(\"data\", ctx._pageSizes)(\"valuePrimitive\", true)(\"value\", ctx.pageSize);\n        i0.ɵɵattribute(\"aria-label\", ctx.textFor(\"itemsPerPage\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.textFor(\"itemsPerPage\"), \" \");\n      }\n    },\n    dependencies: [DropDownListComponent, PagerFocusableDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return PagerPageSizesComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Represents the pager template which helps to customize the pager appearance. To define a pager\n * template, nest an `<ng-template>` tag with the `kendoPagerTemplate` directive inside `<kendo-pager>`.\n *\n * The template context provides the following fields:\n * * `currentPage`&mdash;The index of the displayed page.\n * * `pageSize`&mdash;The value of the current `pageSize`.\n * * `skip`&mdash;The current skip value.\n * * `total`&mdash;The total number of records.\n * * `totalPages`&mdash;The total number of available pages.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-pager [total]=\"total\" [pageSize]=\"pageSize\" [skip]=\"skip\" (pageChange)=\"onPageChange($event)\">\n *           <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n *               <kendo-pager-prev-buttons></kendo-pager-prev-buttons>\n *               <kendo-pager-numeric-buttons [buttonCount]=\"10\"></kendo-pager-numeric-buttons>\n *               <kendo-pager-next-buttons></kendo-pager-next-buttons>\n *               <kendo-pager-info></kendo-pager-info>\n *               Current page: {{currentPage}}\n *           </ng-template>\n *        </kendo-pager>\n *     `\n * })\n *\n * class AppComponent {\n *     public skip = 0;\n *     public pageSize = 10;\n *     public total = 100;\n *\n *     public onPageChange(e: any): void {\n *         this.skip = e.skip;\n *         this.pageSize = e.take;\n *     }\n * }\n *\n * ```\n */\nlet PagerTemplateDirective = /*#__PURE__*/(() => {\n  var _class12;\n  class PagerTemplateDirective {\n    constructor(templateRef) {\n      _defineProperty(this, \"templateRef\", void 0);\n      this.templateRef = templateRef;\n    }\n  }\n  _class12 = PagerTemplateDirective;\n  _defineProperty(PagerTemplateDirective, \"\\u0275fac\", function _class12_Factory(t) {\n    return new (t || _class12)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n  });\n  _defineProperty(PagerTemplateDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _class12,\n    selectors: [[\"\", \"kendoDataPagerTemplate\", \"\"], [\"\", \"kendoPagerTemplate\", \"\"]],\n    standalone: true\n  }));\n  return PagerTemplateDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Displays numeric buttons to enable navigation between the pages.\n */\nlet PagerNumericButtonsComponent = /*#__PURE__*/(() => {\n  var _class13;\n  class PagerNumericButtonsComponent extends PagerElementComponent {\n    /**\n     * Specifies the padding of the numeric buttons.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set size(size) {\n      const newSize = size ? size : DEFAULT_SIZE;\n      this.handleClasses(newSize, 'size');\n      this._size = newSize;\n    }\n    get size() {\n      return this._size;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number[]}\n     * @memberOf PagerNumericButtonsComponent\n     */\n    get buttons() {\n      const result = [];\n      for (let idx = this.start; idx <= this.end; idx++) {\n        result.push(idx);\n      }\n      return result;\n    }\n    /**\n     * @hidden\n     */\n    get end() {\n      return Math.min(this.start + this.buttonCount - 1, this.totalPages);\n    }\n    /**\n     * @hidden\n     */\n    get start() {\n      const page = this.currentPage;\n      const buttonCount = this.buttonCount;\n      if (page > buttonCount) {\n        const reminder = page % buttonCount;\n        return reminder === 0 ? page - buttonCount + 1 : page - reminder + 1;\n      }\n      return 1;\n    }\n    constructor(localization, cd, pagerContext, renderer) {\n      super(localization, pagerContext, cd);\n      _defineProperty(this, \"pagerContext\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"selectElement\", void 0);\n      _defineProperty(this, \"numbersElement\", void 0);\n      /**\n       * The count of the displayed buttons.\n       *\n       * @type {number}\n       * @memberOf PagerNumericButtonsComponent\n       */\n      _defineProperty(this, \"buttonCount\", void 0);\n      _defineProperty(this, \"_size\", DEFAULT_SIZE);\n      this.pagerContext = pagerContext;\n      this.renderer = renderer;\n    }\n    ngAfterViewInit() {\n      this.handleClasses(this.size, 'size');\n    }\n    /**\n     * @hidden\n     */\n    pageLabel(num) {\n      const pageText = this.textFor('page');\n      if (pageText) {\n        return pageText + ' ' + num;\n      }\n      return num.toString();\n    }\n    /**\n     * @hidden\n     */\n    onSelectChange(e) {\n      const target = e.target;\n      const valueAsNumber = Number(target.value);\n      if (!Number.isNaN(valueAsNumber)) {\n        this.changePage(valueAsNumber - 1);\n      } else {\n        if (target.value === 'previousButtons') {\n          this.changePage(this.start - 2);\n        } else {\n          this.changePage(this.end);\n        }\n      }\n    }\n    onChanges({\n      total,\n      skip,\n      pageSize\n    }) {\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n    get pageChooserLabel() {\n      return this.textFor('selectPage');\n    }\n    handleClasses(value, input) {\n      const elem = this.selectElement?.nativeElement;\n      const classes = getStylingClasses('picker', input, this[input], value);\n      if (!elem) {\n        return;\n      }\n      if (classes.toRemove) {\n        this.renderer.removeClass(elem, classes.toRemove);\n      }\n      if (classes.toAdd) {\n        this.renderer.addClass(elem, classes.toAdd);\n      }\n    }\n  }\n  _class13 = PagerNumericButtonsComponent;\n  _defineProperty(PagerNumericButtonsComponent, \"\\u0275fac\", function _class13_Factory(t) {\n    return new (t || _class13)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PagerContextService), i0.ɵɵdirectiveInject(i0.Renderer2));\n  });\n  _defineProperty(PagerNumericButtonsComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class13,\n    selectors: [[\"kendo-datapager-numeric-buttons\"], [\"kendo-pager-numeric-buttons\"]],\n    viewQuery: function _class13_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c1, 5, ElementRef);\n        i0.ɵɵviewQuery(_c2, 5, ElementRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.numbersElement = _t.first);\n      }\n    },\n    inputs: {\n      buttonCount: \"buttonCount\",\n      size: \"size\"\n    },\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 10,\n    vars: 8,\n    consts: [[\"kendoPagerFocusable\", \"\", 1, \"k-hidden\", \"k-dropdown-list\", \"k-dropdown\", \"k-picker\", \"k-picker-solid\", \"k-rounded-md\", 3, \"change\"], [\"select\", \"\"], [\"value\", \"previousButtons\", 3, \"selected\", 4, \"ngIf\"], [3, \"value\", \"selected\", \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"nextButtons\", 3, \"selected\", 4, \"ngIf\"], [1, \"k-pager-numbers\"], [\"numbers\", \"\"], [\"type\", \"button\", \"kendoPagerFocusable\", \"\", \"kendoButton\", \"\", \"fillMode\", \"flat\", \"themeColor\", \"primary\", \"rounded\", \"none\", 3, \"size\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"kendoPagerFocusable\", \"\", \"kendoButton\", \"\", \"fillMode\", \"flat\", \"themeColor\", \"primary\", \"rounded\", \"none\", 3, \"size\", \"selected\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"previousButtons\", 3, \"selected\"], [3, \"value\", \"selected\", \"ngClass\"], [\"value\", \"nextButtons\", 3, \"selected\"], [\"type\", \"button\", \"kendoPagerFocusable\", \"\", \"kendoButton\", \"\", \"fillMode\", \"flat\", \"themeColor\", \"primary\", \"rounded\", \"none\", 3, \"size\", \"click\"], [\"type\", \"button\", \"kendoPagerFocusable\", \"\", \"kendoButton\", \"\", \"fillMode\", \"flat\", \"themeColor\", \"primary\", \"rounded\", \"none\", 3, \"size\", \"selected\", \"click\"]],\n    template: function _class13_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"select\", 0, 1);\n        i0.ɵɵlistener(\"change\", function _class13_Template_select_change_0_listener($event) {\n          return ctx.onSelectChange($event);\n        });\n        i0.ɵɵtemplate(2, _class13_option_2_Template, 2, 2, \"option\", 2);\n        i0.ɵɵtemplate(3, _class13_option_3_Template, 2, 8, \"option\", 3);\n        i0.ɵɵtemplate(4, _class13_option_4_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5, 6);\n        i0.ɵɵtemplate(7, _class13_button_7_Template, 2, 3, \"button\", 7);\n        i0.ɵɵtemplate(8, _class13_button_8_Template, 2, 6, \"button\", 8);\n        i0.ɵɵtemplate(9, _class13_button_9_Template, 2, 3, \"button\", 7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"title\", ctx.pageChooserLabel)(\"aria-label\", ctx.pageChooserLabel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.start > 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.buttons);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.end < ctx.totalPages);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.start > 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.buttons);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.end < ctx.totalPages);\n      }\n    },\n    dependencies: [PagerFocusableDirective, NgIf, NgFor, NgClass, ButtonComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return PagerNumericButtonsComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// eslint-disable  no-access-missing-member\n/**\n * Displays buttons for navigating to the next and to the last page ([see example]({% slug pager_settings %})).\n */\nlet PagerNextButtonsComponent = /*#__PURE__*/(() => {\n  var _class14;\n  class PagerNextButtonsComponent extends PagerElementComponent {\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberOf PagerNextButtonsComponent\n     */\n    get disabled() {\n      return this.currentPage === this.totalPages || !this.total;\n    }\n    /**\n     * Specifies the padding of the buttons.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n\n    constructor(localization, pagerContext, cd) {\n      super(localization, pagerContext, cd);\n      _defineProperty(this, \"size\", DEFAULT_SIZE);\n    }\n    onChanges({\n      total,\n      skip,\n      pageSize\n    }) {\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n  }\n  _class14 = PagerNextButtonsComponent;\n  _defineProperty(PagerNextButtonsComponent, \"\\u0275fac\", function _class14_Factory(t) {\n    return new (t || _class14)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(PagerContextService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  });\n  _defineProperty(PagerNextButtonsComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class14,\n    selectors: [[\"kendo-datapager-next-buttons\"], [\"kendo-pager-next-buttons\"]],\n    inputs: {\n      size: \"size\"\n    },\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 16,\n    consts: [[\"kendoButton\", \"\", \"kendoPagerFocusable\", \"\", \"type\", \"button\", \"fillMode\", \"flat\", \"rounded\", \"none\", 1, \"k-pager-nav\", 3, \"size\", \"icon\", \"svgIcon\", \"title\", \"click\"], [\"kendoButton\", \"\", \"kendoPagerFocusable\", \"\", \"type\", \"button\", \"fillMode\", \"flat\", \"rounded\", \"none\", 1, \"k-pager-nav\", \"k-pager-last\", 3, \"size\", \"icon\", \"svgIcon\", \"title\", \"click\"]],\n    template: function _class14_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function _class14_Template_button_click_0_listener() {\n          return ctx.currentPage !== ctx.totalPages ? ctx.changePage(ctx.currentPage) : false;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function _class14_Template_button_click_1_listener() {\n          return ctx.currentPage !== ctx.totalPages ? ctx.changePage(ctx.totalPages - 1) : false;\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-disabled\", ctx.disabled);\n        i0.ɵɵproperty(\"size\", ctx.size)(\"icon\", ctx.nextArrowIcons[0])(\"svgIcon\", ctx.nextArrowSVGIcons[0])(\"title\", ctx.textFor(\"nextPage\"));\n        i0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-label\", ctx.textFor(\"nextPage\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"k-disabled\", ctx.disabled);\n        i0.ɵɵproperty(\"size\", ctx.size)(\"icon\", ctx.nextArrowIcons[1])(\"svgIcon\", ctx.nextArrowSVGIcons[1])(\"title\", ctx.textFor(\"lastPage\"));\n        i0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-label\", ctx.textFor(\"lastPage\"));\n      }\n    },\n    dependencies: [ButtonComponent, PagerFocusableDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return PagerNextButtonsComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Displays an input element which allows the typing and rendering of page numbers.\n */\nlet PagerInputComponent = /*#__PURE__*/(() => {\n  var _class15;\n  class PagerInputComponent extends PagerElementComponent {\n    constructor(localization, pagerContext, zone, cd, renderer) {\n      super(localization, pagerContext, cd);\n      _defineProperty(this, \"pagerContext\", void 0);\n      _defineProperty(this, \"zone\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"numericInput\", void 0);\n      /**\n       * Specifies the padding of the internal numeric input element.\n       *\n       * The possible values are:\n       * * `small`\n       * * `medium` (default)\n       * * `large`\n       * * `none`\n       */\n      _defineProperty(this, \"size\", DEFAULT_SIZE);\n      /**\n       * @hidden\n       *\n       * @param {string} value\n       *\n       * @memberOf PagerInputComponent\n       */\n      _defineProperty(this, \"handleKeyDown\", event => {\n        const incomingValue = this.numericInput.value || this.current;\n        // eslint-disable import/no-deprecated\n        if (event.keyCode === Keys.Enter) {\n          event.preventDefault();\n          if (incomingValue !== this.current) {\n            this.zone.run(() => {\n              this.changePage(incomingValue - 1);\n            });\n          }\n        }\n      });\n      /**\n       * @hidden\n       *\n       * @param {string} value\n       *\n       * @memberOf PagerInputComponent\n       */\n      _defineProperty(this, \"handleBlur\", () => {\n        const inputValue = this.numericInput.value;\n        if (!inputValue) {\n          this.numericInput.writeValue(this.current);\n          return;\n        }\n        if (inputValue !== this.current) {\n          this.zone.run(() => {\n            this.changePage(inputValue - 1);\n          });\n        }\n      });\n      this.pagerContext = pagerContext;\n      this.zone = zone;\n      this.renderer = renderer;\n    }\n    onChanges({\n      total,\n      skip,\n      pageSize\n    }) {\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    get current() {\n      return this.hasPages ? this.currentPage : 0;\n    }\n    /**\n     * @hidden\n     */\n    get hasPages() {\n      return this.totalPages !== 0;\n    }\n  }\n  _class15 = PagerInputComponent;\n  _defineProperty(PagerInputComponent, \"\\u0275fac\", function _class15_Factory(t) {\n    return new (t || _class15)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(PagerContextService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  });\n  _defineProperty(PagerInputComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class15,\n    selectors: [[\"kendo-datapager-input\"], [\"kendo-pager-input\"]],\n    viewQuery: function _class15_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(NumericTextBoxComponent, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.numericInput = _t.first);\n      }\n    },\n    inputs: {\n      size: \"size\"\n    },\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 4,\n    vars: 19,\n    consts: [[1, \"k-pager-input\"], [\"kendoPagerFocusable\", \"\", \"format\", \"n0\", 3, \"spinners\", \"decimals\", \"size\", \"disabled\", \"value\", \"min\", \"max\", \"autoCorrect\", \"inputAttributes\", \"title\", \"kendoEventsOutsideAngular\"]],\n    template: function _class15_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelement(2, \"kendo-numerictextbox\", 1);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.textFor(\"page\"), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"spinners\", false)(\"decimals\", 0)(\"size\", ctx.size)(\"disabled\", !ctx.hasPages)(\"value\", ctx.current)(\"min\", ctx.hasPages ? 1 : 0)(\"max\", ctx.totalPages)(\"autoCorrect\", true)(\"inputAttributes\", i0.ɵɵpureFunction1(14, _c4, ctx.textFor(\"inputLabel\")))(\"title\", ctx.textFor(\"pageNumberInputTitle\"))(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(16, _c5, ctx.handleKeyDown, ctx.handleBlur));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate2(\" \", ctx.textFor(\"of\"), \" \", ctx.totalPages, \" \");\n      }\n    },\n    dependencies: [NumericTextBoxComponent, PagerFocusableDirective, EventsOutsideAngularDirective],\n    encapsulation: 2\n  }));\n  return PagerInputComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// eslint-disable no-access-missing-member\n/**\n * Displays information about the current page and the total number of records ([see example]({% slug pager_settings %})).\n */\nlet PagerInfoComponent = /*#__PURE__*/(() => {\n  var _class16;\n  class PagerInfoComponent extends PagerElementComponent {\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerInfoComponent\n     */\n    get maxItems() {\n      return Math.min(this.currentPage * this.pageSize, this.total);\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerInfoComponent\n     */\n    get currentPageText() {\n      return this.total ? (this.currentPage - 1) * this.pageSize + 1 : 0;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberOf PagerInfoComponent\n     */\n\n    constructor(localization, cd, pagerContext) {\n      super(localization, pagerContext, cd);\n      _defineProperty(this, \"hostClass\", true);\n    }\n    onChanges({\n      total,\n      skip,\n      pageSize\n    }) {\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n  }\n  _class16 = PagerInfoComponent;\n  _defineProperty(PagerInfoComponent, \"\\u0275fac\", function _class16_Factory(t) {\n    return new (t || _class16)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PagerContextService));\n  });\n  _defineProperty(PagerInfoComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class16,\n    selectors: [[\"kendo-datapager-info\"], [\"kendo-pager-info\"]],\n    hostVars: 2,\n    hostBindings: function _class16_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"k-pager-info\", ctx.hostClass);\n      }\n    },\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 1,\n    vars: 5,\n    template: function _class16_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate5(\"\", ctx.currentPageText, \" - \", ctx.maxItems, \" \", ctx.textFor(\"of\"), \" \", ctx.total, \" \", ctx.textFor(\"items\"), \"\");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return PagerInfoComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @hidden\n */\nconst packageMetadata = {\n  name: '@progress/kendo-angular-pager',\n  productName: 'Kendo UI for Angular',\n  productCode: 'KENDOUIANGULAR',\n  productCodes: ['KENDOUIANGULAR'],\n  publishDate: 1741163721,\n  version: '18.1.1',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/'\n};\n\n/**\n * @hidden\n */\nconst RESPONSIVE_BREAKPOINT_MEDIUM = 600;\n/**\n * @hidden\n */\nconst RESPONSIVE_BREAKPOINT_LARGE = 768;\nlet PagerComponent = /*#__PURE__*/(() => {\n  var _class17;\n  class PagerComponent {\n    /**\n     * Shows a dropdown for selecting the page size.\n     * When set to `true`, the dropdown will contain the default list of options - 5, 10, 20.\n     * To customize the list of options, set `pageSizeValues` to an array of the desired values.\n     * The array can contain numbers and [PageSizeItem]({% slug api_pager_pagesizeitem %}) objects.\n     */\n    set pageSizeValues(value) {\n      if (typeof value === 'boolean') {\n        this._pageSizeValues = value ? DEFAULT_PAGE_SIZE_VALUES : [];\n      } else {\n        this._pageSizeValues = value;\n      }\n    }\n    /**\n     * Toggles the **Previous** and **Next** buttons.\n     *\n     * @default true\n     */\n\n    /**\n     * If set to `true`, the user can use dedicated shortcuts to interact with the Pager ([see example]({% slug keyboard_navigation_pager %})).\n     * By default, navigation is disabled and the Pager content is accessible in the normal tab sequence.\n     * @default false\n     */\n    set navigable(value) {\n      this._navigable = value;\n      this.navigationService.isNavigable = value;\n    }\n    get navigable() {\n      return this._navigable;\n    }\n    /**\n     * Specifies the padding of all Pager elements.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set size(size) {\n      const newSize = size ? size : DEFAULT_SIZE;\n      this.handleClasses(newSize, 'size');\n      this._size = newSize;\n    }\n    get size() {\n      return this._size;\n    }\n    /**\n     * @hidden\n     * Toggles the Pager responsive functionality.\n     *\n     * @default true\n     */\n\n    get hostTabindex() {\n      return this.navigable ? '0' : '-1';\n    }\n    get dir() {\n      return this.direction;\n    }\n    /**\n     * @hidden\n     */\n    focusHandler(ev) {\n      const isInnerNavigationEnabled = ev.target !== this.element.nativeElement;\n      this.navigationService.toggleInnerNavigation(isInnerNavigationEnabled);\n    }\n    get totalPages() {\n      return Math.ceil((this.total || 0) / this.pageSize);\n    }\n    get currentPage() {\n      return Math.floor((this.skip || 0) / this.pageSize) + 1;\n    }\n    get templateContext() {\n      const context = this._templateContext;\n      context.totalPages = this.totalPages;\n      context.total = this.total;\n      context.skip = this.skip;\n      context.pageSize = this.pageSize;\n      context.currentPage = this.currentPage;\n      return context;\n    }\n    constructor(pagerContext, element, localization, renderer, ngZone, navigationService) {\n      _defineProperty(this, \"pagerContext\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"localization\", void 0);\n      _defineProperty(this, \"renderer\", void 0);\n      _defineProperty(this, \"ngZone\", void 0);\n      _defineProperty(this, \"navigationService\", void 0);\n      _defineProperty(this, \"template\", void 0);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"externalTemplate\", void 0);\n      /**\n       * Represents the total number of data items in the collection.\n       *\n       * @default 0\n       */\n      _defineProperty(this, \"total\", 0);\n      /**\n       * Defines the number of data items to be skipped.\n       *\n       * @default 0\n       */\n      _defineProperty(this, \"skip\", 0);\n      /**\n       * Defines the number of data items per page.\n       */\n      _defineProperty(this, \"pageSize\", void 0);\n      /**\n       * Sets the maximum numeric buttons count before the buttons are collapsed.\n       *\n       * @default 10\n       */\n      _defineProperty(this, \"buttonCount\", 10);\n      /**\n       * Toggles the information about the current page and the total number of records.\n       *\n       * @default true\n       */\n      _defineProperty(this, \"info\", true);\n      /**\n       * Defines the type of the pager.\n       *\n       * @default 'numeric'\n       */\n      _defineProperty(this, \"type\", 'numeric');\n      _defineProperty(this, \"previousNext\", true);\n      _defineProperty(this, \"responsive\", true);\n      /**\n       * Fires when the current page of the Pager is changed ([see example](slug:overview_pager)).\n       * You have to handle the event yourself and page the data.\n       */\n      _defineProperty(this, \"pageChange\", new EventEmitter());\n      /**\n       * Fires when the page size of the Pager is changed.\n       * You have to handle the event yourself and page the data.\n       * If the event is prevented, the page size will remain unchanged ([see example]({% slug pager_events %})).\n       */\n      _defineProperty(this, \"pageSizeChange\", new EventEmitter());\n      _defineProperty(this, \"pagerClass\", true);\n      _defineProperty(this, \"widgetRole\", 'application');\n      _defineProperty(this, \"roleDescription\", 'pager');\n      _defineProperty(this, \"keyShortcuts\", 'Enter ArrowRight ArrowLeft');\n      _defineProperty(this, \"subscriptions\", new Subscription());\n      _defineProperty(this, \"_templateContext\", {});\n      _defineProperty(this, \"_pageSizeValues\", DEFAULT_PAGE_SIZE_VALUES);\n      _defineProperty(this, \"direction\", void 0);\n      _defineProperty(this, \"isInnerNavigationEnabled\", false);\n      _defineProperty(this, \"_navigable\", false);\n      _defineProperty(this, \"_size\", DEFAULT_SIZE);\n      /**\n       * @hidden\n       */\n      _defineProperty(this, \"resizeHandler\", () => {\n        if (this.template?.first && !this.responsive) {\n          return;\n        }\n        const width = this.element.nativeElement.offsetWidth;\n        this.ngZone.runOutsideAngular(() => {\n          setTimeout(() => {\n            const numericButtonsElement = this.element.nativeElement.querySelector('kendo-datapager-numeric-buttons, kendo-pager-numeric-buttons');\n            const pagerInfoElement = this.element.nativeElement.querySelector('.k-pager-info');\n            const pagerPageSizes = this.element.nativeElement.querySelector('.k-pager-sizes');\n            if (numericButtonsElement) {\n              const selectElement = numericButtonsElement.querySelector('select');\n              const numbersElement = numericButtonsElement.querySelector('.k-pager-numbers');\n              if (width < RESPONSIVE_BREAKPOINT_MEDIUM) {\n                this.renderer.removeClass(selectElement, 'k-hidden');\n                this.renderer.addClass(numbersElement, 'k-hidden');\n              } else {\n                this.renderer.addClass(selectElement, 'k-hidden');\n                this.renderer.removeClass(numbersElement, 'k-hidden');\n              }\n            }\n            if (pagerInfoElement) {\n              if (width < RESPONSIVE_BREAKPOINT_LARGE) {\n                this.renderer.addClass(pagerInfoElement, 'k-hidden');\n              } else {\n                this.renderer.removeClass(pagerInfoElement, 'k-hidden');\n              }\n            }\n            if (pagerPageSizes) {\n              if (width < RESPONSIVE_BREAKPOINT_MEDIUM) {\n                this.renderer.addClass(pagerPageSizes, 'k-hidden');\n              } else {\n                this.renderer.removeClass(pagerPageSizes, 'k-hidden');\n              }\n            }\n          });\n        });\n      });\n      this.pagerContext = pagerContext;\n      this.element = element;\n      this.localization = localization;\n      this.renderer = renderer;\n      this.ngZone = ngZone;\n      this.navigationService = navigationService;\n      validatePackage(packageMetadata);\n      this.direction = localization.rtl ? 'rtl' : 'ltr';\n      if (!navigationService) {\n        this.navigationService = inject(PagerNavigationService);\n      }\n      if (!pagerContext) {\n        this.pagerContext = inject(PagerContextService);\n      }\n      this.pagerContext.localization = localization;\n    }\n    ngOnInit() {\n      this.subscriptions.add(this.pagerContext.pageChange.subscribe(this.changePage.bind(this)));\n      this.subscriptions.add(this.pagerContext.pageSizeChange.subscribe(this.changePageSize.bind(this)));\n      this.subscriptions.add(this.localization.changes.subscribe(({\n        rtl\n      }) => {\n        this.direction = rtl ? 'rtl' : 'ltr';\n      }));\n      this.subscriptions.add(this.navigationService.innerNavigationChange.subscribe(this.innerNavigationChange.bind(this)));\n      if (this.navigable) {\n        const wrapper = this.element.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n          this.subscriptions.add(this.renderer.listen(wrapper, 'keydown', this.keyDownHandler.bind(this)));\n        });\n      }\n    }\n    ngAfterViewInit() {\n      this.responsive && this.resizeHandler();\n      this.renderer.setAttribute(this.element.nativeElement, 'aria-label', this.ariaLabel);\n      this.subscriptions.add(this.template.changes.subscribe(() => {\n        this.responsive && this.resizeHandler();\n      }));\n      this.handleClasses(this.size, 'size');\n    }\n    ngOnChanges(changes) {\n      if (anyChanged([\"pageSize\", \"skip\", \"total\"], changes, false)) {\n        this.pagerContext.notifyChanges({\n          pageSize: this.pageSize,\n          skip: this.skip,\n          total: this.total\n        });\n        this.renderer.setAttribute(this.element.nativeElement, 'aria-label', this.ariaLabel);\n      }\n      if (changes['responsive']) {\n        this.responsive && this.resizeHandler();\n      }\n    }\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n    changePage(event) {\n      this.pageChange.emit(event);\n    }\n    /**\n     * @hidden\n     */\n    changePageSize(event) {\n      this.pageSizeChange.emit(event);\n      if (!event.isDefaultPrevented()) {\n        if (event.newPageSize === 'all') {\n          this.pageChange.emit({\n            skip: 0,\n            take: this.total\n          });\n        } else {\n          this.pageChange.emit({\n            skip: 0,\n            take: event.newPageSize\n          });\n        }\n      }\n    }\n    /**\n     * @hidden\n     */\n    onPageSizeChange(event) {\n      this.pageSizeChange.emit(event);\n      if (!event.isDefaultPrevented()) {\n        this.pageChange.emit({\n          skip: this.skip,\n          take: event.newPageSize\n        });\n      }\n    }\n    get ariaLabel() {\n      const localizationMsg = this.localization.get('ariaLabel') || '';\n      return replaceMessagePlaceholder(replaceMessagePlaceholder(localizationMsg, 'currentPage', this.currentPage.toString()), 'totalPages', this.totalPages.toString());\n    }\n    keyDownHandler(e) {\n      const target = e.target;\n      const wrapper = this.element.nativeElement;\n      const isArrowLeftOrPageUp = e.keyCode === Keys.ArrowLeft || e.keyCode === Keys.PageUp;\n      const isArrowRightOrPageDown = e.keyCode === Keys.ArrowRight || e.keyCode === Keys.PageDown;\n      const isEnter = e.keyCode === Keys.Enter;\n      const isHome = e.keyCode === Keys.Home;\n      const isEnd = e.keyCode === Keys.End;\n      const isEsc = e.keyCode === Keys.Escape;\n      const isTab = e.keyCode === Keys.Tab;\n      const isFirstPage = this.currentPage === 1;\n      const isLastPage = this.currentPage === this.totalPages;\n      this.ngZone.run(() => {\n        if (isHome) {\n          if (e.target !== wrapper) {\n            return;\n          }\n          e.preventDefault();\n          !isFirstPage && this.pagerContext.changePage(0);\n        } else if (isEnd) {\n          e.preventDefault();\n          if (e.target !== wrapper) {\n            return;\n          }\n          !isLastPage && this.pagerContext.changePage(this.totalPages - 1);\n        } else if (this.isInnerNavigationEnabled) {\n          if (isEsc) {\n            this.navigationService.toggleInnerNavigation(false);\n            wrapper.focus();\n          } else if (isTab) {\n            this.navigationService.keepFocusWithinComponent(wrapper, target, e);\n          }\n        } else {\n          if (e.target !== wrapper) {\n            return;\n          }\n          if (isArrowLeftOrPageUp) {\n            e.preventDefault();\n            !isFirstPage && this.pagerContext.prevPage();\n          } else if (isArrowRightOrPageDown) {\n            e.preventDefault();\n            !isLastPage && this.pagerContext.nextPage();\n          } else if (isEnter) {\n            e.preventDefault();\n            const [firstFocusable] = this.navigationService.getFirstAndLastFocusable(wrapper);\n            this.navigationService.toggleInnerNavigation(true);\n            firstFocusable?.focus();\n          }\n        }\n      });\n    }\n    innerNavigationChange(value) {\n      this.isInnerNavigationEnabled = value;\n    }\n    handleClasses(value, input) {\n      const elem = this.element.nativeElement;\n      const classes = getStylingClasses('pager', input, this[input], value);\n      if (classes.toRemove) {\n        this.renderer.removeClass(elem, classes.toRemove);\n      }\n      if (classes.toAdd) {\n        this.renderer.addClass(elem, classes.toAdd);\n      }\n    }\n  }\n  _class17 = PagerComponent;\n  _defineProperty(PagerComponent, \"\\u0275fac\", function _class17_Factory(t) {\n    return new (t || _class17)(i0.ɵɵdirectiveInject(PagerContextService, 12), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PagerNavigationService, 12));\n  });\n  _defineProperty(PagerComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class17,\n    selectors: [[\"kendo-datapager\"], [\"kendo-pager\"]],\n    contentQueries: function _class17_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PagerTemplateDirective, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t);\n      }\n    },\n    hostVars: 7,\n    hostBindings: function _class17_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focusin\", function _class17_focusin_HostBindingHandler($event) {\n          return ctx.focusHandler($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.widgetRole)(\"aria-roledescription\", ctx.roleDescription)(\"aria-keyshortcuts\", ctx.keyShortcuts)(\"tabindex\", ctx.hostTabindex)(\"dir\", ctx.dir);\n        i0.ɵɵclassProp(\"k-pager\", ctx.pagerClass);\n      }\n    },\n    inputs: {\n      externalTemplate: \"externalTemplate\",\n      total: \"total\",\n      skip: \"skip\",\n      pageSize: \"pageSize\",\n      buttonCount: \"buttonCount\",\n      info: \"info\",\n      type: \"type\",\n      pageSizeValues: \"pageSizeValues\",\n      previousNext: \"previousNext\",\n      navigable: \"navigable\",\n      size: \"size\",\n      responsive: \"responsive\"\n    },\n    outputs: {\n      pageChange: \"pageChange\",\n      pageSizeChange: \"pageSizeChange\"\n    },\n    exportAs: [\"kendoDataPager\", \"kendoPager\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([LocalizationService, PagerContextService, PagerNavigationService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.pager'\n    }]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 6,\n    vars: 4,\n    consts: function () {\n      let i18n_6;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the first page button in the Pager\n         * @meaning kendo.pager.firstPage\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_7 = goog.getMsg(\"Go to the first page\");\n        i18n_6 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_7;\n      } else {\n        i18n_6 = $localize`:kendo.pager.firstPage|The label for the first page button in the Pager:Go to the first page`;\n      }\n      let i18n_8;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the previous page button in the Pager\n         * @meaning kendo.pager.previousPage\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_9 = goog.getMsg(\"Go to the previous page\");\n        i18n_8 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_9;\n      } else {\n        i18n_8 = $localize`:kendo.pager.previousPage|The label for the previous page button in the Pager:Go to the previous page`;\n      }\n      let i18n_10;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the next page button in the Pager\n         * @meaning kendo.pager.nextPage\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_11 = goog.getMsg(\"Go to the next page\");\n        i18n_10 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_11;\n      } else {\n        i18n_10 = $localize`:kendo.pager.nextPage|The label for the next page button in the Pager:Go to the next page`;\n      }\n      let i18n_12;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the last page button in the Pager\n         * @meaning kendo.pager.lastPage\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_13 = goog.getMsg(\"Go to the last page\");\n        i18n_12 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_13;\n      } else {\n        i18n_12 = $localize`:kendo.pager.lastPage|The label for the last page button in the Pager:Go to the last page`;\n      }\n      let i18n_14;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label before the current page number in the Pager\n         * @meaning kendo.pager.page\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_15 = goog.getMsg(\"Page\");\n        i18n_14 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_15;\n      } else {\n        i18n_14 = $localize`:kendo.pager.page|The label before the current page number in the Pager:Page`;\n      }\n      let i18n_16;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label before the total pages number in the Pager\n         * @meaning kendo.pager.of\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_17 = goog.getMsg(\"of\");\n        i18n_16 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_17;\n      } else {\n        i18n_16 = $localize`:kendo.pager.of|The label before the total pages number in the Pager:of`;\n      }\n      let i18n_18;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the pager input in the Pager\n         * @meaning kendo.pager.pageNumberInputTitle\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_19 = goog.getMsg(\"Page Number\");\n        i18n_18 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_19;\n      } else {\n        i18n_18 = $localize`:kendo.pager.pageNumberInputTitle|The label for the pager input in the Pager:Page Number`;\n      }\n      let i18n_20;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label after the total pages number in the Pager\n         * @meaning kendo.pager.items\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_21 = goog.getMsg(\"items\");\n        i18n_20 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_21;\n      } else {\n        i18n_20 = $localize`:kendo.pager.items|The label after the total pages number in the Pager:items`;\n      }\n      let i18n_22;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the page size chooser in the Pager\n         * @meaning kendo.pager.itemsPerPage\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_23 = goog.getMsg(\"items per page\");\n        i18n_22 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_23;\n      } else {\n        i18n_22 = $localize`:kendo.pager.itemsPerPage|The label for the page size chooser in the Pager:items per page`;\n      }\n      let i18n_24;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the title and aria-label attributes applied to the page chooser in the Pager\n         * @meaning kendo.pager.selectPage\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_25 = goog.getMsg(\"Select page\");\n        i18n_24 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_25;\n      } else {\n        i18n_24 = $localize`:kendo.pager.selectPage|The text of the title and aria-label attributes applied to the page chooser in the Pager:Select page`;\n      }\n      let i18n_26;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the aria-label attribute applied to the input element for entering the page number.\n         * @meaning kendo.pager.inputLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_27 = goog.getMsg(\"Type a page number\");\n        i18n_26 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_27;\n      } else {\n        i18n_26 = $localize`:kendo.pager.inputLabel|The text of the aria-label attribute applied to the input element for entering the page number.:Type a page number`;\n      }\n      let i18n_28;\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The value of the aria-label attribute of the Pager\n         * @meaning kendo.pager.ariaLabel\n         */\n        const MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_29 = goog.getMsg(\"{$interpolation}\", {\n          \"interpolation\": \"\\uFFFD0\\uFFFD\"\n        }, {\n          original_code: {\n            \"interpolation\": \"{{ 'Page navigation, page {currentPage} of {totalPages}' }}\"\n          }\n        });\n        i18n_28 = MSG_C__USERS_MOBILE_PROGRAMMING_DOCUMENTS_ANGULAR_PWA_BOILERPLATE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PAGER_FESM2022_PROGRESS_KENDO_ANGULAR_PAGER_MJS_29;\n      } else {\n        i18n_28 = $localize`:kendo.pager.ariaLabel|The value of the aria-label attribute of the Pager:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n      }\n      return [[\"kendoPagerLocalizedMessages\", \"\", \"firstPage\", i18n_6, \"previousPage\", i18n_8, \"nextPage\", i18n_10, \"lastPage\", i18n_12, \"page\", i18n_14, \"of\", i18n_16, \"pageNumberInputTitle\", i18n_18, \"items\", i18n_20, \"itemsPerPage\", i18n_22, \"selectPage\", i18n_24, \"inputLabel\", i18n_26, 6, \"ariaLabel\"], [\"ariaLabel\", i18n_28], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\", \"ngIfElse\"], [\"default\", \"\"], [3, \"resize\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"k-pager-numbers-wrap\"], [3, \"size\", 4, \"ngIf\"], [3, \"size\", \"buttonCount\", 4, \"ngIf\"], [3, \"size\", \"pageSizes\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"size\"], [3, \"size\", \"buttonCount\"], [3, \"size\", \"pageSizes\"], [3, \"resize\"]];\n    },\n    template: function _class17_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainerStart(0, 0);\n        i0.ɵɵi18nAttributes(1, 1);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(2, _class17_ng_container_2_Template, 1, 2, \"ng-container\", 2);\n        i0.ɵɵtemplate(3, _class17_ng_template_3_Template, 7, 6, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(5, _class17_kendo_resize_sensor_5_Template, 1, 0, \"kendo-resize-sensor\", 4);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(4);\n        i0.ɵɵi18nExp(\"Page navigation, page {currentPage} of {totalPages}\");\n        i0.ɵɵi18nApply(1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.template.first == null ? null : ctx.template.first.templateRef)(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.responsive);\n      }\n    },\n    dependencies: [LocalizedMessagesDirective, NgIf, NgTemplateOutlet, PagerPrevButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerNextButtonsComponent, PagerPageSizesComponent, PagerInfoComponent, ResizeSensorComponent],\n    encapsulation: 2\n  }));\n  return PagerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Represents the Kendo UI PagerSpacer component for Angular.\n * Used to give additional white space between the Pager inner elements,\n * and provides a way for customizing the spacer width.\n */\nlet PagerSpacerComponent = /*#__PURE__*/(() => {\n  var _class18;\n  class PagerSpacerComponent {\n    constructor() {\n      _defineProperty(this, \"hostClass\", true);\n      /**\n       * Specifies the width of the PagerSpacer.\n       * Accepts the [string values of the CSS `flex-basis` property](https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis).\n       *\n       * If not set, the PagerSpacer will take all the available space.\n       */\n      _defineProperty(this, \"width\", void 0);\n    }\n    get sizedClass() {\n      return isPresent(this.width);\n    }\n    get flexBasisStyle() {\n      return this.width;\n    }\n  }\n  _class18 = PagerSpacerComponent;\n  _defineProperty(PagerSpacerComponent, \"\\u0275fac\", function _class18_Factory(t) {\n    return new (t || _class18)();\n  });\n  _defineProperty(PagerSpacerComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class18,\n    selectors: [[\"kendo-pager-spacer\"]],\n    hostVars: 6,\n    hostBindings: function _class18_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"flex-basis\", ctx.flexBasisStyle);\n        i0.ɵɵclassProp(\"k-spacer\", ctx.hostClass)(\"k-spacer-sized\", ctx.sizedClass);\n      }\n    },\n    inputs: {\n      width: \"width\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function _class18_Template(rf, ctx) {},\n    encapsulation: 2\n  }));\n  return PagerSpacerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Utility array that contains all `@progress/kendo-angular-pager` related components and directives\n */\nconst KENDO_PAGER = [CustomMessagesComponent, PagerFocusableDirective, PagerInfoComponent, PagerInputComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerPageSizesComponent, PagerPrevButtonsComponent, PagerTemplateDirective, PagerComponent, PagerSpacerComponent];\n\n//IMPORTANT: NgModule export kept for backwards compatibility\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Pager component. Imports `PagerModule` into the\n * [root module](link:site.data.urls.angular['ngmodules']#angular-modularity)\n * of your application or into any other sub-module that will use the Pager component.\n *\n * @example\n * ```ts-no-run\n * import { NgModule } from '@angular/core';\n * import { BrowserModule } from '@angular/platform-browser';\n * import { PagerModule } from '@progress/kendo-angular-pager';\n * import { AppComponent } from './app.component';\n *\n * _@NgModule({\n *     bootstrap:    [AppComponent],\n *     declarations: [AppComponent],\n *     imports:      [BrowserModule, PagerModule]\n * })\n * export class AppModule {\n * }\n * ```\n */\nlet PagerModule = /*#__PURE__*/(() => {\n  var _class19;\n  class PagerModule {}\n  _class19 = PagerModule;\n  _defineProperty(PagerModule, \"\\u0275fac\", function _class19_Factory(t) {\n    return new (t || _class19)();\n  });\n  _defineProperty(PagerModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _class19\n  }));\n  _defineProperty(PagerModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [IconsService, PopupService, ResizeBatchService],\n    imports: [PagerInputComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerPageSizesComponent, PagerPrevButtonsComponent, PagerComponent]\n  }));\n  return PagerModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CustomMessagesComponent, KENDO_PAGER, LocalizedMessagesDirective, PageSizeChangeEvent, PagerComponent, PagerContextService, PagerFocusableDirective, PagerInfoComponent, PagerInputComponent, PagerModule, PagerNavigationService, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerPageSizesComponent, PagerPrevButtonsComponent, PagerSpacerComponent, PagerTemplateDirective };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}