{"ast":null,"code":"import { isPresent } from './utils';\nconst getterCache = {};\nconst FIELD_REGEX = /\\[(?:(\\d+)|['\"](.*?)['\"])\\]|((?:(?!\\[.*?\\]|\\.).)+)/g;\n// tslint:disable-next-line:no-string-literal\ngetterCache['undefined'] = obj => obj;\n/**\n * @hidden\n */\nexport const getter = (field, safe) => {\n  const key = field + safe;\n  if (getterCache[key]) {\n    return getterCache[key];\n  }\n  const fields = [];\n  field.replace(FIELD_REGEX, (_, index, indexAccessor, field) => {\n    fields.push(isPresent(index) ? index : indexAccessor || field);\n    return undefined;\n  });\n  getterCache[key] = obj => {\n    let result = obj;\n    for (let idx = 0; idx < fields.length; idx++) {\n      result = result[fields[idx]];\n      if (!isPresent(result) && safe) {\n        return result;\n      }\n    }\n    return result;\n  };\n  return getterCache[key];\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}