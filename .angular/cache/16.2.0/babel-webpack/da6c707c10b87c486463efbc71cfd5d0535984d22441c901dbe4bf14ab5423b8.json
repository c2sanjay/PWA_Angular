{"ast":null,"code":"import { cloneDate } from '@progress/kendo-date-math';\nconst isObject = value => value && typeof value === \"object\" && !Array.isArray(value);\nconst isHtmlElement = element => element instanceof HTMLElement;\nconst dateSetter = method => (date, value) => {\n  const clone = cloneDate(date);\n  clone[method](value);\n  return clone;\n};\n/**\n * @hidden\n */\nexport const isPresent = value => value !== undefined && value !== null;\n/**\n * @hidden\n */\nexport const isDocumentAvailable = () => !!document;\n/**\n * @hidden\n */\nexport const isNumber = value => isPresent(value) && typeof value === \"number\" && !Number.isNaN(value);\n/**\n * @hidden\n */\nexport const parseToInt = value => parseInt(value, 10);\n/**\n * @hidden\n */\nexport const isParseableToInt = value => isNumber(parseToInt(value)) && /^[0-9]+$/.test(value);\n/**\n * @hidden\n */\nexport const clamp = (value, min, max) => Math.min(max, Math.max(min, value));\n/**\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport const extend = (...args) => Object.assign(...args);\n/**\n * @hidden\n */\nexport const deepExtend = (target, ...sources) => {\n  if (!sources.length) {\n    return target;\n  }\n  const source = sources.shift();\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (!Object.prototype.hasOwnProperty.call(source, key) || key === \"__proto__\" || key === \"constructor\" || key === \"prototype\") {\n        continue;\n      }\n      if (isHtmlElement(source[key])) {\n        target[key] = source[key];\n      } else if (isObject(source[key]) && !(source[key] instanceof Date)) {\n        if (!target[key] || !isObject(target[key])) {\n          extend(target, {\n            [key]: {}\n          });\n        }\n        deepExtend(target[key], source[key]);\n      } else {\n        extend(target, {\n          [key]: source[key]\n        });\n      }\n    }\n  }\n  return deepExtend(target, ...sources);\n};\n/**\n * @hidden\n */\n// eslint-disable-next-line\nexport const noop = () => {};\n/**\n * @hidden\n */\nexport const isFunction = fn => typeof fn === \"function\";\n/**\n * @hidden\n */\nexport const cropTwoDigitYear = date => {\n  if (!isPresent(date) || isNaN(date.getTime())) {\n    return 0;\n  }\n  return Number(date.getFullYear().toString().slice(-2));\n};\n/**\n * @hidden\n */\nexport const setYears = dateSetter('setFullYear');\n/**\n * @hidden\n */\nexport const millisecondDigitsInFormat = format => {\n  const result = format && format.match(/S+(\\1)/);\n  return result ? result[0].length : 0;\n};\n/**\n * @hidden\n */\nexport const millisecondStepFor = digits => {\n  return Math.pow(10, 3 - digits);\n};\n/**\n * @hidden\n */\nexport const areDatePartsEqualTo = (date, year, month, day, hour, minutes, seconds, milliseconds) => {\n  if (date && date.getFullYear() === year && date.getMonth() === month && date.getDate() === day && date.getHours() === hour && date.getMinutes() === minutes && date.getSeconds() === seconds && date.getMilliseconds() === milliseconds) {\n    return true;\n  }\n  return false;\n};\n/**\n * @hidden\n */\nexport const isValidDate = value => isPresent(value) && value.getTime && isNumber(value.getTime());\n/**\n * @hidden\n */\nexport const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) || navigator.maxTouchPoints && navigator.maxTouchPoints > 2 && /Macintosh/i.test(navigator.userAgent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}