{"ast":null,"code":"const reComment = /\\/\\*[\\s\\S]*?\\*\\//g;\n/*\n([^\\s:;]+?)\\s*:\\s*         # Property name and colon\n(\n  (?:\n    (?:                    # Begin alternation\n      url\\(                # Match 'url('\n        \\s*\n        (?:\n          (?:[^\"')\\\\]|\\\\.)*  # Content inside url(), excluding quotes and closing parenthesis\n          |\n          \"(?:[^\"\\\\]|\\\\.)*\"  # Double-quoted strings, handling escaped characters\n          |\n          '(?:[^'\\\\]|\\\\.)*'  # Single-quoted strings, handling escaped characters\n        )\n        \\s*\n      \\)\n      |\n      \"(?:[^\"\\\\]|\\\\.)*\"     # Double-quoted strings, handling escaped characters\n      |\n      '(?:[^'\\\\]|\\\\.)*'     # Single-quoted strings, handling escaped characters\n      |\n      [^;\"']                # Any character except ';', double or single quotes\n    )*?                     # Repeat zero or more times, non-greedy\n    \\s*\n  )\n)\n(?=;|$)                     # Lookahead for ';' or end of string\n*/\nconst reDeclaration = /([^\\s:;]+?)\\s*:\\s*((?:(?:url\\(\\s*(?:(?:[^\"')\\\\]|\\\\.)*|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')\\s*\\)|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|[^;\"'])*?)\\s*)(?=;|$)/gi;\nconst reDoubleQuoted = /&quot;|&#34;|&#x22;/gi;\nconst reSingleQuoted = /&apos;|&#39;|&#x27;/gi;\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\nconst empty = '';\nfunction replaceQuoteEntities(str) {\n  return str.replace(reDoubleQuoted, doubleQuote).replace(reSingleQuoted, singleQuote);\n}\n/**\n * Parse inline styles string into object.\n *\n * @param styleString - inline styles string\n * @returns object with styles\n */\nexport function parseInlineStyles(styleString) {\n  const styleObject = {};\n  const input = replaceQuoteEntities((styleString || empty).replace(reComment, empty));\n  let match = reDeclaration.exec(input),\n    property,\n    value;\n  while (match !== null) {\n    property = match[1].trim();\n    value = match[2].trim();\n    styleObject[property] = value;\n    match = reDeclaration.exec(input);\n  }\n  return styleObject;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}