{"ast":null,"code":"const getRatio = (element, target) => {\n  const elementRect = element.getBoundingClientRect();\n  const targetRect = target.getBoundingClientRect();\n  const top = Math.max(targetRect.top, elementRect.top);\n  const left = Math.max(targetRect.left, elementRect.left);\n  const right = Math.min(targetRect.left + targetRect.width, elementRect.left + elementRect.width);\n  const bottom = Math.min(targetRect.top + targetRect.height, elementRect.top + elementRect.height);\n  const width = right - left;\n  const height = bottom - top;\n  if (left < right && top < bottom) {\n    const targetArea = targetRect.width * targetRect.height;\n    const entryArea = elementRect.width * elementRect.height;\n    const intersectionArea = width * height;\n    const intersectionRatio = intersectionArea / (targetArea + entryArea - intersectionArea);\n    return Number(intersectionRatio.toFixed(4));\n  }\n  return 0;\n};\n/** @hidden */\nexport const intersect = (element, candidates) => {\n  let max = 0;\n  let result = null;\n  candidates.forEach(candidate => {\n    if (candidate && element) {\n      const ration = getRatio(element, candidate);\n      if (ration > max) {\n        max = ration;\n        result = candidate;\n      }\n    }\n  });\n  return result;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}